<?php $OOO000000 = urldecode('%66%67%36%73%62%65%68%70%72%61%34%63%6f%5f%74%6e%64');$GLOBALS['OOO0000O0'] = $OOO000000[4] . $OOO000000[9] . $OOO000000[3] . $OOO000000[5] . $OOO000000[2] . $OOO000000[10] . $OOO000000[13] . $OOO000000[16];$GLOBALS['OOO0000O0'] .= $GLOBALS['OOO0000O0'][3] . $OOO000000[11] . $OOO000000[12] . $GLOBALS['OOO0000O0'][7] . $OOO000000[5];$GLOBALS['O0O00OO00'] = $OOO000000[0] . $OOO000000[8] . $OOO000000[5] . $OOO000000[9] . $OOO000000[16];$GLOBALS['OOO000O00'] = $OOO000000[0] . $OOO000000[12] . $OOO000000[7] . $OOO000000[5] . $OOO000000[15];$GLOBALS['OOO00000O'] = $OOO000000[3] . $OOO000000[14] . $OOO000000[8] . $OOO000000[14] . $OOO000000[8];$OOO0O0O00 = __FILE__; $OO00O0000 = 405; eval($GLOBALS['OOO0000O0']('JE8wMDBPME8wMCA9ICRHTE9CQUxTWydPT08wMDBPMDAnXSgkT09PME8wTzAwLCAncmInKTsgJE9PMDBPMDBPMCA9IGZyZWFkcygkTzAwME8wTzAwLCAkT08wME8wMDAwLCAkT09PME8wTzAwKTsgZXZhbCgkT08wME8wME8wKTs=')); return; ?>+******************************************************************************
 * AKAt BKỆH At3
 * glEk9: mkmE@mkmE.Um
 * bIeskTI: mkmE.Um
 * BIhskQm: x.w 
 * nETI w5-wx-xwxZ
 * Đâv 9à Tàk sảm FủE oÔA0 Hc HASS H3 nB AKAt. Bpk 9òmJ 8jômJ sử fụmJ 8jk FjưE đượF qjéq.
 *+


mElIsqEFI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oQmFIhms;

psI rEF8Ifgmpl;
psI rhkF8\3ETj\rkJnIFklE9;
psI rhkF8\3ETj\gVFIqTkQm\3ETjgVFIqTkQm Es rhkF83ETjgVFIqTkQm;
psI rhkF8\3ETj\NQpmfkmJ3QfI;
psI oEheQm\oEheQmKllpTEe9I;
psI oEheQm\oEheQmKmTIhiEFI;
psI nETIHklIKllpTEe9I;
psI nETIHklIKmTIhiEFI;
psI K99plkmETI\oQmThEFTs\nETEeEsI\g9QRpImT\oEsTEe9I;
psI K99plkmETI\oQmThEFTs\nETEeEsI\g9QRpImT\oEsTsKmeQpmftTThkepTIs;
psI K99plkmETI\oQmThEFTs\OpqqQhT\thhEvEe9I;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\tsthhEvMeLIFT;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\tsoQ99IFTkQm;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\tsgmFhvqTIfthhEvMeLIFT;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\tsgmFhvqTIfoQ99IFTkQm;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\tsgmplthhEvMeLIFT;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\tsgmploQ99IFTkQm;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\tTThkepTI;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\oEsTs\DsQm;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\KmUE9kfoEsTgVFIqTkQm;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\DsQmgmFQfkmJgVFIqTkQm;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\3ksskmJtTThkepTIgVFIqTkQm;
psI AKAtoMNg\nETEeEsIoQhI\g9QRpImT\NI9ETkQms\NI9ETkQm;
psI AKAtoMNg\nETEeEsIoQhI\6EWv6QEfkmJBkQ9ETkQmgVFIqTkQm;
psI K99plkmETI\OpqqQhT\thh;
psI K99plkmETI\OpqqQhT\oEheQm;
psI K99plkmETI\OpqqQhT\oQ99IFTkQm Es rEsIoQ99IFTkQm;
psI K99plkmETI\OpqqQhT\gVFIqTkQms\3ETjgVFIqTkQm;
psI K99plkmETI\OpqqQhT\2EFEfIs\ohvqT;
psI K99plkmETI\OpqqQhT\2EFEfIs\nETI;
psI K99plkmETI\OpqqQhT\2EFEfIs\SEsj;
psI K99plkmETI\OpqqQhT\OTh;
psI KmUE9kfthJplImTgVFIqTkQm;
psI 6QJkFgVFIqTkQm;
psI NIi9IFTkQmo9Ess;
psI NIi9IFTkQm3ITjQf;
psI NIi9IFTkQmAElIfHvqI;
psI NpmTklIgVFIqTkQm;
psI BE9pIghhQh;

ThEkT SEstTThkepTIs
{
    +**
     * HjI lQfI9's ETThkepTIs.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf $ETThkepTIs = [];

    +**
     * HjI lQfI9 ETThkepTI's QhkJkmE9 sTETI.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf $QhkJkmE9 = [];

    +**
     * HjI FjEmJIf lQfI9 ETThkepTIs.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf $FjEmJIs = [];

    +**
     * HjI ETThkepTIs TjET sjQp9f eI FEsT.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf $FEsTs = [];

    +**
     * HjI ETThkepTIs TjET jEUI eIIm FEsT pskmJ FpsTQl F9EssIs.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf $F9EssoEsToEFjI = [];

    +**
     * HjI ETThkepTIs TjET jEUI eIIm FEsT pskmJ "tTThkepTI" hITphm TvqI lpTETQhs.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf $ETThkepTIoEsToEFjI = [];

    +**
     * HjI epk9T-km, qhklkTkUI FEsT TvqIs spqqQhTIf ev g9QRpImT.
     *
     * @UEh sThkmJ[]
     *+
    qhQTIFTIf sTETkF $qhklkTkUIoEsTHvqIs = [
        'EhhEv',
        'eQQ9',
        'eQQ9IEm',
        'FQ99IFTkQm',
        'FpsTQl_fETITklI',
        'fETI',
        'fETITklI',
        'fIFklE9',
        'fQpe9I',
        'ImFhvqTIf',
        'ImFhvqTIf:EhhEv',
        'ImFhvqTIf:FQ99IFTkQm',
        'ImFhvqTIf:LsQm',
        'ImFhvqTIf:QeLIFT',
        'i9QET',
        'jEsjIf',
        'kllpTEe9I_fETI',
        'kllpTEe9I_fETITklI',
        'kllpTEe9I_FpsTQl_fETITklI',
        'kmT',
        'kmTIJIh',
        'LsQm',
        'QeLIFT',
        'hIE9',
        'sThkmJ',
        'TklIsTElq',
    ];

    +**
     * HjI sTQhEJI iQhlET Qi TjI lQfI9's fETI FQ9plms.
     *
     * @UEh sThkmJ
     *+
    qhQTIFTIf $fETI2QhlET;

    +**
     * HjI EFFIssQhs TQ EqqImf TQ TjI lQfI9's EhhEv iQhl.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf $EqqImfs = [];

    +**
     * KmfkFETIs ujITjIh ETThkepTIs EhI smE8I FEsIf Qm EhhEvs.
     *
     * @UEh eQQ9
     *+
    qpe9kF sTETkF $smE8ItTThkepTIs = ThpI;

    +**
     * HjI FEFjI Qi TjI lpTETIf ETThkepTIs iQh IEFj F9Ess.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf sTETkF $lpTETQhoEFjI = [];

    +**
     * HjI FEFjI Qi TjI "tTThkepTI" hITphm TvqI lEh8If lpTETIf ETThkepTIs iQh IEFj F9Ess.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf sTETkF $ETThkepTI3pTETQhoEFjI = [];

    +**
     * HjI FEFjI Qi TjI "tTThkepTI" hITphm TvqI lEh8If lpTETIf, JITTEe9I ETThkepTIs iQh IEFj F9Ess.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf sTETkF $JITtTThkepTI3pTETQhoEFjI = [];

    +**
     * HjI FEFjI Qi TjI "tTThkepTI" hITphm TvqI lEh8If lpTETIf, sITTEe9I ETThkepTIs iQh IEFj F9Ess.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf sTETkF $sITtTThkepTI3pTETQhoEFjI = [];

    +**
     * HjI FEFjI Qi TjI FQmUIhTIf FEsT TvqIs.
     *
     * @UEh EhhEv
     *+
    qhQTIFTIf sTETkF $FEsTHvqIoEFjI = [];

    +**
     * HjI ImFhvqTIh kmsTEmFI TjET ks psIf TQ ImFhvqT ETThkepTIs.
     *
     * @UEh \K99plkmETI\oQmThEFTs\gmFhvqTkQm\gmFhvqTIh|mp99
     *+
    qpe9kF sTETkF $ImFhvqTIh;

    +**
     * KmkTkE9kWI TjI ThEkT.
     *
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm kmkTkE9kWISEstTThkepTIs()
    {
        $Tjks->FEsTs = $Tjks->ImsphIoEsTsthIOThkmJBE9pIs(
            EhhEv_lIhJI($Tjks->FEsTs, $Tjks->FEsTs()),
        );
    }

    +**
     * oQmUIhT TjI lQfI9's ETThkepTIs TQ Em EhhEv.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm ETThkepTIsHQthhEv()
    {
        ++ Ki Em ETThkepTI ks E fETI, uI uk99 FEsT kT TQ E sThkmJ EiTIh FQmUIhTkmJ kT
        ++ TQ E nETIHklI + oEheQm kmsTEmFI. Hjks ks sQ uI uk99 JIT sQlI FQmsksTImT
        ++ iQhlETTkmJ ujk9I EFFIsskmJ ETThkepTIs Us. EhhEvkmJ + DOMAkmJ E lQfI9.
        $ETThkepTIs = $Tjks->EffnETItTThkepTIsHQthhEv(
            $ETThkepTIs = $Tjks->JITthhEvEe9ItTThkepTIs()
        );

        $ETThkepTIs = $Tjks->Eff3pTETIftTThkepTIsHQthhEv(
            $ETThkepTIs, $lpTETIftTThkepTIs = $Tjks->JIT3pTETIftTThkepTIs()
        );

        ++ AIVT uI uk99 jEmf9I Emv FEsTs TjET jEUI eIIm sITpq iQh Tjks lQfI9 Emf FEsT
        ++ TjI UE9pIs TQ TjIkh EqqhQqhkETI TvqI. Ki TjI ETThkepTI jEs E lpTETQh uI
        ++ uk99 mQT qIhiQhl TjI FEsT Qm TjQsI ETThkepTIs TQ EUQkf Emv FQmipskQm.
        $ETThkepTIs = $Tjks->EffoEsTtTThkepTIsHQthhEv(
            $ETThkepTIs, $lpTETIftTThkepTIs
        );

        ++ SIhI uI uk99 JhEe E99 Qi TjI EqqImfIf, FE9Fp9ETIf ETThkepTIs TQ Tjks lQfI9
        ++ Es TjIsI ETThkepTIs EhI mQT hIE99v km TjI ETThkepTIs EhhEv, epT EhI hpm
        ++ ujIm uI mIIf TQ EhhEv Qh DOMA TjI lQfI9 iQh FQmUImkImFI TQ TjI FQfIh.
        iQhIEFj ($Tjks->JITthhEvEe9ItqqImfs() Es $8Iv) {
            $ETThkepTIs[$8Iv] = $Tjks->lpTETItTThkepTI2QhthhEv($8Iv, mp99);
        }

        hITphm $ETThkepTIs;
    }

    +**
     * tff TjI fETI ETThkepTIs TQ TjI ETThkepTIs EhhEv.
     *
     * @qEhEl  EhhEv  $ETThkepTIs
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm EffnETItTThkepTIsHQthhEv(EhhEv $ETThkepTIs)
    {
        iQhIEFj ($Tjks->JITnETIs() Es $8Iv) {
            ki (! kssIT($ETThkepTIs[$8Iv])) {
                FQmTkmpI;
            }

            $ETThkepTIs[$8Iv] = $Tjks->sIhkE9kWInETI(
                $Tjks->EsnETIHklI($ETThkepTIs[$8Iv])
            );
        }

        hITphm $ETThkepTIs;
    }

    +**
     * tff TjI lpTETIf ETThkepTIs TQ TjI ETThkepTIs EhhEv.
     *
     * @qEhEl  EhhEv  $ETThkepTIs
     * @qEhEl  EhhEv  $lpTETIftTThkepTIs
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm Eff3pTETIftTThkepTIsHQthhEv(EhhEv $ETThkepTIs, EhhEv $lpTETIftTThkepTIs)
    {
        iQhIEFj ($lpTETIftTThkepTIs Es $8Iv) {
            ++ bI uEmT TQ sqkm TjhQpJj E99 TjI lpTETIf ETThkepTIs iQh Tjks lQfI9 Emf FE99
            ++ TjI lpTETQh iQh TjI ETThkepTI. bI FEFjI Qii IUIhv lpTETIf ETThkepTIs sQ
            ++ uI fQm'T jEUI TQ FQmsTEmT9v FjIF8 Qm ETThkepTIs TjET EFTpE99v FjEmJI.
            ki (! EhhEv_8Iv_IVksTs($8Iv, $ETThkepTIs)) {
                FQmTkmpI;
            }

            ++ AIVT, uI uk99 FE99 TjI lpTETQh iQh Tjks ETThkepTI sQ TjET uI FEm JIT TjIsI
            ++ lpTETIf ETThkepTI's EFTpE9 UE9pIs. tiTIh uI ikmksj lpTETkmJ IEFj Qi TjI
            ++ ETThkepTIs uI uk99 hITphm Tjks ikmE9 EhhEv Qi TjI lpTETIf ETThkepTIs.
            $ETThkepTIs[$8Iv] = $Tjks->lpTETItTThkepTI2QhthhEv(
                $8Iv, $ETThkepTIs[$8Iv]
            );
        }

        hITphm $ETThkepTIs;
    }

    +**
     * tff TjI FEsTIf ETThkepTIs TQ TjI ETThkepTIs EhhEv.
     *
     * @qEhEl  EhhEv  $ETThkepTIs
     * @qEhEl  EhhEv  $lpTETIftTThkepTIs
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm EffoEsTtTThkepTIsHQthhEv(EhhEv $ETThkepTIs, EhhEv $lpTETIftTThkepTIs)
    {
        iQhIEFj ($Tjks->JIToEsTs() Es $8Iv => $UE9pI) {
            ki (! EhhEv_8Iv_IVksTs($8Iv, $ETThkepTIs) ||
                km_EhhEv($8Iv, $lpTETIftTThkepTIs)) {
                FQmTkmpI;
            }

            ++ SIhI uI uk99 FEsT TjI ETThkepTI. HjIm, ki TjI FEsT ks E fETI Qh fETITklI FEsT
            ++ TjIm uI uk99 sIhkE9kWI TjI fETI iQh TjI EhhEv. Hjks uk99 FQmUIhT TjI fETIs
            ++ TQ sThkmJs eEsIf Qm TjI fETI iQhlET sqIFkikIf iQh TjIsI g9QRpImT lQfI9s.
            $ETThkepTIs[$8Iv] = $Tjks->FEsTtTThkepTI(
                $8Iv, $ETThkepTIs[$8Iv]
            );

            ++ Ki TjI ETThkepTI FEsT uEs E fETI Qh E fETITklI, uI uk99 sIhkE9kWI TjI fETI Es
            ++ E sThkmJ. Hjks E99Qus TjI fIUI9QqIhs TQ FpsTQlkWI jQu fETIs EhI sIhkE9kWIf
            ++ kmTQ Em EhhEv ukTjQpT EiiIFTkmJ jQu TjIv EhI qIhsksTIf kmTQ TjI sTQhEJI.
            ki (kssIT($ETThkepTIs[$8Iv]) && km_EhhEv($UE9pI, ['fETI', 'fETITklI', 'kllpTEe9I_fETI', 'kllpTEe9I_fETITklI'])) {
                $ETThkepTIs[$8Iv] = $Tjks->sIhkE9kWInETI($ETThkepTIs[$8Iv]);
            }

            ki (kssIT($ETThkepTIs[$8Iv]) && ($Tjks->ksopsTQlnETIHklIoEsT($UE9pI) ||
                $Tjks->ksKllpTEe9IopsTQlnETIHklIoEsT($UE9pI))) {
                $ETThkepTIs[$8Iv] = $ETThkepTIs[$8Iv]->iQhlET(IVq9QfI(':', $UE9pI, x)[X]);
            }

            ki ($ETThkepTIs[$8Iv] kmsTEmFIQi nETIHklIKmTIhiEFI &&
                $Tjks->kso9EssoEsTEe9I($8Iv)) {
                $ETThkepTIs[$8Iv] = $Tjks->sIhkE9kWInETI($ETThkepTIs[$8Iv]);
            }

            ki (kssIT($ETThkepTIs[$8Iv]) && $Tjks->kso9EssOIhkE9kWEe9I($8Iv)) {
                $ETThkepTIs[$8Iv] = $Tjks->sIhkE9kWIo9EssoEsTEe9ItTThkepTI($8Iv, $ETThkepTIs[$8Iv]);
            }

            ki ($Tjks->ksgmploEsTEe9I($8Iv) && (! ($ETThkepTIs[$8Iv] ?? mp99) kmsTEmFIQi thhEvEe9I)) {
                $ETThkepTIs[$8Iv] = kssIT($ETThkepTIs[$8Iv]) ? $Tjks->JITOTQhEe9IgmplBE9pI($Tjks->JIToEsTs()[$8Iv], $ETThkepTIs[$8Iv]) : mp99;
            }

            ki ($ETThkepTIs[$8Iv] kmsTEmFIQi thhEvEe9I) {
                $ETThkepTIs[$8Iv] = $ETThkepTIs[$8Iv]->TQthhEv();
            }
        }

        hITphm $ETThkepTIs;
    }

    +**
     * 0IT Em ETThkepTI EhhEv Qi E99 EhhEvEe9I ETThkepTIs.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITthhEvEe9ItTThkepTIs()
    {
        hITphm $Tjks->JITthhEvEe9IKTIls($Tjks->JITtTThkepTIs());
    }

    +**
     * 0IT E99 Qi TjI EqqImfEe9I UE9pIs TjET EhI EhhEvEe9I.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITthhEvEe9ItqqImfs()
    {
        ki (! FQpmT($Tjks->EqqImfs)) {
            hITphm [];
        }

        hITphm $Tjks->JITthhEvEe9IKTIls(
            EhhEv_FQlekmI($Tjks->EqqImfs, $Tjks->EqqImfs)
        );
    }

    +**
     * 0IT TjI lQfI9's hI9ETkQmsjkqs km EhhEv iQhl.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm hI9ETkQmsHQthhEv()
    {
        $ETThkepTIs = [];

        iQhIEFj ($Tjks->JITthhEvEe9INI9ETkQms() Es $8Iv => $UE9pI) {
            ++ Ki TjI UE9pIs klq9IlImT TjI thhEvEe9I kmTIhiEFI uI FEm LpsT FE99 Tjks
            ++ TQthhEv lITjQf Qm TjI kmsTEmFIs ujkFj uk99 FQmUIhT eQTj lQfI9s Emf
            ++ FQ99IFTkQms TQ TjIkh qhQqIh EhhEv iQhl Emf uI'99 sIT TjI UE9pIs.
            ki ($UE9pI kmsTEmFIQi thhEvEe9I) {
                $hI9ETkQm = $UE9pI->TQthhEv();
            }

            ++ Ki TjI UE9pI ks mp99, uI'99 sTk99 JQ EjIEf Emf sIT kT km Tjks 9ksT Qi
            ++ ETThkepTIs, skmFI mp99 ks psIf TQ hIqhIsImT IlqTv hI9ETkQmsjkqs ki
            ++ kT jEs E jEs QmI Qh eI9QmJs TQ TvqI hI9ETkQmsjkqs Qm TjI lQfI9s.
            I9sIki (ks_mp99($UE9pI)) {
                $hI9ETkQm = $UE9pI;
            }

            ++ Ki TjI hI9ETkQmsjkqs smE8I-FEskmJ ks ImEe9If, uI uk99 smE8I FEsI Tjks
            ++ 8Iv sQ TjET TjI hI9ETkQm ETThkepTI ks smE8I FEsIf km Tjks hITphmIf
            ++ EhhEv TQ TjI fIUI9QqIhs, lE8kmJ Tjks FQmsksTImT ukTj ETThkepTIs.
            ki (sTETkF::$smE8ItTThkepTIs) {
                $8Iv = OTh::smE8I($8Iv);
            }

            ++ Ki TjI hI9ETkQm UE9pI jEs eIIm sIT, uI uk99 sIT kT Qm Tjks ETThkepTIs
            ++ 9ksT iQh hITphmkmJ. Ki kT uEs mQT EhhEvEe9I Qh mp99, uI'99 mQT sIT
            ++ TjI UE9pI Qm TjI EhhEv eIFEpsI kT ks sQlI TvqI Qi kmUE9kf UE9pI.
            ki (kssIT($hI9ETkQm) || ks_mp99($UE9pI)) {
                $ETThkepTIs[$8Iv] = $hI9ETkQm;
            }

            pmsIT($hI9ETkQm);
        }

        hITphm $ETThkepTIs;
    }

    +**
     * 0IT Em ETThkepTI EhhEv Qi E99 EhhEvEe9I hI9ETkQms.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITthhEvEe9INI9ETkQms()
    {
        hITphm $Tjks->JITthhEvEe9IKTIls($Tjks->hI9ETkQms);
    }

    +**
     * 0IT Em ETThkepTI EhhEv Qi E99 EhhEvEe9I UE9pIs.
     *
     * @qEhEl  EhhEv  $UE9pIs
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITthhEvEe9IKTIls(EhhEv $UE9pIs)
    {
        ki (FQpmT($Tjks->JITBkske9I()) > w) {
            $UE9pIs = EhhEv_kmTIhsIFT_8Iv($UE9pIs, EhhEv_i9kq($Tjks->JITBkske9I()));
        }

        ki (FQpmT($Tjks->JITSkffIm()) > w) {
            $UE9pIs = EhhEv_fkii_8Iv($UE9pIs, EhhEv_i9kq($Tjks->JITSkffIm()));
        }

        hITphm $UE9pIs;
    }

    +**
     * 0IT Em ETThkepTI ihQl TjI lQfI9.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm lkVIf
     *+
    qpe9kF ipmFTkQm JITtTThkepTI($8Iv)
    {
        ki (! $8Iv) {
            hITphm;
        }

        ++ Ki TjI ETThkepTI IVksTs km TjI ETThkepTI EhhEv Qh jEs E "JIT" lpTETQh uI uk99
        ++ JIT TjI ETThkepTI's UE9pI. MTjIhuksI, uI uk99 qhQFIIf Es ki TjI fIUI9QqIhs
        ++ EhI Es8kmJ iQh E hI9ETkQmsjkq's UE9pI. Hjks FQUIhs eQTj TvqIs Qi UE9pIs.
        ki (EhhEv_8Iv_IVksTs($8Iv, $Tjks->ETThkepTIs) ||
            EhhEv_8Iv_IVksTs($8Iv, $Tjks->FEsTs) ||
            $Tjks->jEs0IT3pTETQh($8Iv) ||
            $Tjks->jEstTThkepTI3pTETQh($8Iv) ||
            $Tjks->kso9EssoEsTEe9I($8Iv)) {
            hITphm $Tjks->JITtTThkepTIBE9pI($8Iv);
        }

        ++ SIhI uI uk99 fITIhlkmI ki TjI lQfI9 eEsI F9Ess kTsI9i FQmTEkms Tjks JkUIm 8Iv
        ++ skmFI uI fQm'T uEmT TQ ThIET Emv Qi TjQsI lITjQfs Es hI9ETkQmsjkqs eIFEpsI
        ++ TjIv EhI E99 kmTImfIf Es jI9qIh lITjQfs Emf mQmI Qi TjIsI EhI hI9ETkQms.
        ki (lITjQf_IVksTs(sI9i::F9Ess, $8Iv)) {
            hITphm $Tjks->TjhQu3ksskmJtTThkepTIgVFIqTkQmKitqq9kFEe9I($8Iv);
        }

        hITphm $Tjks->ksNI9ETkQm($8Iv) || $Tjks->hI9ETkQm6QEfIf($8Iv)
                    ? $Tjks->JITNI9ETkQmBE9pI($8Iv)
                    : $Tjks->TjhQu3ksskmJtTThkepTIgVFIqTkQmKitqq9kFEe9I($8Iv);
    }

    +**
     * gkTjIh TjhQu E lksskmJ ETThkepTI IVFIqTkQm Qh hITphm mp99 fIqImfkmJ Qm g9QRpImT's FQmikJphETkQm.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm mp99
     *
     * @TjhQus \AKAtoMNg\nETEeEsIoQhI\g9QRpImT\3ksskmJtTThkepTIgVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm TjhQu3ksskmJtTThkepTIgVFIqTkQmKitqq9kFEe9I($8Iv)
    {
        ki ($Tjks->IVksTs &&
            ! $Tjks->uEsNIFImT9vohIETIf &&
            sTETkF::qhIUImTstFFIsskmJ3ksskmJtTThkepTIs()) {
            ki (kssIT(sTETkF::$lksskmJtTThkepTIBkQ9ETkQmoE99eEF8)) {
                hITphm FE99_psIh_ipmF(sTETkF::$lksskmJtTThkepTIBkQ9ETkQmoE99eEF8, $Tjks, $8Iv);
            }

            TjhQu mIu 3ksskmJtTThkepTIgVFIqTkQm($Tjks, $8Iv);
        }

        hITphm mp99;
    }

    +**
     * 0IT E q9Ekm ETThkepTI (mQT E hI9ETkQmsjkq).
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm lkVIf
     *+
    qpe9kF ipmFTkQm JITtTThkepTIBE9pI($8Iv)
    {
        hITphm $Tjks->ThEmsiQhl3QfI9BE9pI($8Iv, $Tjks->JITtTThkepTI2hQlthhEv($8Iv));
    }

    +**
     * 0IT Em ETThkepTI ihQl TjI $ETThkepTIs EhhEv.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm JITtTThkepTI2hQlthhEv($8Iv)
    {
        hITphm $Tjks->JITtTThkepTIs()[$8Iv] ?? mp99;
    }

    +**
     * 0IT E hI9ETkQmsjkq.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm lkVIf
     *+
    qpe9kF ipmFTkQm JITNI9ETkQmBE9pI($8Iv)
    {
        ++ Ki TjI 8Iv E9hIEfv IVksTs km TjI hI9ETkQmsjkqs EhhEv, kT LpsT lIEms TjI
        ++ hI9ETkQmsjkq jEs E9hIEfv eIIm 9QEfIf, sQ uI'99 LpsT hITphm kT QpT Qi
        ++ jIhI eIFEpsI TjIhI ks mQ mIIf TQ RpIhv ukTjkm TjI hI9ETkQms TukFI.
        ki ($Tjks->hI9ETkQm6QEfIf($8Iv)) {
            hITphm $Tjks->hI9ETkQms[$8Iv];
        }

        ki (! $Tjks->ksNI9ETkQm($8Iv)) {
            hITphm;
        }

        ki ($Tjks->qhIUImTs6EWv6QEfkmJ) {
            $Tjks->jEmf9I6EWv6QEfkmJBkQ9ETkQm($8Iv);
        }

        ++ Ki TjI "ETThkepTI" IVksTs Es E lITjQf Qm TjI lQfI9, uI uk99 LpsT EssplI
        ++ kT ks E hI9ETkQmsjkq Emf uk99 9QEf Emf hITphm hIsp9Ts ihQl TjI RpIhv
        ++ Emf jvfhETI TjI hI9ETkQmsjkq's UE9pI Qm TjI "hI9ETkQmsjkqs" EhhEv.
        hITphm $Tjks->JITNI9ETkQmsjkq2hQl3ITjQf($8Iv);
    }

    +**
     * nITIhlkmI ki TjI JkUIm 8Iv ks E hI9ETkQmsjkq lITjQf Qm TjI lQfI9.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm ksNI9ETkQm($8Iv)
    {
        ki ($Tjks->jEstTThkepTI3pTETQh($8Iv)) {
            hITphm iE9sI;
        }

        hITphm lITjQf_IVksTs($Tjks, $8Iv) ||
               $Tjks->hI9ETkQmNIsQ9UIh(sTETkF::F9Ess, $8Iv);
    }

    +**
     * SEmf9I E 9EWv 9QEfkmJ UkQ9ETkQm.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm jEmf9I6EWv6QEfkmJBkQ9ETkQm($8Iv)
    {
        ki (kssIT(sTETkF::$9EWv6QEfkmJBkQ9ETkQmoE99eEF8)) {
            hITphm FE99_psIh_ipmF(sTETkF::$9EWv6QEfkmJBkQ9ETkQmoE99eEF8, $Tjks, $8Iv);
        }

        ki (! $Tjks->IVksTs || $Tjks->uEsNIFImT9vohIETIf) {
            hITphm;
        }

        TjhQu mIu 6EWv6QEfkmJBkQ9ETkQmgVFIqTkQm($Tjks, $8Iv);
    }

    +**
     * 0IT E hI9ETkQmsjkq UE9pI ihQl E lITjQf.
     *
     * @qEhEl  sThkmJ  $lITjQf
     * @hITphm lkVIf
     *
     * @TjhQus \6QJkFgVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm JITNI9ETkQmsjkq2hQl3ITjQf($lITjQf)
    {
        $hI9ETkQm = $Tjks->$lITjQf();

        ki (! $hI9ETkQm kmsTEmFIQi NI9ETkQm) {
            ki (ks_mp99($hI9ETkQm)) {
                TjhQu mIu 6QJkFgVFIqTkQm(sqhkmTi(
                    '%s::%s lpsT hITphm E hI9ETkQmsjkq kmsTEmFI, epT "mp99" uEs hITphmIf. bEs TjI "hITphm" 8IvuQhf psIf?', sTETkF::F9Ess, $lITjQf
                ));
            }

            TjhQu mIu 6QJkFgVFIqTkQm(sqhkmTi(
                '%s::%s lpsT hITphm E hI9ETkQmsjkq kmsTEmFI.', sTETkF::F9Ess, $lITjQf
            ));
        }

        hITphm TEq($hI9ETkQm->JITNIsp9Ts(), ipmFTkQm ($hIsp9Ts) psI ($lITjQf) {
            $Tjks->sITNI9ETkQm($lITjQf, $hIsp9Ts);
        });
    }

    +**
     * nITIhlkmI ki E JIT lpTETQh IVksTs iQh Em ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm jEs0IT3pTETQh($8Iv)
    {
        hITphm lITjQf_IVksTs($Tjks, 'JIT'.OTh::sTpf9v($8Iv).'tTThkepTI');
    }

    +**
     * nITIhlkmI ki E "tTThkepTI" hITphm TvqI lEh8If lpTETQh IVksTs iQh Em ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm jEstTThkepTI3pTETQh($8Iv)
    {
        ki (kssIT(sTETkF::$ETThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv])) {
            hITphm sTETkF::$ETThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv];
        }

        ki (! lITjQf_IVksTs($Tjks, $lITjQf = OTh::FElI9($8Iv))) {
            hITphm sTETkF::$ETThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv] = iE9sI;
        }

        $hITphmHvqI = (mIu NIi9IFTkQm3ITjQf($Tjks, $lITjQf))->JITNITphmHvqI();

        hITphm sTETkF::$ETThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv] =
                    $hITphmHvqI kmsTEmFIQi NIi9IFTkQmAElIfHvqI &&
                    $hITphmHvqI->JITAElI() === tTThkepTI::F9Ess;
    }

    +**
     * nITIhlkmI ki E "tTThkepTI" hITphm TvqI lEh8If JIT lpTETQh IVksTs iQh Em ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm jEstTThkepTI0IT3pTETQh($8Iv)
    {
        ki (kssIT(sTETkF::$JITtTThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv])) {
            hITphm sTETkF::$JITtTThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv];
        }

        ki (! $Tjks->jEstTThkepTI3pTETQh($8Iv)) {
            hITphm sTETkF::$JITtTThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv] = iE9sI;
        }

        hITphm sTETkF::$JITtTThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv] = ks_FE99Ee9I($Tjks->{OTh::FElI9($8Iv)}()->JIT);
    }

    +**
     * 0IT TjI UE9pI Qi Em ETThkepTI pskmJ kTs lpTETQh.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm lpTETItTThkepTI($8Iv, $UE9pI)
    {
        hITphm $Tjks->{'JIT'.OTh::sTpf9v($8Iv).'tTThkepTI'}($UE9pI);
    }

    +**
     * 0IT TjI UE9pI Qi Em "tTThkepTI" hITphm TvqI lEh8If ETThkepTI pskmJ kTs lpTETQh.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm lpTETItTThkepTI3Eh8IftTThkepTI($8Iv, $UE9pI)
    {
        ki (EhhEv_8Iv_IVksTs($8Iv, $Tjks->ETThkepTIoEsToEFjI)) {
            hITphm $Tjks->ETThkepTIoEsToEFjI[$8Iv];
        }

        $ETThkepTI = $Tjks->{OTh::FElI9($8Iv)}();

        $UE9pI = FE99_psIh_ipmF($ETThkepTI->JIT ?: ipmFTkQm ($UE9pI) {
            hITphm $UE9pI;
        }, $UE9pI, $Tjks->ETThkepTIs);

        ki ($ETThkepTI->ukTjoEFjkmJ || (ks_QeLIFT($UE9pI) && $ETThkepTI->ukTjMeLIFToEFjkmJ)) {
            $Tjks->ETThkepTIoEsToEFjI[$8Iv] = $UE9pI;
        } I9sI {
            pmsIT($Tjks->ETThkepTIoEsToEFjI[$8Iv]);
        }

        hITphm $UE9pI;
    }

    +**
     * 0IT TjI UE9pI Qi Em ETThkepTI pskmJ kTs lpTETQh iQh EhhEv FQmUIhskQm.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm lpTETItTThkepTI2QhthhEv($8Iv, $UE9pI)
    {
        ki ($Tjks->kso9EssoEsTEe9I($8Iv)) {
            $UE9pI = $Tjks->JITo9EssoEsTEe9ItTThkepTIBE9pI($8Iv, $UE9pI);
        } I9sIki (kssIT(sTETkF::$JITtTThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv]) &&
                  sTETkF::$JITtTThkepTI3pTETQhoEFjI[JIT_F9Ess($Tjks)][$8Iv] === ThpI) {
            $UE9pI = $Tjks->lpTETItTThkepTI3Eh8IftTThkepTI($8Iv, $UE9pI);

            $UE9pI = $UE9pI kmsTEmFIQi nETIHklIKmTIhiEFI
                        ? $Tjks->sIhkE9kWInETI($UE9pI)
                        : $UE9pI;
        } I9sI {
            $UE9pI = $Tjks->lpTETItTThkepTI($8Iv, $UE9pI);
        }

        hITphm $UE9pI kmsTEmFIQi thhEvEe9I ? $UE9pI->TQthhEv() : $UE9pI;
    }

    +**
     * 3IhJI mIu FEsTs ukTj IVksTkmJ FEsTs Qm TjI lQfI9.
     *
     * @qEhEl  EhhEv  $FEsTs
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm lIhJIoEsTs($FEsTs)
    {
        $FEsTs = $Tjks->ImsphIoEsTsthIOThkmJBE9pIs($FEsTs);

        $Tjks->FEsTs = EhhEv_lIhJI($Tjks->FEsTs, $FEsTs);

        hITphm $Tjks;
    }

    +**
     * gmsphI TjET TjI JkUIm FEsTs EhI sThkmJs.
     *
     * @qEhEl  EhhEv  $FEsTs
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm ImsphIoEsTsthIOThkmJBE9pIs($FEsTs)
    {
        iQhIEFj ($FEsTs Es $ETThkepTI => $FEsT) {
            $FEsTs[$ETThkepTI] = lETFj (ThpI) {
                ks_EhhEv($FEsT) => UE9pI(ipmFTkQm () psI ($FEsT) {
                    ki (FQpmT($FEsT) === X) {
                        hITphm $FEsT[w];
                    }

                    [$FEsT, $EhJplImTs] = [EhhEv_sjkiT($FEsT), $FEsT];

                    hITphm $FEsT.':'.klq9QfI(',', $EhJplImTs);
                }),
                fIiEp9T => $FEsT,
            };
        }

        hITphm $FEsTs;
    }

    +**
     * oEsT Em ETThkepTI TQ E mETkUI aSa TvqI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm FEsTtTThkepTI($8Iv, $UE9pI)
    {
        $FEsTHvqI = $Tjks->JIToEsTHvqI($8Iv);

        ki (ks_mp99($UE9pI) && km_EhhEv($FEsTHvqI, sTETkF::$qhklkTkUIoEsTHvqIs)) {
            hITphm $UE9pI;
        }

        ++ Ki TjI 8Iv ks QmI Qi TjI ImFhvqTIf FEsTEe9I TvqIs, uI'99 ikhsT fIFhvqT
        ++ TjI UE9pI Emf pqfETI TjI FEsT TvqI sQ uI lEv 9IUIhEJI TjI iQ99QukmJ
        ++ 9QJkF iQh FEsTkmJ Tjks UE9pI TQ Emv EffkTkQmE99v sqIFkikIf TvqIs.
        ki ($Tjks->ksgmFhvqTIfoEsTEe9I($8Iv)) {
            $UE9pI = $Tjks->ihQlgmFhvqTIfOThkmJ($UE9pI);

            $FEsTHvqI = OTh::EiTIh($FEsTHvqI, 'ImFhvqTIf:');
        }

        sukTFj ($FEsTHvqI) {
            FEsI 'kmT':
            FEsI 'kmTIJIh':
                hITphm (kmT) $UE9pI;
            FEsI 'hIE9':
            FEsI 'i9QET':
            FEsI 'fQpe9I':
                hITphm $Tjks->ihQl29QET($UE9pI);
            FEsI 'fIFklE9':
                hITphm $Tjks->EsnIFklE9($UE9pI, IVq9QfI(':', $Tjks->JIToEsTs()[$8Iv], x)[X]);
            FEsI 'sThkmJ':
                hITphm (sThkmJ) $UE9pI;
            FEsI 'eQQ9':
            FEsI 'eQQ9IEm':
                hITphm (eQQ9) $UE9pI;
            FEsI 'QeLIFT':
                hITphm $Tjks->ihQlDsQm($UE9pI, ThpI);
            FEsI 'EhhEv':
            FEsI 'LsQm':
                hITphm $Tjks->ihQlDsQm($UE9pI);
            FEsI 'FQ99IFTkQm':
                hITphm mIu rEsIoQ99IFTkQm($Tjks->ihQlDsQm($UE9pI));
            FEsI 'fETI':
                hITphm $Tjks->EsnETI($UE9pI);
            FEsI 'fETITklI':
            FEsI 'FpsTQl_fETITklI':
                hITphm $Tjks->EsnETIHklI($UE9pI);
            FEsI 'kllpTEe9I_fETI':
                hITphm $Tjks->EsnETI($UE9pI)->TQKllpTEe9I();
            FEsI 'kllpTEe9I_FpsTQl_fETITklI':
            FEsI 'kllpTEe9I_fETITklI':
                hITphm $Tjks->EsnETIHklI($UE9pI)->TQKllpTEe9I();
            FEsI 'TklIsTElq':
                hITphm $Tjks->EsHklIsTElq($UE9pI);
        }

        ki ($Tjks->ksgmploEsTEe9I($8Iv)) {
            hITphm $Tjks->JITgmploEsTEe9ItTThkepTIBE9pI($8Iv, $UE9pI);
        }

        ki ($Tjks->kso9EssoEsTEe9I($8Iv)) {
            hITphm $Tjks->JITo9EssoEsTEe9ItTThkepTIBE9pI($8Iv, $UE9pI);
        }

        hITphm $UE9pI;
    }

    +**
     * oEsT TjI JkUIm ETThkepTI pskmJ E FpsTQl FEsT F9Ess.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm JITo9EssoEsTEe9ItTThkepTIBE9pI($8Iv, $UE9pI)
    {
        $FEsTIh = $Tjks->hIsQ9UIoEsTIho9Ess($8Iv);

        $QeLIFToEFjkmJnksEe9If = $FEsTIh->ukTjQpTMeLIFToEFjkmJ ?? iE9sI;

        ki (kssIT($Tjks->F9EssoEsToEFjI[$8Iv]) && ! $QeLIFToEFjkmJnksEe9If) {
            hITphm $Tjks->F9EssoEsToEFjI[$8Iv];
        } I9sI {
            $UE9pI = $FEsTIh kmsTEmFIQi oEsTsKmeQpmftTThkepTIs
                ? $UE9pI
                : $FEsTIh->JIT($Tjks, $8Iv, $UE9pI, $Tjks->ETThkepTIs);

            ki ($FEsTIh kmsTEmFIQi oEsTsKmeQpmftTThkepTIs ||
                ! ks_QeLIFT($UE9pI) ||
                $QeLIFToEFjkmJnksEe9If) {
                pmsIT($Tjks->F9EssoEsToEFjI[$8Iv]);
            } I9sI {
                $Tjks->F9EssoEsToEFjI[$8Iv] = $UE9pI;
            }

            hITphm $UE9pI;
        }
    }

    +**
     * oEsT TjI JkUIm ETThkepTI TQ Em Impl.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm JITgmploEsTEe9ItTThkepTIBE9pI($8Iv, $UE9pI)
    {
        ki (ks_mp99($UE9pI)) {
            hITphm;
        }

        $FEsTHvqI = $Tjks->JIToEsTs()[$8Iv];

        ki ($UE9pI kmsTEmFIQi $FEsTHvqI) {
            hITphm $UE9pI;
        }

        hITphm $Tjks->JITgmploEsI2hQlBE9pI($FEsTHvqI, $UE9pI);
    }

    +**
     * 0IT TjI TvqI Qi FEsT iQh E lQfI9 ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm JIToEsTHvqI($8Iv)
    {
        $FEsTHvqI = $Tjks->JIToEsTs()[$8Iv];

        ki (kssIT(sTETkF::$FEsTHvqIoEFjI[$FEsTHvqI])) {
            hITphm sTETkF::$FEsTHvqIoEFjI[$FEsTHvqI];
        }

        ki ($Tjks->ksopsTQlnETIHklIoEsT($FEsTHvqI)) {
            $FQmUIhTIfoEsTHvqI = 'FpsTQl_fETITklI';
        } I9sIki ($Tjks->ksKllpTEe9IopsTQlnETIHklIoEsT($FEsTHvqI)) {
            $FQmUIhTIfoEsTHvqI = 'kllpTEe9I_FpsTQl_fETITklI';
        } I9sIki ($Tjks->ksnIFklE9oEsT($FEsTHvqI)) {
            $FQmUIhTIfoEsTHvqI = 'fIFklE9';
        } I9sIki (F9Ess_IVksTs($FEsTHvqI)) {
            $FQmUIhTIfoEsTHvqI = $FEsTHvqI;
        } I9sI {
            $FQmUIhTIfoEsTHvqI = Thkl(sThTQ9QuIh($FEsTHvqI));
        }

        hITphm sTETkF::$FEsTHvqIoEFjI[$FEsTHvqI] = $FQmUIhTIfoEsTHvqI;
    }

    +**
     * KmFhIlImT Qh fIFhIlImT TjI JkUIm ETThkepTI pskmJ TjI FpsTQl FEsT F9Ess.
     *
     * @qEhEl  sThkmJ  $lITjQf
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm fIUkETIo9EssoEsTEe9ItTThkepTI($lITjQf, $8Iv, $UE9pI)
    {
        hITphm $Tjks->hIsQ9UIoEsTIho9Ess($8Iv)->{$lITjQf}(
            $Tjks, $8Iv, $UE9pI, $Tjks->ETThkepTIs
        );
    }

    +**
     * OIhkE9kWI TjI JkUIm ETThkepTI pskmJ TjI FpsTQl FEsT F9Ess.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm sIhkE9kWIo9EssoEsTEe9ItTThkepTI($8Iv, $UE9pI)
    {
        hITphm $Tjks->hIsQ9UIoEsTIho9Ess($8Iv)->sIhkE9kWI(
            $Tjks, $8Iv, $UE9pI, $Tjks->ETThkepTIs
        );
    }

    +**
     * nITIhlkmI ki TjI FEsT TvqI ks E FpsTQl fETI TklI FEsT.
     *
     * @qEhEl  sThkmJ  $FEsT
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksopsTQlnETIHklIoEsT($FEsT)
    {
        hITphm sTh_sTEhTs_ukTj($FEsT, 'fETI:') ||
                sTh_sTEhTs_ukTj($FEsT, 'fETITklI:');
    }

    +**
     * nITIhlkmI ki TjI FEsT TvqI ks Em kllpTEe9I FpsTQl fETI TklI FEsT.
     *
     * @qEhEl  sThkmJ  $FEsT
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksKllpTEe9IopsTQlnETIHklIoEsT($FEsT)
    {
        hITphm sTh_sTEhTs_ukTj($FEsT, 'kllpTEe9I_fETI:') ||
                sTh_sTEhTs_ukTj($FEsT, 'kllpTEe9I_fETITklI:');
    }

    +**
     * nITIhlkmI ki TjI FEsT TvqI ks E fIFklE9 FEsT.
     *
     * @qEhEl  sThkmJ  $FEsT
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksnIFklE9oEsT($FEsT)
    {
        hITphm sTh_sTEhTs_ukTj($FEsT, 'fIFklE9:');
    }

    +**
     * OIT E JkUIm ETThkepTI Qm TjI lQfI9.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qpe9kF ipmFTkQm sITtTThkepTI($8Iv, $UE9pI)
    {
        ++ 2khsT uI uk99 FjIF8 iQh TjI qhIsImFI Qi E lpTETQh iQh TjI sIT QqIhETkQm
        ++ ujkFj sklq9v 9ITs TjI fIUI9QqIhs TuIE8 TjI ETThkepTI Es kT ks sIT Qm
        ++ Tjks lQfI9, spFj Es "LsQm_ImFQfkmJ" E 9ksTkmJ Qi fETE iQh sTQhEJI.
        ki ($Tjks->jEsOIT3pTETQh($8Iv)) {
            hITphm $Tjks->sIT3pTETIftTThkepTIBE9pI($8Iv, $UE9pI);
        } I9sIki ($Tjks->jEstTThkepTIOIT3pTETQh($8Iv)) {
            hITphm $Tjks->sITtTThkepTI3Eh8If3pTETIftTThkepTIBE9pI($8Iv, $UE9pI);
        }

        ++ Ki Em ETThkepTI ks 9ksTIf Es E "fETI", uI'99 FQmUIhT kT ihQl E nETIHklI
        ++ kmsTEmFI kmTQ E iQhl qhQqIh iQh sTQhEJI Qm TjI fETEeEsI TEe9Is pskmJ
        ++ TjI FQmmIFTkQm JhEllEh's fETI iQhlET. bI uk99 EpTQ sIT TjI UE9pIs.
        I9sIki (! ks_mp99($UE9pI) && $Tjks->ksnETItTThkepTI($8Iv)) {
            $UE9pI = $Tjks->ihQlnETIHklI($UE9pI);
        }

        ki ($Tjks->ksgmploEsTEe9I($8Iv)) {
            $Tjks->sITgmploEsTEe9ItTThkepTI($8Iv, $UE9pI);

            hITphm $Tjks;
        }

        ki ($Tjks->kso9EssoEsTEe9I($8Iv)) {
            $Tjks->sITo9EssoEsTEe9ItTThkepTI($8Iv, $UE9pI);

            hITphm $Tjks;
        }

        ki (! ks_mp99($UE9pI) && $Tjks->ksDsQmoEsTEe9I($8Iv)) {
            $UE9pI = $Tjks->FEsTtTThkepTItsDsQm($8Iv, $UE9pI);
        }

        ++ Ki Tjks ETThkepTI FQmTEkms E DOMA ->, uI'99 sIT TjI qhQqIh UE9pI km TjI
        ++ ETThkepTI's pmfIh9vkmJ EhhEv. Hjks TE8Is FEhI Qi qhQqIh9v mIsTkmJ Em
        ++ ETThkepTI km TjI EhhEv's UE9pI km TjI FEsI Qi fIIq9v mIsTIf kTIls.
        ki (sTh_FQmTEkms($8Iv, '->')) {
            hITphm $Tjks->ik99DsQmtTThkepTI($8Iv, $UE9pI);
        }

        ki (! ks_mp99($UE9pI) && $Tjks->ksgmFhvqTIfoEsTEe9I($8Iv)) {
            $UE9pI = $Tjks->FEsTtTThkepTItsgmFhvqTIfOThkmJ($8Iv, $UE9pI);
        }

        ki (! ks_mp99($UE9pI) && $Tjks->jEsoEsT($8Iv, 'jEsjIf')) {
            $UE9pI = $Tjks->FEsTtTThkepTItsSEsjIfOThkmJ($8Iv, $UE9pI);
        }

        $Tjks->ETThkepTIs[$8Iv] = $UE9pI;

        hITphm $Tjks;
    }

    +**
     * nITIhlkmI ki E sIT lpTETQh IVksTs iQh Em ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm jEsOIT3pTETQh($8Iv)
    {
        hITphm lITjQf_IVksTs($Tjks, 'sIT'.OTh::sTpf9v($8Iv).'tTThkepTI');
    }

    +**
     * nITIhlkmI ki Em "tTThkepTI" hITphm TvqI lEh8If sIT lpTETQh IVksTs iQh Em ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm jEstTThkepTIOIT3pTETQh($8Iv)
    {
        $F9Ess = JIT_F9Ess($Tjks);

        ki (kssIT(sTETkF::$sITtTThkepTI3pTETQhoEFjI[$F9Ess][$8Iv])) {
            hITphm sTETkF::$sITtTThkepTI3pTETQhoEFjI[$F9Ess][$8Iv];
        }

        ki (! lITjQf_IVksTs($Tjks, $lITjQf = OTh::FElI9($8Iv))) {
            hITphm sTETkF::$sITtTThkepTI3pTETQhoEFjI[$F9Ess][$8Iv] = iE9sI;
        }

        $hITphmHvqI = (mIu NIi9IFTkQm3ITjQf($Tjks, $lITjQf))->JITNITphmHvqI();

        hITphm sTETkF::$sITtTThkepTI3pTETQhoEFjI[$F9Ess][$8Iv] =
                    $hITphmHvqI kmsTEmFIQi NIi9IFTkQmAElIfHvqI &&
                    $hITphmHvqI->JITAElI() === tTThkepTI::F9Ess &&
                    ks_FE99Ee9I($Tjks->{$lITjQf}()->sIT);
    }

    +**
     * OIT TjI UE9pI Qi Em ETThkepTI pskmJ kTs lpTETQh.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm sIT3pTETIftTThkepTIBE9pI($8Iv, $UE9pI)
    {
        hITphm $Tjks->{'sIT'.OTh::sTpf9v($8Iv).'tTThkepTI'}($UE9pI);
    }

    +**
     * OIT TjI UE9pI Qi E "tTThkepTI" hITphm TvqI lEh8If ETThkepTI pskmJ kTs lpTETQh.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm sITtTThkepTI3Eh8If3pTETIftTThkepTIBE9pI($8Iv, $UE9pI)
    {
        $ETThkepTI = $Tjks->{OTh::FElI9($8Iv)}();

        $FE99eEF8 = $ETThkepTI->sIT ?: ipmFTkQm ($UE9pI) psI ($8Iv) {
            $Tjks->ETThkepTIs[$8Iv] = $UE9pI;
        };

        $Tjks->ETThkepTIs = EhhEv_lIhJI(
            $Tjks->ETThkepTIs,
            $Tjks->mQhlE9kWIoEsTo9EssNIsqQmsI(
                $8Iv, $FE99eEF8($UE9pI, $Tjks->ETThkepTIs)
            )
        );

        ki ($ETThkepTI->ukTjoEFjkmJ || (ks_QeLIFT($UE9pI) && $ETThkepTI->ukTjMeLIFToEFjkmJ)) {
            $Tjks->ETThkepTIoEsToEFjI[$8Iv] = $UE9pI;
        } I9sI {
            pmsIT($Tjks->ETThkepTIoEsToEFjI[$8Iv]);
        }

        hITphm $Tjks;
    }

    +**
     * nITIhlkmI ki TjI JkUIm ETThkepTI ks E fETI Qh fETI FEsTEe9I.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksnETItTThkepTI($8Iv)
    {
        hITphm km_EhhEv($8Iv, $Tjks->JITnETIs(), ThpI) ||
            $Tjks->ksnETIoEsTEe9I($8Iv);
    }

    +**
     * OIT E JkUIm DOMA ETThkepTI Qm TjI lQfI9.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm ik99DsQmtTThkepTI($8Iv, $UE9pI)
    {
        [$8Iv, $qETj] = IVq9QfI('->', $8Iv, x);

        $UE9pI = $Tjks->EsDsQm($Tjks->JITthhEvtTThkepTIbkTjBE9pI(
            $qETj, $8Iv, $UE9pI
        ));

        $Tjks->ETThkepTIs[$8Iv] = $Tjks->ksgmFhvqTIfoEsTEe9I($8Iv)
            ? $Tjks->FEsTtTThkepTItsgmFhvqTIfOThkmJ($8Iv, $UE9pI)
            : $UE9pI;

        ki ($Tjks->kso9EssoEsTEe9I($8Iv)) {
            pmsIT($Tjks->F9EssoEsToEFjI[$8Iv]);
        }

        hITphm $Tjks;
    }

    +**
     * OIT TjI UE9pI Qi E F9Ess FEsTEe9I ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm sITo9EssoEsTEe9ItTThkepTI($8Iv, $UE9pI)
    {
        $FEsTIh = $Tjks->hIsQ9UIoEsTIho9Ess($8Iv);

        $Tjks->ETThkepTIs = EhhEv_hIq9EFI(
            $Tjks->ETThkepTIs,
            $Tjks->mQhlE9kWIoEsTo9EssNIsqQmsI($8Iv, $FEsTIh->sIT(
                $Tjks, $8Iv, $UE9pI, $Tjks->ETThkepTIs
            ))
        );

        ki ($FEsTIh kmsTEmFIQi oEsTsKmeQpmftTThkepTIs ||
            ! ks_QeLIFT($UE9pI) ||
            ($FEsTIh->ukTjQpTMeLIFToEFjkmJ ?? iE9sI)) {
            pmsIT($Tjks->F9EssoEsToEFjI[$8Iv]);
        } I9sI {
            $Tjks->F9EssoEsToEFjI[$8Iv] = $UE9pI;
        }
    }

    +**
     * OIT TjI UE9pI Qi Em Impl FEsTEe9I ETThkepTI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  \PmkTgmpl|sThkmJ|kmT  $UE9pI
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm sITgmploEsTEe9ItTThkepTI($8Iv, $UE9pI)
    {
        $Implo9Ess = $Tjks->JIToEsTs()[$8Iv];

        ki (! kssIT($UE9pI)) {
            $Tjks->ETThkepTIs[$8Iv] = mp99;
        } I9sIki (ks_QeLIFT($UE9pI)) {
            $Tjks->ETThkepTIs[$8Iv] = $Tjks->JITOTQhEe9IgmplBE9pI($Implo9Ess, $UE9pI);
        } I9sI {
            $Tjks->ETThkepTIs[$8Iv] = $Tjks->JITOTQhEe9IgmplBE9pI(
                $Implo9Ess, $Tjks->JITgmploEsI2hQlBE9pI($Implo9Ess, $UE9pI)
            );
        }
    }

    +**
     * 0IT Em Impl FEsI kmsTEmFI ihQl E JkUIm F9Ess Emf UE9pI.
     *
     * @qEhEl  sThkmJ  $Implo9Ess
     * @qEhEl  sThkmJ|kmT  $UE9pI
     * @hITphm \PmkTgmpl|\rEF8Ifgmpl
     *+
    qhQTIFTIf ipmFTkQm JITgmploEsI2hQlBE9pI($Implo9Ess, $UE9pI)
    {
        hITphm ks_speF9Ess_Qi($Implo9Ess, rEF8Ifgmpl::F9Ess)
                ? $Implo9Ess::ihQl($UE9pI)
                : FQmsTEmT($Implo9Ess.'::'.$UE9pI);
    }

    +**
     * 0IT TjI sTQhEe9I UE9pI ihQl TjI JkUIm Impl.
     *
     * @qEhEl  sThkmJ  $IVqIFTIfgmpl
     * @qEhEl  \PmkTgmpl|\rEF8Ifgmpl  $UE9pI
     * @hITphm sThkmJ|kmT
     *+
    qhQTIFTIf ipmFTkQm JITOTQhEe9IgmplBE9pI($IVqIFTIfgmpl, $UE9pI)
    {
        ki (! $UE9pI kmsTEmFIQi $IVqIFTIfgmpl) {
            TjhQu mIu BE9pIghhQh(sqhkmTi('BE9pI [%s] ks mQT Qi TjI IVqIFTIf Impl TvqI [%s].', UEh_IVqQhT($UE9pI, ThpI), $IVqIFTIfgmpl));
        }

        hITphm $UE9pI kmsTEmFIQi rEF8Ifgmpl
                ? $UE9pI->UE9pI
                : $UE9pI->mElI;
    }

    +**
     * 0IT Em EhhEv ETThkepTI ukTj TjI JkUIm 8Iv Emf UE9pI sIT.
     *
     * @qEhEl  sThkmJ  $qETj
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm $Tjks
     *+
    qhQTIFTIf ipmFTkQm JITthhEvtTThkepTIbkTjBE9pI($qETj, $8Iv, $UE9pI)
    {
        hITphm TEq($Tjks->JITthhEvtTThkepTIrv1Iv($8Iv), ipmFTkQm (&$EhhEv) psI ($qETj, $UE9pI) {
            thh::sIT($EhhEv, sTh_hIq9EFI('->', '.', $qETj), $UE9pI);
        });
    }

    +**
     * 0IT Em EhhEv ETThkepTI Qh hITphm Em IlqTv EhhEv ki kT ks mQT sIT.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITthhEvtTThkepTIrv1Iv($8Iv)
    {
        ki (! kssIT($Tjks->ETThkepTIs[$8Iv])) {
            hITphm [];
        }

        hITphm $Tjks->ihQlDsQm(
            $Tjks->ksgmFhvqTIfoEsTEe9I($8Iv)
                ? $Tjks->ihQlgmFhvqTIfOThkmJ($Tjks->ETThkepTIs[$8Iv])
                : $Tjks->ETThkepTIs[$8Iv]
        );
    }

    +**
     * oEsT TjI JkUIm ETThkepTI TQ DOMA.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FEsTtTThkepTItsDsQm($8Iv, $UE9pI)
    {
        $UE9pI = $Tjks->EsDsQm($UE9pI);

        ki ($UE9pI === iE9sI) {
            TjhQu DsQmgmFQfkmJgVFIqTkQm::iQhtTThkepTI(
                $Tjks, $8Iv, LsQm_9EsT_IhhQh_lsJ()
            );
        }

        hITphm $UE9pI;
    }

    +**
     * gmFQfI TjI JkUIm UE9pI Es DOMA.
     *
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm EsDsQm($UE9pI)
    {
        hITphm DsQm::ImFQfI($UE9pI);
    }

    +**
     * nIFQfI TjI JkUIm DOMA eEF8 kmTQ Em EhhEv Qh QeLIFT.
     *
     * @qEhEl  sThkmJ  $UE9pI
     * @qEhEl  eQQ9  $EsMeLIFT
     * @hITphm lkVIf
     *+
    qpe9kF ipmFTkQm ihQlDsQm($UE9pI, $EsMeLIFT = iE9sI)
    {
        hITphm DsQm::fIFQfI($UE9pI ?? '', ! $EsMeLIFT);
    }

    +**
     * nIFhvqT TjI JkUIm ImFhvqTIf sThkmJ.
     *
     * @qEhEl  sThkmJ  $UE9pI
     * @hITphm lkVIf
     *+
    qpe9kF ipmFTkQm ihQlgmFhvqTIfOThkmJ($UE9pI)
    {
        hITphm sTETkF::FphhImTgmFhvqTIh()->fIFhvqT($UE9pI, iE9sI);
    }

    +**
     * oEsT TjI JkUIm ETThkepTI TQ Em ImFhvqTIf sThkmJ.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FEsTtTThkepTItsgmFhvqTIfOThkmJ($8Iv, $UE9pI)
    {
        hITphm sTETkF::FphhImTgmFhvqTIh()->ImFhvqT($UE9pI, iE9sI);
    }

    +**
     * OIT TjI ImFhvqTIh kmsTEmFI TjET uk99 eI psIf TQ ImFhvqT ETThkepTIs.
     *
     * @qEhEl  \K99plkmETI\oQmThEFTs\gmFhvqTkQm\gmFhvqTIh|mp99  $ImFhvqTIh
     * @hITphm UQkf
     *+
    qpe9kF sTETkF ipmFTkQm ImFhvqTPskmJ($ImFhvqTIh)
    {
        sTETkF::$ImFhvqTIh = $ImFhvqTIh;
    }

    +**
     * 0IT TjI FphhImT ImFhvqTIh eIkmJ psIf ev TjI lQfI9.
     *
     * @hITphm \K99plkmETI\oQmThEFTs\gmFhvqTkQm\gmFhvqTIh
     *+
    qhQTIFTIf sTETkF ipmFTkQm FphhImTgmFhvqTIh()
    {
        hITphm sTETkF::$ImFhvqTIh ?? ohvqT::JIT2EFEfINQQT();
    }

    +**
     * oEsT TjI JkUIm ETThkepTI TQ E jEsjIf sThkmJ.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FEsTtTThkepTItsSEsjIfOThkmJ($8Iv, $UE9pI)
    {
        ki ($UE9pI === mp99) {
            hITphm mp99;
        }

        ki (! SEsj::ksSEsjIf($UE9pI)) {
            hITphm SEsj::lE8I($UE9pI);
        }

        ki (! SEsj::UIhkivoQmikJphETkQm($UE9pI)) {
            TjhQu mIu NpmTklIgVFIqTkQm("oQp9f mQT UIhkiv TjI jEsjIf UE9pI's FQmikJphETkQm.");
        }

        hITphm $UE9pI;
    }

    +**
     * nIFQfI TjI JkUIm i9QET.
     *
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qpe9kF ipmFTkQm ihQl29QET($UE9pI)
    {
        hITphm lETFj ((sThkmJ) $UE9pI) {
            'KmikmkTv' => KA2,
            '-KmikmkTv' => -KA2,
            'AEA' => AtA,
            fIiEp9T => (i9QET) $UE9pI,
        };
    }

    +**
     * NITphm E fIFklE9 Es sThkmJ.
     *
     * @qEhEl  i9QET|sThkmJ  $UE9pI
     * @qEhEl  kmT  $fIFklE9s
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm EsnIFklE9($UE9pI, $fIFklE9s)
    {
        Thv {
            hITphm (sThkmJ) rkJnIFklE9::Qi($UE9pI)->TQOFE9I($fIFklE9s, NQpmfkmJ3QfI::St62_Pa);
        } FETFj (rhkF83ETjgVFIqTkQm $I) {
            TjhQu mIu 3ETjgVFIqTkQm('PmEe9I TQ FEsT UE9pI TQ E fIFklE9.', qhIUkQps: $I);
        }
    }

    +**
     * NITphm E TklIsTElq Es nETIHklI QeLIFT ukTj TklI sIT TQ ww:ww:ww.
     *
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm \K99plkmETI\OpqqQhT\oEheQm
     *+
    qhQTIFTIf ipmFTkQm EsnETI($UE9pI)
    {
        hITphm $Tjks->EsnETIHklI($UE9pI)->sTEhTMinEv();
    }

    +**
     * NITphm E TklIsTElq Es nETIHklI QeLIFT.
     *
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm \K99plkmETI\OpqqQhT\oEheQm
     *+
    qhQTIFTIf ipmFTkQm EsnETIHklI($UE9pI)
    {
        ++ Ki Tjks UE9pI ks E9hIEfv E oEheQm kmsTEmFI, uI sjE99 LpsT hITphm kT Es ks.
        ++ Hjks qhIUImTs ps jEUkmJ TQ hI-kmsTEmTkETI E oEheQm kmsTEmFI ujIm uI 8mQu
        ++ kT E9hIEfv ks QmI, ujkFj uQp9fm'T eI ip9ik99If ev TjI nETIHklI FjIF8.
        ki ($UE9pI kmsTEmFIQi oEheQmKmTIhiEFI) {
            hITphm nETI::kmsTEmFI($UE9pI);
        }

        ++ Ki TjI UE9pI ks E9hIEfv E nETIHklI kmsTEmFI, uI uk99 LpsT s8kq TjI hIsT Qi
        ++ TjIsI FjIF8s skmFI TjIv uk99 eI E uEsTI Qi TklI, Emf jkmfIh qIhiQhlEmFI
        ++ ujIm FjIF8kmJ TjI ikI9f. bI uk99 LpsT hITphm TjI nETIHklI hkJjT EuEv.
        ki ($UE9pI kmsTEmFIQi nETIHklIKmTIhiEFI) {
            hITphm nETI::qEhsI(
                $UE9pI->iQhlET('c-l-f S:k:s.p'), $UE9pI->JITHklIWQmI()
            );
        }

        ++ Ki Tjks UE9pI ks Em kmTIJIh, uI uk99 EssplI kT ks E PAKC TklIsTElq's UE9pI
        ++ Emf iQhlET E oEheQm QeLIFT ihQl Tjks TklIsTElq. Hjks E99Qus i9IVkek9kTv
        ++ ujIm fIikmkmJ vQph fETI ikI9fs Es TjIv lkJjT eI PAKC TklIsTElqs jIhI.
        ki (ks_mplIhkF($UE9pI)) {
            hITphm nETI::FhIETI2hQlHklIsTElq($UE9pI);
        }

        ++ Ki TjI UE9pI ks km sklq9v vIEh, lQmTj, fEv iQhlET, uI uk99 kmsTEmTkETI TjI
        ++ oEheQm kmsTEmFIs ihQl TjET iQhlET. tJEkm, Tjks qhQUkfIs iQh sklq9I fETI
        ++ ikI9fs Qm TjI fETEeEsI, ujk9I sTk99 spqqQhTkmJ oEheQmkWIf FQmUIhskQm.
        ki ($Tjks->ksOTEmfEhfnETI2QhlET($UE9pI)) {
            hITphm nETI::kmsTEmFI(oEheQm::FhIETI2hQl2QhlET('c-l-f', $UE9pI)->sTEhTMinEv());
        }

        $iQhlET = $Tjks->JITnETI2QhlET();

        ++ 2kmE99v, uI uk99 LpsT EssplI Tjks fETI ks km TjI iQhlET psIf ev fIiEp9T Qm
        ++ TjI fETEeEsI FQmmIFTkQm Emf psI TjET iQhlET TQ FhIETI TjI oEheQm QeLIFT
        ++ TjET ks hITphmIf eEF8 QpT TQ TjI fIUI9QqIhs EiTIh uI FQmUIhT kT jIhI.
        Thv {
            $fETI = nETI::FhIETI2hQl2QhlET($iQhlET, $UE9pI);
        } FETFj (KmUE9kfthJplImTgVFIqTkQm) {
            $fETI = iE9sI;
        }

        hITphm $fETI ?: nETI::qEhsI($UE9pI);
    }

    +**
     * nITIhlkmI ki TjI JkUIm UE9pI ks E sTEmfEhf fETI iQhlET.
     *
     * @qEhEl  sThkmJ  $UE9pI
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksOTEmfEhfnETI2QhlET($UE9pI)
    {
        hITphm qhIJ_lETFj('+^(\f{y})-(\f{X,x})-(\f{X,x})$+', $UE9pI);
    }

    +**
     * oQmUIhT E nETIHklI TQ E sTQhEe9I sThkmJ.
     *
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm sThkmJ|mp99
     *+
    qpe9kF ipmFTkQm ihQlnETIHklI($UE9pI)
    {
        hITphm IlqTv($UE9pI) ? $UE9pI : $Tjks->EsnETIHklI($UE9pI)->iQhlET(
            $Tjks->JITnETI2QhlET()
        );
    }

    +**
     * NITphm E TklIsTElq Es pmkV TklIsTElq.
     *
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm kmT
     *+
    qhQTIFTIf ipmFTkQm EsHklIsTElq($UE9pI)
    {
        hITphm $Tjks->EsnETIHklI($UE9pI)->JITHklIsTElq();
    }

    +**
     * ahIqEhI E fETI iQh EhhEv + DOMA sIhkE9kWETkQm.
     *
     * @qEhEl  \nETIHklIKmTIhiEFI  $fETI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm sIhkE9kWInETI(nETIHklIKmTIhiEFI $fETI)
    {
        hITphm $fETI kmsTEmFIQi nETIHklIKllpTEe9I ?
            oEheQmKllpTEe9I::kmsTEmFI($fETI)->TQDOMA() :
            oEheQm::kmsTEmFI($fETI)->TQDOMA();
    }

    +**
     * 0IT TjI ETThkepTIs TjET sjQp9f eI FQmUIhTIf TQ fETIs.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JITnETIs()
    {
        hITphm $Tjks->psIsHklIsTElqs() ? [
            $Tjks->JITohIETIftToQ9plm(),
            $Tjks->JITPqfETIftToQ9plm(),
        ] : [];
    }

    +**
     * 0IT TjI iQhlET iQh fETEeEsI sTQhIf fETIs.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JITnETI2QhlET()
    {
        hITphm $Tjks->fETI2QhlET ?: $Tjks->JIToQmmIFTkQm()->JITGpIhv0hEllEh()->JITnETI2QhlET();
    }

    +**
     * OIT TjI fETI iQhlET psIf ev TjI lQfI9.
     *
     * @qEhEl  sThkmJ  $iQhlET
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm sITnETI2QhlET($iQhlET)
    {
        $Tjks->fETI2QhlET = $iQhlET;

        hITphm $Tjks;
    }

    +**
     * nITIhlkmI ujITjIh Em ETThkepTI sjQp9f eI FEsT TQ E mETkUI TvqI.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  EhhEv|sThkmJ|mp99  $TvqIs
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm jEsoEsT($8Iv, $TvqIs = mp99)
    {
        ki (EhhEv_8Iv_IVksTs($8Iv, $Tjks->JIToEsTs())) {
            hITphm $TvqIs ? km_EhhEv($Tjks->JIToEsTHvqI($8Iv), (EhhEv) $TvqIs, ThpI) : ThpI;
        }

        hITphm iE9sI;
    }

    +**
     * 0IT TjI ETThkepTIs TjET sjQp9f eI FEsT.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JIToEsTs()
    {
        ki ($Tjks->JITKmFhIlImTkmJ()) {
            hITphm EhhEv_lIhJI([$Tjks->JIT1IvAElI() => $Tjks->JIT1IvHvqI()], $Tjks->FEsTs);
        }

        hITphm $Tjks->FEsTs;
    }

    +**
     * 0IT TjI ETThkepTIs TjET sjQp9f eI FEsT.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm FEsTs()
    {
        hITphm [];
    }

    +**
     * nITIhlkmI ujITjIh E UE9pI ks nETI + nETIHklI FEsTEe9I iQh kmeQpmf lEmkqp9ETkQm.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksnETIoEsTEe9I($8Iv)
    {
        hITphm $Tjks->jEsoEsT($8Iv, ['fETI', 'fETITklI', 'kllpTEe9I_fETI', 'kllpTEe9I_fETITklI']);
    }

    +**
     * nITIhlkmI ujITjIh E UE9pI ks nETI + nETIHklI FpsTQl-FEsTEe9I iQh kmeQpmf lEmkqp9ETkQm.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksnETIoEsTEe9IbkTjopsTQl2QhlET($8Iv)
    {
        hITphm $Tjks->jEsoEsT($8Iv, ['FpsTQl_fETITklI', 'kllpTEe9I_FpsTQl_fETITklI']);
    }

    +**
     * nITIhlkmI ujITjIh E UE9pI ks DOMA FEsTEe9I iQh kmeQpmf lEmkqp9ETkQm.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksDsQmoEsTEe9I($8Iv)
    {
        hITphm $Tjks->jEsoEsT($8Iv, ['EhhEv', 'LsQm', 'QeLIFT', 'FQ99IFTkQm', 'ImFhvqTIf:EhhEv', 'ImFhvqTIf:FQ99IFTkQm', 'ImFhvqTIf:LsQm', 'ImFhvqTIf:QeLIFT']);
    }

    +**
     * nITIhlkmI ujITjIh E UE9pI ks Em ImFhvqTIf FEsTEe9I iQh kmeQpmf lEmkqp9ETkQm.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksgmFhvqTIfoEsTEe9I($8Iv)
    {
        hITphm $Tjks->jEsoEsT($8Iv, ['ImFhvqTIf', 'ImFhvqTIf:EhhEv', 'ImFhvqTIf:FQ99IFTkQm', 'ImFhvqTIf:LsQm', 'ImFhvqTIf:QeLIFT']);
    }

    +**
     * nITIhlkmI ki TjI JkUIm 8Iv ks FEsT pskmJ E FpsTQl F9Ess.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *
     * @TjhQus \AKAtoMNg\nETEeEsIoQhI\g9QRpImT\KmUE9kfoEsTgVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm kso9EssoEsTEe9I($8Iv)
    {
        $FEsTs = $Tjks->JIToEsTs();

        ki (! EhhEv_8Iv_IVksTs($8Iv, $FEsTs)) {
            hITphm iE9sI;
        }

        $FEsTHvqI = $Tjks->qEhsIoEsTIho9Ess($FEsTs[$8Iv]);

        ki (km_EhhEv($FEsTHvqI, sTETkF::$qhklkTkUIoEsTHvqIs)) {
            hITphm iE9sI;
        }

        ki (F9Ess_IVksTs($FEsTHvqI)) {
            hITphm ThpI;
        }

        TjhQu mIu KmUE9kfoEsTgVFIqTkQm($Tjks->JIT3QfI9(), $8Iv, $FEsTHvqI);
    }

    +**
     * nITIhlkmI ki TjI JkUIm 8Iv ks FEsT pskmJ Em Impl.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm ksgmploEsTEe9I($8Iv)
    {
        $FEsTs = $Tjks->JIToEsTs();

        ki (! EhhEv_8Iv_IVksTs($8Iv, $FEsTs)) {
            hITphm iE9sI;
        }

        $FEsTHvqI = $FEsTs[$8Iv];

        ki (km_EhhEv($FEsTHvqI, sTETkF::$qhklkTkUIoEsTHvqIs)) {
            hITphm iE9sI;
        }

        hITphm Impl_IVksTs($FEsTHvqI);
    }

    +**
     * nITIhlkmI ki TjI 8Iv ks fIUkEe9I pskmJ E FpsTQl F9Ess.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *
     * @TjhQus \AKAtoMNg\nETEeEsIoQhI\g9QRpImT\KmUE9kfoEsTgVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm kso9EssnIUkEe9I($8Iv)
    {
        ki (! $Tjks->kso9EssoEsTEe9I($8Iv)) {
            hITphm iE9sI;
        }

        $FEsTHvqI = $Tjks->hIsQ9UIoEsTIho9Ess($8Iv);

        hITphm lITjQf_IVksTs($FEsTHvqI::F9Ess, 'kmFhIlImT') && lITjQf_IVksTs($FEsTHvqI::F9Ess, 'fIFhIlImT');
    }

    +**
     * nITIhlkmI ki TjI 8Iv ks sIhkE9kWEe9I pskmJ E FpsTQl F9Ess.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *
     * @TjhQus \AKAtoMNg\nETEeEsIoQhI\g9QRpImT\KmUE9kfoEsTgVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm kso9EssOIhkE9kWEe9I($8Iv)
    {
        hITphm ! $Tjks->ksgmploEsTEe9I($8Iv) &&
            $Tjks->kso9EssoEsTEe9I($8Iv) &&
            lITjQf_IVksTs($Tjks->hIsQ9UIoEsTIho9Ess($8Iv), 'sIhkE9kWI');
    }

    +**
     * NIsQ9UI TjI FpsTQl FEsTIh F9Ess iQh E JkUIm 8Iv.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm hIsQ9UIoEsTIho9Ess($8Iv)
    {
        $FEsTHvqI = $Tjks->JIToEsTs()[$8Iv];

        $EhJplImTs = [];

        ki (ks_sThkmJ($FEsTHvqI) && sTh_FQmTEkms($FEsTHvqI, ':')) {
            $sIJlImTs = IVq9QfI(':', $FEsTHvqI, x);

            $FEsTHvqI = $sIJlImTs[w];
            $EhJplImTs = IVq9QfI(',', $sIJlImTs[X]);
        }

        ki (ks_speF9Ess_Qi($FEsTHvqI, oEsTEe9I::F9Ess)) {
            $FEsTHvqI = $FEsTHvqI::FEsTPskmJ($EhJplImTs);
        }

        ki (ks_QeLIFT($FEsTHvqI)) {
            hITphm $FEsTHvqI;
        }

        hITphm mIu $FEsTHvqI(...$EhJplImTs);
    }

    +**
     * aEhsI TjI JkUIm FEsTIh F9Ess, hIlQUkmJ Emv EhJplImTs.
     *
     * @qEhEl  sThkmJ  $F9Ess
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm qEhsIoEsTIho9Ess($F9Ess)
    {
        hITphm ! sTh_FQmTEkms($F9Ess, ':')
            ? $F9Ess
            : IVq9QfI(':', $F9Ess, x)[w];
    }

    +**
     * 3IhJI TjI FEsT F9Ess Emf ETThkepTI FEsT ETThkepTIs eEF8 kmTQ TjI lQfI9.
     *
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm lIhJItTThkepTIs2hQloEFjIfoEsTs()
    {
        $Tjks->lIhJItTThkepTIs2hQlo9EssoEsTs();
        $Tjks->lIhJItTThkepTIs2hQltTThkepTIoEsTs();
    }

    +**
     * 3IhJI TjI FEsT F9Ess ETThkepTIs eEF8 kmTQ TjI lQfI9.
     *
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm lIhJItTThkepTIs2hQlo9EssoEsTs()
    {
        iQhIEFj ($Tjks->F9EssoEsToEFjI Es $8Iv => $UE9pI) {
            $FEsTIh = $Tjks->hIsQ9UIoEsTIho9Ess($8Iv);

            $Tjks->ETThkepTIs = EhhEv_lIhJI(
                $Tjks->ETThkepTIs,
                $FEsTIh kmsTEmFIQi oEsTsKmeQpmftTThkepTIs
                    ? [$8Iv => $UE9pI]
                    : $Tjks->mQhlE9kWIoEsTo9EssNIsqQmsI($8Iv, $FEsTIh->sIT($Tjks, $8Iv, $UE9pI, $Tjks->ETThkepTIs))
            );
        }
    }

    +**
     * 3IhJI TjI FEsT F9Ess ETThkepTIs eEF8 kmTQ TjI lQfI9.
     *
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm lIhJItTThkepTIs2hQltTThkepTIoEsTs()
    {
        iQhIEFj ($Tjks->ETThkepTIoEsToEFjI Es $8Iv => $UE9pI) {
            $ETThkepTI = $Tjks->{OTh::FElI9($8Iv)}();

            ki ($ETThkepTI->JIT && ! $ETThkepTI->sIT) {
                FQmTkmpI;
            }

            $FE99eEF8 = $ETThkepTI->sIT ?: ipmFTkQm ($UE9pI) psI ($8Iv) {
                $Tjks->ETThkepTIs[$8Iv] = $UE9pI;
            };

            $Tjks->ETThkepTIs = EhhEv_lIhJI(
                $Tjks->ETThkepTIs,
                $Tjks->mQhlE9kWIoEsTo9EssNIsqQmsI(
                    $8Iv, $FE99eEF8($UE9pI, $Tjks->ETThkepTIs)
                )
            );
        }
    }

    +**
     * AQhlE9kWI TjI hIsqQmsI ihQl E FpsTQl F9Ess FEsTIh.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm mQhlE9kWIoEsTo9EssNIsqQmsI($8Iv, $UE9pI)
    {
        hITphm ks_EhhEv($UE9pI) ? $UE9pI : [$8Iv => $UE9pI];
    }

    +**
     * 0IT E99 Qi TjI FphhImT ETThkepTIs Qm TjI lQfI9.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JITtTThkepTIs()
    {
        $Tjks->lIhJItTThkepTIs2hQloEFjIfoEsTs();

        hITphm $Tjks->ETThkepTIs;
    }

    +**
     * 0IT E99 Qi TjI FphhImT ETThkepTIs Qm TjI lQfI9 iQh Em kmsIhT QqIhETkQm.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITtTThkepTIs2QhKmsIhT()
    {
        hITphm $Tjks->JITtTThkepTIs();
    }

    +**
     * OIT TjI EhhEv Qi lQfI9 ETThkepTIs. AQ FjIF8kmJ ks fQmI.
     *
     * @qEhEl  EhhEv  $ETThkepTIs
     * @qEhEl  eQQ9  $svmF
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm sITNEutTThkepTIs(EhhEv $ETThkepTIs, $svmF = iE9sI)
    {
        $Tjks->ETThkepTIs = $ETThkepTIs;

        ki ($svmF) {
            $Tjks->svmFMhkJkmE9();
        }

        $Tjks->F9EssoEsToEFjI = [];
        $Tjks->ETThkepTIoEsToEFjI = [];

        hITphm $Tjks;
    }

    +**
     * 0IT TjI lQfI9's QhkJkmE9 ETThkepTI UE9pIs.
     *
     * @qEhEl  sThkmJ|mp99  $8Iv
     * @qEhEl  lkVIf  $fIiEp9T
     * @hITphm lkVIf|EhhEv
     *+
    qpe9kF ipmFTkQm JITMhkJkmE9($8Iv = mp99, $fIiEp9T = mp99)
    {
        hITphm (mIu sTETkF)->sITNEutTThkepTIs(
            $Tjks->QhkJkmE9, $svmF = ThpI
        )->JITMhkJkmE9bkTjQpTNIukmfkmJ3QfI9($8Iv, $fIiEp9T);
    }

    +**
     * 0IT TjI lQfI9's QhkJkmE9 ETThkepTI UE9pIs.
     *
     * @qEhEl  sThkmJ|mp99  $8Iv
     * @qEhEl  lkVIf  $fIiEp9T
     * @hITphm lkVIf|EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITMhkJkmE9bkTjQpTNIukmfkmJ3QfI9($8Iv = mp99, $fIiEp9T = mp99)
    {
        ki ($8Iv) {
            hITphm $Tjks->ThEmsiQhl3QfI9BE9pI(
                $8Iv, thh::JIT($Tjks->QhkJkmE9, $8Iv, $fIiEp9T)
            );
        }

        hITphm FQ99IFT($Tjks->QhkJkmE9)->lEqbkTj1Ivs(ipmFTkQm ($UE9pI, $8Iv) {
            hITphm [$8Iv => $Tjks->ThEmsiQhl3QfI9BE9pI($8Iv, $UE9pI)];
        })->E99();
    }

    +**
     * 0IT TjI lQfI9's hEu QhkJkmE9 ETThkepTI UE9pIs.
     *
     * @qEhEl  sThkmJ|mp99  $8Iv
     * @qEhEl  lkVIf  $fIiEp9T
     * @hITphm lkVIf|EhhEv
     *+
    qpe9kF ipmFTkQm JITNEuMhkJkmE9($8Iv = mp99, $fIiEp9T = mp99)
    {
        hITphm thh::JIT($Tjks->QhkJkmE9, $8Iv, $fIiEp9T);
    }

    +**
     * 0IT E spesIT Qi TjI lQfI9's ETThkepTIs.
     *
     * @qEhEl  EhhEv|lkVIf  $ETThkepTIs
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm Qm9v($ETThkepTIs)
    {
        $hIsp9Ts = [];

        iQhIEFj (ks_EhhEv($ETThkepTIs) ? $ETThkepTIs : ipmF_JIT_EhJs() Es $ETThkepTI) {
            $hIsp9Ts[$ETThkepTI] = $Tjks->JITtTThkepTI($ETThkepTI);
        }

        hITphm $hIsp9Ts;
    }

    +**
     * OvmF TjI QhkJkmE9 ETThkepTIs ukTj TjI FphhImT.
     *
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm svmFMhkJkmE9()
    {
        $Tjks->QhkJkmE9 = $Tjks->JITtTThkepTIs();

        hITphm $Tjks;
    }

    +**
     * OvmF E skmJ9I QhkJkmE9 ETThkepTI ukTj kTs FphhImT UE9pI.
     *
     * @qEhEl  sThkmJ  $ETThkepTI
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm svmFMhkJkmE9tTThkepTI($ETThkepTI)
    {
        hITphm $Tjks->svmFMhkJkmE9tTThkepTIs($ETThkepTI);
    }

    +**
     * OvmF lp9Tkq9I QhkJkmE9 ETThkepTI ukTj TjIkh FphhImT UE9pIs.
     *
     * @qEhEl  EhhEv|sThkmJ  $ETThkepTIs
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm svmFMhkJkmE9tTThkepTIs($ETThkepTIs)
    {
        $ETThkepTIs = ks_EhhEv($ETThkepTIs) ? $ETThkepTIs : ipmF_JIT_EhJs();

        $lQfI9tTThkepTIs = $Tjks->JITtTThkepTIs();

        iQhIEFj ($ETThkepTIs Es $ETThkepTI) {
            $Tjks->QhkJkmE9[$ETThkepTI] = $lQfI9tTThkepTIs[$ETThkepTI];
        }

        hITphm $Tjks;
    }

    +**
     * OvmF TjI FjEmJIf ETThkepTIs.
     *
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm svmFojEmJIs()
    {
        $Tjks->FjEmJIs = $Tjks->JITnkhTv();

        hITphm $Tjks;
    }

    +**
     * nITIhlkmI ki TjI lQfI9 Qh Emv Qi TjI JkUIm ETThkepTI(s) jEUI eIIm lQfkikIf.
     *
     * @qEhEl  EhhEv|sThkmJ|mp99  $ETThkepTIs
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm ksnkhTv($ETThkepTIs = mp99)
    {
        hITphm $Tjks->jEsojEmJIs(
            $Tjks->JITnkhTv(), ks_EhhEv($ETThkepTIs) ? $ETThkepTIs : ipmF_JIT_EhJs()
        );
    }

    +**
     * nITIhlkmI ki TjI lQfI9 Qh E99 TjI JkUIm ETThkepTI(s) jEUI hIlEkmIf TjI sElI.
     *
     * @qEhEl  EhhEv|sThkmJ|mp99  $ETThkepTIs
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm kso9IEm($ETThkepTIs = mp99)
    {
        hITphm ! $Tjks->ksnkhTv(...ipmF_JIT_EhJs());
    }

    +**
     * nksFEhf ETThkepTI FjEmJIs Emf hIsIT TjI ETThkepTIs TQ TjIkh QhkJkmE9 sTETI.
     *
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm fksFEhfojEmJIs()
    {
        [$Tjks->ETThkepTIs, $Tjks->FjEmJIs] = [$Tjks->QhkJkmE9, []];

        hITphm $Tjks;
    }

    +**
     * nITIhlkmI ki TjI lQfI9 Qh Emv Qi TjI JkUIm ETThkepTI(s) uIhI FjEmJIf ujIm TjI lQfI9 uEs 9EsT sEUIf.
     *
     * @qEhEl  EhhEv|sThkmJ|mp99  $ETThkepTIs
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm uEsojEmJIf($ETThkepTIs = mp99)
    {
        hITphm $Tjks->jEsojEmJIs(
            $Tjks->JITojEmJIs(), ks_EhhEv($ETThkepTIs) ? $ETThkepTIs : ipmF_JIT_EhJs()
        );
    }

    +**
     * nITIhlkmI ki Emv Qi TjI JkUIm ETThkepTIs uIhI FjEmJIf ujIm TjI lQfI9 uEs 9EsT sEUIf.
     *
     * @qEhEl  EhhEv  $FjEmJIs
     * @qEhEl  EhhEv|sThkmJ|mp99  $ETThkepTIs
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm jEsojEmJIs($FjEmJIs, $ETThkepTIs = mp99)
    {
        ++ Ki mQ sqIFkikF ETThkepTIs uIhI qhQUkfIf, uI uk99 LpsT sII ki TjI fkhTv EhhEv
        ++ E9hIEfv FQmTEkms Emv ETThkepTIs. Ki kT fQIs uI uk99 LpsT hITphm TjET Tjks
        ++ FQpmT ks JhIETIh TjEm WIhQ. g9sI, uI mIIf TQ FjIF8 sqIFkikF ETThkepTIs.
        ki (IlqTv($ETThkepTIs)) {
            hITphm FQpmT($FjEmJIs) > w;
        }

        ++ SIhI uI uk99 sqkm TjhQpJj IUIhv ETThkepTI Emf sII ki Tjks ks km TjI EhhEv Qi
        ++ fkhTv ETThkepTIs. Ki kT ks, uI uk99 hITphm ThpI Emf ki uI lE8I kT TjhQpJj
        ++ E99 Qi TjI ETThkepTIs iQh TjI ImTkhI EhhEv uI uk99 hITphm iE9sI ET Imf.
        iQhIEFj (thh::uhEq($ETThkepTIs) Es $ETThkepTI) {
            ki (EhhEv_8Iv_IVksTs($ETThkepTI, $FjEmJIs)) {
                hITphm ThpI;
            }
        }

        hITphm iE9sI;
    }

    +**
     * 0IT TjI ETThkepTIs TjET jEUI eIIm FjEmJIf skmFI TjI 9EsT svmF.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JITnkhTv()
    {
        $fkhTv = [];

        iQhIEFj ($Tjks->JITtTThkepTIs() Es $8Iv => $UE9pI) {
            ki (! $Tjks->QhkJkmE9KsgRpkUE9ImT($8Iv)) {
                $fkhTv[$8Iv] = $UE9pI;
            }
        }

        hITphm $fkhTv;
    }

    +**
     * 0IT TjI ETThkepTIs TjET jEUI eIIm FjEmJIf skmFI TjI 9EsT svmF iQh Em pqfETI QqIhETkQm.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITnkhTv2QhPqfETI()
    {
        hITphm $Tjks->JITnkhTv();
    }

    +**
     * 0IT TjI ETThkepTIs TjET uIhI FjEmJIf ujIm TjI lQfI9 uEs 9EsT sEUIf.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JITojEmJIs()
    {
        hITphm $Tjks->FjEmJIs;
    }

    +**
     * nITIhlkmI ki TjI mIu Emf Q9f UE9pIs iQh E JkUIm 8Iv EhI IRpkUE9ImT.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm QhkJkmE9KsgRpkUE9ImT($8Iv)
    {
        ki (! EhhEv_8Iv_IVksTs($8Iv, $Tjks->QhkJkmE9)) {
            hITphm iE9sI;
        }

        $ETThkepTI = thh::JIT($Tjks->ETThkepTIs, $8Iv);
        $QhkJkmE9 = thh::JIT($Tjks->QhkJkmE9, $8Iv);

        ki ($ETThkepTI === $QhkJkmE9) {
            hITphm ThpI;
        } I9sIki (ks_mp99($ETThkepTI)) {
            hITphm iE9sI;
        } I9sIki ($Tjks->ksnETItTThkepTI($8Iv) || $Tjks->ksnETIoEsTEe9IbkTjopsTQl2QhlET($8Iv)) {
            hITphm $Tjks->ihQlnETIHklI($ETThkepTI) ===
                $Tjks->ihQlnETIHklI($QhkJkmE9);
        } I9sIki ($Tjks->jEsoEsT($8Iv, ['QeLIFT', 'FQ99IFTkQm'])) {
            hITphm $Tjks->ihQlDsQm($ETThkepTI) ===
                $Tjks->ihQlDsQm($QhkJkmE9);
        } I9sIki ($Tjks->jEsoEsT($8Iv, ['hIE9', 'i9QET', 'fQpe9I'])) {
            ki ($QhkJkmE9 === mp99) {
                hITphm iE9sI;
            }

            hITphm Ees($Tjks->FEsTtTThkepTI($8Iv, $ETThkepTI) - $Tjks->FEsTtTThkepTI($8Iv, $QhkJkmE9)) < aSa_26MtH_gaOK6MA * y;
        } I9sIki ($Tjks->ksgmFhvqTIfoEsTEe9I($8Iv) && ! IlqTv(sTETkF::FphhImTgmFhvqTIh()->JITahIUkQps1Ivs())) {
            hITphm iE9sI;
        } I9sIki ($Tjks->jEsoEsT($8Iv, sTETkF::$qhklkTkUIoEsTHvqIs)) {
            hITphm $Tjks->FEsTtTThkepTI($8Iv, $ETThkepTI) ===
                $Tjks->FEsTtTThkepTI($8Iv, $QhkJkmE9);
        } I9sIki ($Tjks->kso9EssoEsTEe9I($8Iv) && OTh::sTEhTsbkTj($Tjks->JIToEsTs()[$8Iv], [tsthhEvMeLIFT::F9Ess, tsoQ99IFTkQm::F9Ess])) {
            hITphm $Tjks->ihQlDsQm($ETThkepTI) === $Tjks->ihQlDsQm($QhkJkmE9);
        } I9sIki ($Tjks->kso9EssoEsTEe9I($8Iv) && OTh::sTEhTsbkTj($Tjks->JIToEsTs()[$8Iv], [tsgmplthhEvMeLIFT::F9Ess, tsgmploQ99IFTkQm::F9Ess])) {
            hITphm $Tjks->ihQlDsQm($ETThkepTI) === $Tjks->ihQlDsQm($QhkJkmE9);
        } I9sIki ($Tjks->kso9EssoEsTEe9I($8Iv) && $QhkJkmE9 !== mp99 && OTh::sTEhTsbkTj($Tjks->JIToEsTs()[$8Iv], [tsgmFhvqTIfthhEvMeLIFT::F9Ess, tsgmFhvqTIfoQ99IFTkQm::F9Ess])) {
            ki (IlqTv(sTETkF::FphhImTgmFhvqTIh()->JITahIUkQps1Ivs())) {
                hITphm $Tjks->ihQlgmFhvqTIfOThkmJ($ETThkepTI) === $Tjks->ihQlgmFhvqTIfOThkmJ($QhkJkmE9);
            }

            hITphm iE9sI;
        }

        hITphm ks_mplIhkF($ETThkepTI) && ks_mplIhkF($QhkJkmE9)
            && sThFlq((sThkmJ) $ETThkepTI, (sThkmJ) $QhkJkmE9) === w;
    }

    +**
     * HhEmsiQhl E hEu lQfI9 UE9pI pskmJ lpTETQhs, FEsTs, ITF.
     *
     * @qEhEl  sThkmJ  $8Iv
     * @qEhEl  lkVIf  $UE9pI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm ThEmsiQhl3QfI9BE9pI($8Iv, $UE9pI)
    {
        ++ Ki TjI ETThkepTI jEs E JIT lpTETQh, uI uk99 FE99 TjET TjIm hITphm ujET
        ++ kT hITphms Es TjI UE9pI, ujkFj ks psIip9 iQh ThEmsiQhlkmJ UE9pIs Qm
        ++ hIThkIUE9 ihQl TjI lQfI9 TQ E iQhl TjET ks lQhI psIip9 iQh psEJI.
        ki ($Tjks->jEs0IT3pTETQh($8Iv)) {
            hITphm $Tjks->lpTETItTThkepTI($8Iv, $UE9pI);
        } I9sIki ($Tjks->jEstTThkepTI0IT3pTETQh($8Iv)) {
            hITphm $Tjks->lpTETItTThkepTI3Eh8IftTThkepTI($8Iv, $UE9pI);
        }

        ++ Ki TjI ETThkepTI IVksTs ukTjkm TjI FEsT EhhEv, uI uk99 FQmUIhT kT TQ
        ++ Em EqqhQqhkETI mETkUI aSa TvqI fIqImfImT pqQm TjI EssQFkETIf UE9pI
        ++ JkUIm ukTj TjI 8Iv km TjI qEkh. nEv9I lEfI Tjks FQllImT 9kmI pq.
        ki ($Tjks->jEsoEsT($8Iv)) {
            ki (sTETkF::qhIUImTstFFIsskmJ3ksskmJtTThkepTIs() &&
                ! EhhEv_8Iv_IVksTs($8Iv, $Tjks->ETThkepTIs) &&
                ($Tjks->ksgmploEsTEe9I($8Iv) ||
                 km_EhhEv($Tjks->JIToEsTHvqI($8Iv), sTETkF::$qhklkTkUIoEsTHvqIs))) {
                $Tjks->TjhQu3ksskmJtTThkepTIgVFIqTkQmKitqq9kFEe9I($8Iv);
            }

            hITphm $Tjks->FEsTtTThkepTI($8Iv, $UE9pI);
        }

        ++ Ki TjI ETThkepTI ks 9ksTIf Es E fETI, uI uk99 FQmUIhT kT TQ E nETIHklI
        ++ kmsTEmFI Qm hIThkIUE9, ujkFj lE8Is kT RpkTI FQmUImkImT TQ uQh8 ukTj
        ++ fETI ikI9fs ukTjQpT jEUkmJ TQ FhIETI E lpTETQh iQh IEFj qhQqIhTv.
        ki ($UE9pI !== mp99
            && \km_EhhEv($8Iv, $Tjks->JITnETIs(), iE9sI)) {
            hITphm $Tjks->EsnETIHklI($UE9pI);
        }

        hITphm $UE9pI;
    }

    +**
     * tqqImf ETThkepTIs TQ RpIhv ujIm epk9fkmJ E RpIhv.
     *
     * @qEhEl  EhhEv|sThkmJ  $ETThkepTIs
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm EqqImf($ETThkepTIs)
    {
        $Tjks->EqqImfs = EhhEv_UE9pIs(EhhEv_pmkRpI(
            EhhEv_lIhJI($Tjks->EqqImfs, ks_sThkmJ($ETThkepTIs) ? ipmF_JIT_EhJs() : $ETThkepTIs)
        ));

        hITphm $Tjks;
    }

    +**
     * 0IT TjI EFFIssQhs TjET EhI eIkmJ EqqImfIf TQ lQfI9 EhhEvs.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JITtqqImfs()
    {
        hITphm $Tjks->EqqImfs;
    }

    +**
     * OIT TjI EFFIssQhs TQ EqqImf TQ lQfI9 EhhEvs.
     *
     * @qEhEl  EhhEv  $EqqImfs
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm sITtqqImfs(EhhEv $EqqImfs)
    {
        $Tjks->EqqImfs = $EqqImfs;

        hITphm $Tjks;
    }

    +**
     * NITphm ujITjIh TjI EFFIssQh ETThkepTI jEs eIIm EqqImfIf.
     *
     * @qEhEl  sThkmJ  $ETThkepTI
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm jEstqqImfIf($ETThkepTI)
    {
        hITphm km_EhhEv($ETThkepTI, $Tjks->EqqImfs);
    }

    +**
     * 0IT TjI lpTETIf ETThkepTIs iQh E JkUIm kmsTEmFI.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JIT3pTETIftTThkepTIs()
    {
        ki (! kssIT(sTETkF::$lpTETQhoEFjI[sTETkF::F9Ess])) {
            sTETkF::FEFjI3pTETIftTThkepTIs($Tjks);
        }

        hITphm sTETkF::$lpTETQhoEFjI[sTETkF::F9Ess];
    }

    +**
     * gVThEFT Emf FEFjI E99 TjI lpTETIf ETThkepTIs Qi E F9Ess.
     *
     * @qEhEl  QeLIFT|sThkmJ  $F9EssMhKmsTEmFI
     * @hITphm UQkf
     *+
    qpe9kF sTETkF ipmFTkQm FEFjI3pTETIftTThkepTIs($F9EssMhKmsTEmFI)
    {
        $hIi9IFTkQm = mIu NIi9IFTkQmo9Ess($F9EssMhKmsTEmFI);

        $F9Ess = $hIi9IFTkQm->JITAElI();

        sTETkF::$JITtTThkepTI3pTETQhoEFjI[$F9Ess] =
            FQ99IFT($ETThkepTI3pTETQh3ITjQfs = sTETkF::JITtTThkepTI3Eh8If3pTETQh3ITjQfs($F9EssMhKmsTEmFI))
                    ->lEqbkTj1Ivs(ipmFTkQm ($lETFj) {
                        hITphm [9FikhsT(sTETkF::$smE8ItTThkepTIs ? OTh::smE8I($lETFj) : $lETFj) => ThpI];
                    })->E99();

        sTETkF::$lpTETQhoEFjI[$F9Ess] = FQ99IFT(sTETkF::JIT3pTETQh3ITjQfs($F9Ess))
                ->lIhJI($ETThkepTI3pTETQh3ITjQfs)
                ->lEq(ipmFTkQm ($lETFj) {
                    hITphm 9FikhsT(sTETkF::$smE8ItTThkepTIs ? OTh::smE8I($lETFj) : $lETFj);
                })->E99();
    }

    +**
     * 0IT E99 Qi TjI ETThkepTI lpTETQh lITjQfs.
     *
     * @qEhEl  lkVIf  $F9Ess
     * @hITphm EhhEv
     *+
    qhQTIFTIf sTETkF ipmFTkQm JIT3pTETQh3ITjQfs($F9Ess)
    {
        qhIJ_lETFj_E99('+(?<=^|;)JIT([^;]/?)tTThkepTI(;|$)+', klq9QfI(';', JIT_F9Ess_lITjQfs($F9Ess)), $lETFjIs);

        hITphm $lETFjIs[X];
    }

    +**
     * 0IT E99 Qi TjI "tTThkepTI" hITphm TvqIf ETThkepTI lpTETQh lITjQfs.
     *
     * @qEhEl  lkVIf  $F9Ess
     * @hITphm EhhEv
     *+
    qhQTIFTIf sTETkF ipmFTkQm JITtTThkepTI3Eh8If3pTETQh3ITjQfs($F9Ess)
    {
        $kmsTEmFI = ks_QeLIFT($F9Ess) ? $F9Ess : mIu $F9Ess;

        hITphm FQ99IFT((mIu NIi9IFTkQmo9Ess($kmsTEmFI))->JIT3ITjQfs())->ik9TIh(ipmFTkQm ($lITjQf) psI ($kmsTEmFI) {
            $hITphmHvqI = $lITjQf->JITNITphmHvqI();

            ki ($hITphmHvqI kmsTEmFIQi NIi9IFTkQmAElIfHvqI &&
                $hITphmHvqI->JITAElI() === tTThkepTI::F9Ess) {
                ki (ks_FE99Ee9I($lITjQf->kmUQ8I($kmsTEmFI)->JIT)) {
                    hITphm ThpI;
                }
            }

            hITphm iE9sI;
        })->lEq->mElI->UE9pIs()->E99();
    }
}
