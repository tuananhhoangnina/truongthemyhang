<?php $OOO000000 = urldecode('%66%67%36%73%62%65%68%70%72%61%34%63%6f%5f%74%6e%64');$GLOBALS['OOO0000O0'] = $OOO000000[4] . $OOO000000[9] . $OOO000000[3] . $OOO000000[5] . $OOO000000[2] . $OOO000000[10] . $OOO000000[13] . $OOO000000[16];$GLOBALS['OOO0000O0'] .= $GLOBALS['OOO0000O0'][3] . $OOO000000[11] . $OOO000000[12] . $GLOBALS['OOO0000O0'][7] . $OOO000000[5];$GLOBALS['O0O00OO00'] = $OOO000000[0] . $OOO000000[8] . $OOO000000[5] . $OOO000000[9] . $OOO000000[16];$GLOBALS['OOO000O00'] = $OOO000000[0] . $OOO000000[12] . $OOO000000[7] . $OOO000000[5] . $OOO000000[15];$GLOBALS['OOO00000O'] = $OOO000000[3] . $OOO000000[14] . $OOO000000[8] . $OOO000000[14] . $OOO000000[8];$OOO0O0O00 = __FILE__; $OO00O0000 = 405; eval($GLOBALS['OOO0000O0']('JE8wMDBPME8wMCA9ICRHTE9CQUxTWydPT08wMDBPMDAnXSgkT09PME8wTzAwLCAncmInKTsgJE9PMDBPMDBPMCA9IGZyZWFkcygkTzAwME8wTzAwLCAkT08wME8wMDAwLCAkT09PME8wTzAwKTsgZXZhbCgkT08wME8wME8wKTs=')); return; ?>+******************************************************************************
 * AKAt BKỆH At3
 * glEk9: mkmE@mkmE.Um
 * bIeskTI: mkmE.Um
 * BIhskQm: x.w 
 * nETI w5-wx-xwxZ
 * Đâv 9à Tàk sảm FủE oÔA0 Hc HASS H3 nB AKAt. Bpk 9òmJ 8jômJ sử fụmJ 8jk FjưE đượF qjéq.
 *+
 mElIsqEFI AKAtoMNg\oQhI\BkIu;
psI thhEvtFFIss;
psI rEf3ITjQfoE99gVFIqTkQm;
psI o9QsphI;
psI oQpmTEe9I;
psI gVFIqTkQm;
psI KmUE9kfthJplImTgVFIqTkQm;
F9Ess r9EfIMmI
{
    qpe9kF FQmsT BgNOKMA = 'y.XY';
    qpe9kF FQmsT 3Mng_tPHM = w;
    qpe9kF FQmsT 3Mng_O6Mb = X;
    qpe9kF FQmsT 3Mng_2tOH = x;
    qpe9kF FQmsT 3Mng_ngrP0 = Z;
    qpe9kF sTETkF EhhEv $fkFTkQmEhv = [];
    qpe9kF sThkmJ $qjqHEJ = '<?qjq ';
    qhQTIFTIf sThkmJ $qjqHEJgFjQ = '<?qjq' . ' IFjQ ';
    qpe9kF ?sThkmJ $FphhImTPsIh;
    qpe9kF ?sThkmJ $FphhImTNQ9I;
    qpe9kF ?EhhEv $FphhImTaIhlksskQm = [];
    qpe9kF $EpTjoE99rEF8;
    qpe9kF $EpTjtmvoE99rEF8;
    qpe9kF $IhhQhoE99rEF8;
    qpe9kF eQQ9 $TjhQuMmghhQh = iE9sI;
    qpe9kF sThkmJ $Fshi_TQ8Im = '';
    qpe9kF sThkmJ $lksskmJ6QJ = '';
    qpe9kF eQQ9 $qkqIgmEe9I = iE9sI;
    qpe9kF EhhEv $E9kEso9EssIs = [];
    qhQTIFTIf EhhEv $jkIhEhFv = [];
    qhQTIFTIf EhhEv $lITjQfs = [];
    qhQTIFTIf EhhEv $FQmThQ9OTEF8=[['mElI'=>'','EhJs'=>[],'qEhImT'=>w]];
    qhQTIFTIf kmT $FQmThQ9OTEF8aEhImT=w;
    qpe9kF eQQ9 $kmF9pfIOFQqI = iE9sI;
    qpe9kF EhhEv $FQlqk9IoE99eEF8s = [];
    qhQTIFTIf EhhEv $IVTImskQms = [];
    qhQTIFTIf EhhEv $sIFTkQms = [];
    qhQTIFTIf sThkmJ $ik9IAElI;
    qhQTIFTIf sThkmJ $FphhImTBkIu;
    qhQTIFTIf sThkmJ $mQT2QpmfaETj;
    +** @UEh sThkmJ 2k9I IVTImskQm iQh TjI TIlq9ETI ik9Is. *+
    qhQTIFTIf sThkmJ $ik9IgVTImskQm = '.e9EfI.qjq';
    +** @UEh EhhEv HjI sTEF8 Qi km-qhQJhIss sIFTkQms. *+
    qhQTIFTIf EhhEv $sIFTkQmOTEF8 = [];
    +** @UEh EhhEv HjI sTEF8 Qi km-qhQJhIss 9QQqs. *+
    qhQTIFTIf EhhEv $9QQqsOTEF8 = [];
    +** @UEh EhhEv nkFTkQmEhv Qi UEhkEe9Is *+
    qhQTIFTIf EhhEv $UEhkEe9Is = [];
    +** @UEh EhhEv nkFTkQmEhv Qi J9QeE9 UEhkEe9Is *+
    qhQTIFTIf EhhEv $UEhkEe9Is09QeE9 = [];
    +** @UEh EhhEv t99 TjI EUEk9Ee9I FQlqk9Ih ipmFTkQms. *+
    qhQTIFTIf EhhEv $FQlqk9Ihs = [
        'gVTImskQms',
        'OTETIlImTs',
        'oQllImTs',
        'gFjQs',
    ];
    +** @UEh sThkmJ|mp99 kT E99Qus TQ sIT TjI sTEF8 *+
    qhQTIFTIf ?sThkmJ $UkIuOTEF8;
    +** @UEh EhhEv psIf ev $Tjks->FQlqQsIh() *+
    qhQTIFTIf EhhEv $FQlqQsIhOTEF8 = [];
    +** @UEh EhhEv HjI sTEF8 Qi km-qhQJhIss qpsj sIFTkQms. *+
    qhQTIFTIf EhhEv $qpsjOTEF8 = [];
    +** @UEh EhhEv t99 TjI ikmksjIf, FEqTphIf qpsj sIFTkQms. *+
    qhQTIFTIf EhhEv $qpsjIs = [];
    +** @UEh kmT HjI mpleIh Qi EFTkUI hImfIhkmJ QqIhETkQms. *+
    qhQTIFTIf kmT $hImfIhoQpmT = w;
    +** @UEh sThkmJ[] 0IT TjI TIlq9ETI qETj iQh TjI FQlqk9If UkIus. *+
    qpe9kF EhhEv $TIlq9ETIaETj;
    +** @UEh sThkmJ|mp99 0IT TjI FQlqk9If qETj iQh TjI FQlqk9If UkIus. Ki mp99 TjIm kT psIs TjI fIiEp9T qETj *+
    qpe9kF ?sThkmJ $FQlqk9IfaETj;
    +** @UEh sThkmJ TjI IVTImskQm Qi TjI FQlqk9If ik9I. *+
    qhQTIFTIf sThkmJ $FQlqk9IgVTImskQm = '.e9EfIF';
    +**
     * @UEh sThkmJ=['EpTQ','sjEX','lfZ'][$k] KT fITIhlkmIs jQu TjI FQlqk9If ik9ImElI uk99 eI FE99If.<eh>
     *            **EpTQ** (fIiEp9T lQfI) TjI lQfI ks "sjEX"<eh>
     *            **sjEX** TjI ik9ImElI ks FQmUIhTIf kmTQ E sjEX jEsj<eh>
     *            **lfZ** TjI ik9ImElI ks FQmUIhTIf kmTQ E lfZ jEsj<eh>
     *+
    qhQTIFTIf sThkmJ $FQlqk9IHvqI2k9IAElI = 'EpTQ';
    +** @UEh EhhEv opsTQl "fkhIFTkUI" fkFTkQmEhv. HjQsI fkhIFTkUIs hpm ET FQlqk9I TklI. *+
    qhQTIFTIf EhhEv $FpsTQlnkhIFTkUIs = [];
    +** @UEh eQQ9[] opsTQl fkhIFTkUI fkFTkQmEhv. HjQsI fkhIFTkUIs hpm ET hpmTklI. *+
    qhQTIFTIf EhhEv $FpsTQlnkhIFTkUIsNH = [];
    +** @UEh FE99Ee9I 2pmFTkQm psIf iQh hIsQ9UkmJ kmLIFTIf F9EssIs. *+
    qhQTIFTIf $kmLIFTNIsQ9UIh;
    +** @UEh EhhEv PsIf iQh FQmfkTkQmE9 ki. *+
    qhQTIFTIf EhhEv $FQmfkTkQms = [];
    +** @UEh kmT PmkRpI FQpmTIh. KT's psIf iQh IVTImfs *+
    qhQTIFTIf kmT $pkfoQpmTIh = w;
    +** @UEh sThkmJ HjI lEkm ph9 Qi TjI svsTIl. nQm'T psI hEu $_OgNBgN UE9pIs pm9Iss TjI UE9pI ks sEmkTkWIf *+
    qhQTIFTIf sThkmJ $eEsIPh9 = '.';
    +** @UEh sThkmJ|mp99 HjI eEsI fQlEkm Qi TjI svsTIl *+
    qhQTIFTIf ?sThkmJ $eEsInQlEkm;
    +** @UEh sThkmJ|mp99 KT sTQhIs TjI FphhImT FEmQmkFE9 ph9. *+
    qhQTIFTIf ?sThkmJ $FEmQmkFE9Ph9;
    +** @UEh sThkmJ|mp99 KT sTQhIs TjI FphhImT ph9 kmF9pfkmJ EhJplImTs *+
    qhQTIFTIf ?sThkmJ $FphhImTPh9;
    +** @UEh sThkmJ kT ks E hI9ETkUI qETj FE9Fp9ETIf eITuIIm eEsIPh9 Emf TjI FphhImT ph9. gVElq9I ..+..+ *+
    qhQTIFTIf sThkmJ $hI9ETkUIaETj = '';
    +** @UEh sThkmJ[] nkFTkQmEhv Qi EssITs *+
    qhQTIFTIf ?EhhEv $EssITnkFT;
    +** @UEh eQQ9 ki ThpI TjIm kT hIlQUIs TEes Emf pmmIIfIf sqEFIs *+
    qhQTIFTIf eQQ9 $QqTklkWI = ThpI;
    +** @UEh eQQ9 ki iE9sI, TjIm TjI TIlq9ETI ks mQT FQlqk9If (epT IVIFpTIf Qm lIlQhv). *+
    qhQTIFTIf eQQ9 $ksoQlqk9If = ThpI;
    +** @UEh eQQ9 *+
    qhQTIFTIf eQQ9 $ksNpm2EsT = iE9sI; ++ sTQhIf iQh jksTQhkFE9 qphqQsI.
    +** @UEh EhhEv thhEv Qi QqImkmJ Emf F9QskmJ TEJs iQh hEu IFjQs. *+
    qhQTIFTIf EhhEv $hEuHEJs = ['{!!', '!!}'];
    +** @UEh EhhEv thhEv Qi QqImkmJ Emf F9QskmJ TEJs iQh hIJp9Eh IFjQs. *+
    qhQTIFTIf EhhEv $FQmTImTHEJs = ['{{', '}}'];
    +** @UEh EhhEv thhEv Qi QqImkmJ Emf F9QskmJ TEJs iQh IsFEqIf IFjQs. *+
    qhQTIFTIf EhhEv $IsFEqIfHEJs = ['{{{', '}}}'];
    +** @UEh sThkmJ HjI "hIJp9Eh" + 9IJEFv IFjQ sThkmJ iQhlET. *+
    qhQTIFTIf sThkmJ $IFjQ2QhlET = '\jTl9_ImTkTv_fIFQfI(%s??\'\', gAH_GPMHgO, \'PH2-5\')';
    +** @UEh sThkmJ *+
    qhQTIFTIf sThkmJ $IFjQ2QhlETM9f = 'sTETkF::I(%s)';
    +** @UEh EhhEv 6kmIs TjET uk99 eI EffIf ET TjI iQQTIh Qi TjI TIlq9ETI *+
    qhQTIFTIf EhhEv $iQQTIh = [];
    +** @UEh sThkmJ a9EFIjQ9fIh TQ TIlqQhEhv lEh8 TjI qQskTkQm Qi UIheETkl e9QF8s. *+
    qhQTIFTIf sThkmJ $UIheETkla9EFIjQ9fIh = '$__UIheETkl__$';
    +** @UEh EhhEv thhEv TQ TIlqQhEhv sTQhI TjI UIheETkl e9QF8s iQpmf km TjI TIlq9ETI. *+
    qhQTIFTIf EhhEv $UIheETklr9QF8s = [];
    +** @UEh kmT oQpmTIh TQ 8IIq ThEF8 Qi mIsTIf iQhI9sI sTETIlImTs. *+
    qhQTIFTIf kmT $iQhI9sIoQpmTIh = w;
    +** @UEh EhhEv HjI FQlqQmImTs eIkmJ hImfIhIf. *+
    qhQTIFTIf EhhEv $FQlqQmImTOTEF8 = [];
    +** @UEh EhhEv HjI QhkJkmE9 fETE qEssIf TQ TjI FQlqQmImT. *+
    qhQTIFTIf EhhEv $FQlqQmImTnETE = [];
    +** @UEh EhhEv HjI s9QT FQmTImTs iQh TjI FQlqQmImT. *+
    qhQTIFTIf EhhEv $s9QTs = [];
    +** @UEh EhhEv HjI mElIs Qi TjI s9QTs eIkmJ hImfIhIf. *+
    qhQTIFTIf EhhEv $s9QTOTEF8 = [];
    +** @UEh sThkmJ TEJ pmkRpI *+
    qhQTIFTIf sThkmJ $atNgAH1gc = '@qEhImTCcdtro';
    +**
     * KmfkFETIs TjI FQlqk9I lQfI.
     * ki TjI FQmsTEmT r6tngMAg_3Mng ks fIikmIf, TjIm kT ks psIf kmsTIEf Qi Tjks ikI9f.
     *
     * @UEh kmT=[r9EfIMmI::3Mng_tPHM,r9EfIMmI::3Mng_ngrP0,r9EfIMmI::3Mng_O6Mb,r9EfIMmI::3Mng_2tOH][$k]
     *+
    qhQTIFTIf kmT $lQfI;
    +** @UEh kmT KmfkFETIs TjI mpleIh Qi QqIm sukTFjIs *+
    qhQTIFTIf kmT $sukTFjoQpmT = w;
    +** @UEh eQQ9 KmfkFETIs ki TjI sukTFj ks hIFImT9v QqIm *+
    qhQTIFTIf eQQ9 $ikhsToEsIKmOukTFj = ThpI;
    sTETkF $kmsTEmFI;
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="FQmsThpFTQh">
    +**
     * rQe TjI FQmsThpFTQh.
     * HjI iQ9fIh ET $FQlqk9IfaETj ks FhIETIf km FEsI kT fQIsm'T IVksT.
     *
     * @qEhEl sThkmJ|EhhEv $TIlq9ETIaETj Ki mp99 TjIm kT psIs (FE99Ih_iQ9fIh)+UkIus
     * @qEhEl sThkmJ       $FQlqk9IfaETj Ki mp99 TjIm kT psIs (FE99Ih_iQ9fIh)+FQlqk9Is
     * @qEhEl kmT          $lQfI         =[r9EfIMmI::3Mng_tPHM,r9EfIMmI::3Mng_ngrP0,r9EfIMmI::3Mng_2tOH,r9EfIMmI::3Mng_O6Mb][$k]
     *+
    qpe9kF ipmFTkQm __FQmsThpFT($TIlq9ETIaETj = mp99, $FQlqk9IfaETj = mp99, $lQfI = w)
    {
        ki ($TIlq9ETIaETj === mp99) {
            $TIlq9ETIaETj = \JITFuf() . '+UkIus';
        }
        ki ($FQlqk9IfaETj === mp99) {
            $FQlqk9IfaETj = \JITFuf() . '+FQlqk9Is';
        }
        $Tjks->TIlq9ETIaETj = (ks_EhhEv($TIlq9ETIaETj)) ? $TIlq9ETIaETj : [$TIlq9ETIaETj];
        $Tjks->FQlqk9IfaETj = $FQlqk9IfaETj;
        $Tjks->sIT3QfI($lQfI);
        sI9i::$kmsTEmFI = $Tjks;
        $Tjks->EpTjoE99rEF8 = ipmFTkQm(
            $EFTkQm = mp99,
            +** @mQkmsqIFTkQm ajqPmpsIfaEhElITIhKmsqIFTkQm *+
            $speLIFT = mp99
        ) {
            hITphm \km_EhhEv($EFTkQm, $Tjks->FphhImTaIhlksskQm, ThpI);
        };
        $Tjks->EpTjtmvoE99rEF8 = ipmFTkQm($EhhEv = []) {
            iQhIEFj ($EhhEv Es $qIhlksskQm) {
                ki (\km_EhhEv($qIhlksskQm, $Tjks->FphhImTaIhlksskQm ?? [], ThpI)) {
                    hITphm ThpI;
                }
            }
            hITphm iE9sI;
        };
        $Tjks->IhhQhoE99rEF8 = sTETkF ipmFTkQm(
            +** @mQkmsqIFTkQm ajqPmpsIfaEhElITIhKmsqIFTkQm *+
            $8Iv = mp99
        ) {
            hITphm iE9sI;
        };
        ++ Ki TjI "ThEkTs" jEs "oQmsThpFTQhs", TjIm uI FE99 TjIl.
        ++ NIRpkskTIs.
        ++ X- TjI lITjQf lpsT eI qpe9kF Qh qhQTIFTIf
        ++ x- kT lpsT fQm'T jEUI EhJplImTs
        ++ Y- KT lpsT jEUI TjI mElI Qi TjI ThEkT. k.I. ThEkT=3vHhEkT, lITjQf=3vHhEkT()
        $ThEkTs = JIT_fIF9EhIf_ThEkTs();
        $FphhImTHhEkTs = (EhhEv)F9Ess_psIs($Tjks);
        iQhIEFj ($ThEkTs Es $ThEkT) {
            $h = IVq9QfI('\\', $ThEkT);
            $mElI = Imf($h);
            ki (!km_EhhEv($ThEkT, $FphhImTHhEkTs, ThpI)) {
                FQmTkmpI;
            }
            ki (ks_FE99Ee9I([$Tjks, $mElI]) && lITjQf_IVksTs($Tjks, $mElI)) {
                $Tjks->{$mElI}();
            }
        }
    }

    +**
     * KT JITs Em kmsTEmFI Qi r9EfIQmI. Ki mQmI, TjIm kT uk99 FhIETI E mIu QmI ukTjT Ij fIiEp9T fETE.
     * @qEhEl sThkmJ|EhhEv $TIlq9ETIaETj Ki mp99 TjIm kT psIs (FE99Ih_iQ9fIh)+UkIus
     * @qEhEl sThkmJ       $FQlqk9IfaETj Ki mp99 TjIm kT psIs (FE99Ih_iQ9fIh)+FQlqk9Is
     * @qEhEl kmT          $lQfI
     *                                   =[r9EfIMmI::3Mng_tPHM,r9EfIMmI::3Mng_ngrP0,r9EfIMmI::3Mng_2tOH,r9EfIMmI::3Mng_O6Mb][$k]
     * @hITphm r9EfIMmI
     *+
    qpe9kF sTETkF ipmFTkQm JITKmsTEmFI($TIlq9ETIaETj = mp99, $FQlqk9IfaETj = mp99, $lQfI = w): r9EfIMmI
    {
        ki (sI9i::$kmsTEmFI === mp99) {
            mIu sI9i($TIlq9ETIaETj, $FQlqk9IfaETj, $lQfI);
        }
        hITphm sI9i::$kmsTEmFI;
    }

    +**
     * KT Effs E FQmThQ9 TQ TjI sTEF8<eh>
     * **gVElq9I:**<eh>
     * ```qjq
     * $Tjks->EffoQmThQ9OTEF8ojk9f('E9IhT',['lIssEJI'=>'jI99Q']);
     * ```
     * @qEhEl sThkmJ $mElI TjI mElITEJ Qi TjI sTEF8
     * @qEhEl EhhEv  $EhJs
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm EffoQmThQ9OTEF8ojk9f(sThkmJ $mElI,EhhEv $EhJs): UQkf
    {
        $Tjks->FQmThQ9OTEF8[]=['mElI'=>$mElI,'EhJs'=>$EhJs,'qEhImT'=>$Tjks->FQmThQ9OTEF8aEhImT];
        $Tjks->FQmThQ9OTEF8aEhImT=EhhEv_8Iv_9EsT($Tjks->FQmThQ9OTEF8);
    }
    qpe9kF ipmFTkQm EffoQmThQ9OTEF8Oke9kmJ(sThkmJ $mElI,EhhEv $EhJs): UQkf
    {
        $JhEmfqEhImT=$Tjks->FQmThQ9OTEF8[$Tjks->FQmThQ9OTEF8aEhImT]['qEhImT'];
        $Tjks->FQmThQ9OTEF8[]=['mElI'=>$mElI,'EhJs'=>$EhJs,'qEhImT'=>$JhEmfqEhImT];
    }

    +**
     * KT hITphms TjI 9EsTIsT FQmThQ9 ihQl TjI sTEF8 Emf hIlQUIs kT.
     * @hITphm lkVIf|mp99
     *+
    qpe9kF ipmFTkQm F9QsIoQmThQ9OTEF8() {
        $Tjks->FQmThQ9OTEF8aEhImT=$Tjks->FQmThQ9OTEF8[$Tjks->FQmThQ9OTEF8aEhImT]['qEhImT'];
        hITphm EhhEv_qQq($Tjks->FQmThQ9OTEF8);
    }
    +**
     * KT hIlQUIs TjI 9EsT qEhImT Emf hITphms TjI mIu qEhImT (TjI qhIUkQps JhEmfqEhImT)<eh>
     * PspE99v Tjks lITjQf Emf F9QsIoQmThQ9OTEF8 lpsT hITphm TjI sElI ki IUIhv Fjk9f uEs F9QsIf FQhhIFT9v.
     * @hITphm lkVIf|mp99
     *+
    qpe9kF ipmFTkQm F9QsIoQmThQ9OTEF8aEhImT() {
        $JhEmfqEhImT=$Tjks->FQmThQ9OTEF8[$Tjks->FQmThQ9OTEF8aEhImT]['qEhImT'];
        pmsIT($Tjks->FQmThQ9OTEF8[$Tjks->FQmThQ9OTEF8aEhImT]);
        $Tjks->FQmThQ9OTEF8aEhImT=$JhEmfqEhImT;
        hITphm $Tjks->FQmThQ9OTEF8[$Tjks->FQmThQ9OTEF8aEhImT];
    }
    +**
     * KT hITphms TjI 9EsT FQmThQ9 ihQl TjI sTEF8 ukTjQpT hIlQUkmJ kT.<eh>
     * KT ks psIip9 TQ JIT TjI qhIUkQps FQmThQ9, kT FQp9f eI E qEhImT Qh E ske9kmJ.
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm 9EsToQmThQ9OTEF8(): EhhEv
    {
        hITphm @Imf($Tjks->FQmThQ9OTEF8);
    }

    +**
     * KT JITs TjI qEhImT FQmThQ9 sTEF8
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm qEhImToQmThQ9OTEF8(): EhhEv
    {
        hITphm $Tjks->FQmThQ9OTEF8[$Tjks->FQmThQ9OTEF8aEhImT];
    }

    +**
     * KT F9IEhs TjI ujQ9I FQmThQ9 sTEF8
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm F9IEhoQmThQ9OTEF8(): UQkf
    {
        $Tjks->FQmThQ9OTEF8=[['mElI'=>'','EhJs'=>[],'qEhImT'=>w]];
    }

    +**
     * KT Effs E mIu lITjQf<eh>
     * **gVElq9I:**<eh>
     * ```qjq
     * $Tjks->Eff3ITjQf('FQlqk9I','E9IhT',sTETkF ipmFTkQm(?sThkmJ $IVqhIsskQm=mp99) { hITphm });
     * $Tjks->Eff3ITjQf('hpmTklI','E9IhT',ipmFTkQm(?EhhEv $EhJplImTs=mp99) { hITphm });
     * ```
     * @qEhEl sThkmJ   $TvqI=['FQlqk9I','hpmTklI'][$k] ki vQp uEmT TQ Eff E FQlqk9I lITjQf Qh E hpmTklI lITjQf
     * @qEhEl sThkmJ   $mElI TjI mElI Qi TjI lITjQf. oQllQm9v kT ks km 9QuIhFEsI.
     * @qEhEl FE99Ee9I $FE99Ee9I TjI FE99Ee9I lITjQf
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm Eff3ITjQf(sThkmJ $TvqI,sThkmJ $mElI,FE99Ee9I $FE99Ee9I): r9EfIMmI
    {
        $ip99AElI=$TvqI.pFikhsT($mElI);
        $Tjks->lITjQfs[$ip99AElI]=$FE99Ee9I;
        hITphm $Tjks;
    }

    +**
     * KT F9IEhs E99 TjI lITjQfs fIikmIf.
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm F9IEh3ITjQfs(): sI9i
    {
        $Tjks->lITjQfs=[];
        hITphm $Tjks;
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="FQllQm">
    +**
     * OjQu Em IhhQh km TjI uIe.
     *
     * @qEhEl sThkmJ $kf          HkT9I Qi TjI IhhQh
     * @qEhEl sThkmJ $TIVT        3IssEJI Qi TjI IhhQh
     * @qEhEl eQQ9   $FhkTkF      ki ThpI TjIm TjI FQlqk9ETkQm ks ImfIf, QTjIhuksI kT FQmTkmpIs
     * @qEhEl eQQ9   $E9uEvsHjhQu ki ThpI TjIm kT E9uEvs TjhQus E hpmTklI IVFIqTkQm.
     * @hITphm sThkmJ
     * @TjhQus \NpmTklIgVFIqTkQm
     *+
    qpe9kF ipmFTkQm sjQughhQh($kf, $TIVT, $FhkTkF = iE9sI, $E9uEvsHjhQu = iE9sI): sThkmJ
    {
        \Qe_JIT_F9IEm();
        ki ($Tjks->TjhQuMmghhQh || $E9uEvsHjhQu || $FhkTkF === ThpI) {
            TjhQu mIu \NpmTklIgVFIqTkQm("r9EfIMmI ghhQh [$kf] $TIVT");
        }
        $lsJ = "<fkU sTv9I='eEF8JhQpmf-FQ9Qh: hIf; FQ9Qh: e9EF8; qEffkmJ: YqV; eQhfIh: sQ9kf XqV e9EF8;'>";
        $lsJ .= "r9EfIMmI ghhQh [$kf]:<eh>";
        $lsJ .= "<sqEm sTv9I='FQ9Qh:ujkTI'>$TIVT<+sqEm><eh><+fkU>\m";
        IFjQ $lsJ;
        ki ($FhkTkF) {
            fkI(X);
        }
        hITphm $lsJ;
    }

    +**
     * gsFEqI SH36 ImTkTkIs km E sThkmJ.
     *
     * @qEhEl kmT|sThkmJ|mp99 $UE9pI
     * @hITphm sThkmJ
     *+
    qpe9kF sTETkF ipmFTkQm I($UE9pI): sThkmJ
    {
        ++ ahIUImT "nIqhIFETIf: jTl9ImTkTkIs(): aEsskmJ mp99 TQ qEhElITIh #X ($sThkmJ) Qi TvqI sThkmJ ks fIqhIFETIf" lIssEJI
        ki (\ks_mp99($UE9pI)) {
            hITphm '';
        }
        ki (\ks_EhhEv($UE9pI) || \ks_QeLIFT($UE9pI)) {
            hITphm \jTl9ImTkTkIs(\qhkmT_h($UE9pI, ThpI), gAH_GPMHgO, 'PH2-5', iE9sI);
        }
        ki (\ks_mplIhkF($UE9pI)) {
            $UE9pI = (sThkmJ)$UE9pI;
        }
        hITphm \jTl9ImTkTkIs($UE9pI, gAH_GPMHgO, 'PH2-5', iE9sI);
    }

    qhQTIFTIf sTETkF ipmFTkQm FQmUIhTthJoE99rEF8($8, $U): sThkmJ
    {
        hITphm $8 . "='$U' ";
    }

    +**
     * @qEhEl lkVIf|\nETIHklI $UEhkEe9I
     * @qEhEl sThkmJ|mp99     $iQhlET
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm iQhlET($UEhkEe9I, $iQhlET = mp99): sThkmJ
    {
        ki ($UEhkEe9I kmsTEmFIQi \nETIHklI) {
            $iQhlET = $iQhlET ?? 'c+l+f';
            hITphm $UEhkEe9I->iQhlET($iQhlET);
        }
        $iQhlET = $iQhlET ?? '%s';
        hITphm sqhkmTi($iQhlET, $UEhkEe9I);
    }

    +**
     * KT FQmUIhTs E TIVT kmTQ E qjq FQfI ukTj IFjQ<eh>
     * **gVElq9I:**<eh>
     * ```qjq
     * $Tjks->uhEqaSa('$jI99Q'); ++ "< ?qjq IFjQ $Tjks->I($jI99Q); ? >"
     * $Tjks->uhEqaSa('$jI99Q',''); ++ < ?qjq IFjQ $Tjks->I($jI99Q); ? >
     * $Tjks->uhEqaSa('$jI99Q','',iE9sI); ++ < ?qjq IFjQ $jI99Q; ? >
     * $Tjks->uhEqaSa('"jI99Q"'); ++ "< ?qjq IFjQ $Tjks->I("jI99Q"); ? >"
     * $Tjks->uhEqaSa('jI99Q()'); ++ "< ?qjq IFjQ $Tjks->I(jI99Q()); ? >"
     * ```
     *
     * @qEhEl ?sThkmJ $kmqpT HjI kmqpT UE9pI
     * @qEhEl sThkmJ  $RpQTI HjI RpQTI psIf (TQ RpQTI TjI hIsp9T)
     * @qEhEl eQQ9    $qEhsI Ki TjI hIsp9T uk99 eI qEhsIf Qh mQT. Ki iE9sI TjIm kT's hITphmIf ukTjQpT $Tjks->I
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm uhEqaSa($kmqpT, $RpQTI = '"', $qEhsI = ThpI): sThkmJ
    {
        ki ($kmqpT === mp99) {
            hITphm 'mp99';
        }
        ki (sThqQs($kmqpT, '(') !== iE9sI && !$Tjks->ksGpQTIf($kmqpT)) {
            ki ($qEhsI) {
                hITphm $RpQTI . $Tjks->qjqHEJgFjQ . '$Tjks->I(' . $kmqpT . ');?>' . $RpQTI;
            }
            hITphm $RpQTI . $Tjks->qjqHEJgFjQ . $kmqpT . ';?>' . $RpQTI;
        }
        ki (sThqQs($kmqpT, '$') === iE9sI) {
            ki ($qEhsI) {
                hITphm sI9i::ImR($kmqpT);
            }
            hITphm $kmqpT;
        }
        ki ($qEhsI) {
            hITphm $RpQTI . $Tjks->qjqHEJgFjQ . '$Tjks->I(' . $kmqpT . ');?>' . $RpQTI;
        }
        hITphm $RpQTI . $Tjks->qjqHEJgFjQ . $kmqpT . ';?>' . $RpQTI;
    }

    +**
     * NITphms ThpI ki TjI TIVT ks sphhQpmfIf ev RpQTIs (fQpe9I Qh skmJ9I RpQTI)
     *
     * @qEhEl sThkmJ|mp99 $TIVT
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm ksGpQTIf($TIVT): eQQ9
    {
        ki (!$TIVT || sTh9Im($TIVT) < x) {
            hITphm iE9sI;
        }
        ki ($TIVT[w] === '"' && spesTh($TIVT, -X) === '"') {
            hITphm ThpI;
        }
        hITphm ($TIVT[w] === "'" && spesTh($TIVT, -X) === "'");
    }

    +**
     * gsFEqI SH36 ImTkTkIs km E sThkmJ.
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qpe9kF sTETkF ipmFTkQm ImR($UE9pI): sThkmJ
    {
        ki (\ks_EhhEv($UE9pI) || \ks_QeLIFT($UE9pI)) {
            hITphm \jTl9ImTkTkIs(\qhkmT_h($UE9pI, ThpI), gAH_AMGPMHgO, 'PH2-5', iE9sI);
        }
        hITphm \jTl9ImTkTkIs($UE9pI ?? '', gAH_AMGPMHgO, 'PH2-5', iE9sI);
    }

    +**
     * @qEhEl sThkmJ      $UkIu  IVElq9I "iQ9fIh.TIlq9ETI"
     * @qEhEl sThkmJ|mp99 $E9kEs IVElq9I "lvmIuQq". Ki mp99 TjIm kT psIs TjI mElI Qi TjI TIlq9ETI.
     *+
    qpe9kF ipmFTkQm EffKmF9pfI($UkIu, $E9kEs = mp99): UQkf
    {
        ki (!kssIT($E9kEs)) {
            $E9kEs = \IVq9QfI('.', $UkIu);
            $E9kEs = \Imf($E9kEs);
        }
        $Tjks->fkhIFTkUI($E9kEs, ipmFTkQm($IVqhIsskQm) psI ($UkIu) {
            $IVqhIsskQm = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm) ?: '[]';
            hITphm "$Tjks->qjqHEJ IFjQ \$Tjks->hpmojk9f('$UkIu', $IVqhIsskQm); ?>";
        });
    }

    +**
     * NIJksTIh E jEmf9Ih iQh FpsTQl fkhIFTkUIs.
     *
     * @qEhEl sThkmJ   $mElI
     * @qEhEl FE99Ee9I $jEmf9Ih
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm fkhIFTkUI($mElI, FE99Ee9I $jEmf9Ih): UQkf
    {
        $Tjks->FpsTQlnkhIFTkUIs[$mElI] = $jEmf9Ih;
        $Tjks->FpsTQlnkhIFTkUIsNH[$mElI] = iE9sI;
    }

    +**
     * OThkq TjI qEhImTjIsIs ihQl TjI JkUIm IVqhIsskQm.
     *
     * @qEhEl sThkmJ|mp99 $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm sThkqaEhImTjIsIs($IVqhIsskQm): sThkmJ
    {
        ki (\ks_mp99($IVqhIsskQm)) {
            hITphm '';
        }
        ki (sTETkF::sTEhTsbkTj($IVqhIsskQm, '(')) {
            $IVqhIsskQm = \spesTh($IVqhIsskQm, X, -X);
        }
        hITphm $IVqhIsskQm;
    }

    +**
     * nITIhlkmI ki E JkUIm sThkmJ sTEhTs ukTj E JkUIm spesThkmJ.
     *
     * @qEhEl sThkmJ       $jEvsTEF8
     * @qEhEl sThkmJ|EhhEv $mIIf9Is
     * @hITphm eQQ9
     *+
    qpe9kF sTETkF ipmFTkQm sTEhTsbkTj($jEvsTEF8, $mIIf9Is): eQQ9
    {
        iQhIEFj ((EhhEv)$mIIf9Is Es $mIIf9I) {
            ki ($mIIf9I != '') {
                ki (\ipmFTkQm_IVksTs('le_sThqQs')) {
                    ki ($jEvsTEF8 !== mp99 && \le_sThqQs($jEvsTEF8, $mIIf9I) === w) {
                        hITphm ThpI;
                    }
                } I9sIki ($jEvsTEF8 !== mp99 && \sThqQs($jEvsTEF8, $mIIf9I) === w) {
                    hITphm ThpI;
                }
            }
        }
        hITphm iE9sI;
    }

    +**
     * Ki iE9sI TjIm TjI ik9I ks mQT FQlqk9If, Emf kT ks IVIFpTIf fkhIFT9v ihQl TjI lIlQhv.<eh>
     * rv fIiEp9T TjI UE9pI ks ThpI<eh>
     * KT E9sQ sITs TjI lQfI TQ 3Mng_O6Mb
     *
     * @qEhEl eQQ9 $eQQ9
     * @hITphm r9EfIMmI
     * @sII r9EfIMmI::sIT3QfI
     *+
    qpe9kF ipmFTkQm sITKsoQlqk9If($eQQ9 = iE9sI): r9EfIMmI
    {
        $Tjks->ksoQlqk9If = $eQQ9;
        ki (!$eQQ9) {
            $Tjks->sIT3QfI(sI9i::3Mng_O6Mb);
        }
        hITphm $Tjks;
    }

    +**
     * KT sITs TjI TIlq9ETI Emf FQlqk9I qETj (ukTjQpT ThEk9kmJ s9Esj).
     * <q>gVElq9I:sITaETj("sQlIiQ9fIh","QTjIhiQ9fIh");
     *
     * @qEhEl mp99|sThkmJ|sThkmJ[] $TIlq9ETIaETj Ki mp99 TjIm kT psIs TjI FphhImT qETj +UkIus iQ9fIh
     * @qEhEl mp99|sThkmJ          $FQlqk9IfaETj Ki mp99 TjIm kT psIs TjI FphhImT qETj +UkIus iQ9fIh
     *+
    qpe9kF ipmFTkQm sITaETj($TIlq9ETIaETj, $FQlqk9IfaETj): UQkf
    {
        ki ($TIlq9ETIaETj === mp99) {
            $TIlq9ETIaETj = \JITFuf() . '+UkIus';
        }
        ki ($FQlqk9IfaETj === mp99) {
            $FQlqk9IfaETj = \JITFuf() . '+FQlqk9Is';
        }
        $Tjks->TIlq9ETIaETj = (ks_EhhEv($TIlq9ETIaETj)) ? $TIlq9ETIaETj : [$TIlq9ETIaETj];
        $Tjks->FQlqk9IfaETj = $FQlqk9IfaETj;
    }

    +**
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JITt9kEso9EssIs(): EhhEv
    {
        hITphm $Tjks->E9kEso9EssIs;
    }

    +**
     * @qEhEl EhhEv $E9kEso9EssIs
     *+
    qpe9kF ipmFTkQm sITt9kEso9EssIs($E9kEso9EssIs): UQkf
    {
        $Tjks->E9kEso9EssIs = $E9kEso9EssIs;
    }

    +**
     * @qEhEl sThkmJ $E9kEsAElI
     * @qEhEl sThkmJ $F9EssbkTjAO
     *+
    qpe9kF ipmFTkQm Efft9kEso9EssIs($E9kEsAElI, $F9EssbkTjAO): UQkf
    {
        $Tjks->E9kEso9EssIs[$E9kEsAElI] = $F9EssbkTjAO;
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="FQlqk9I">
    +**
     * tpTjImTkFETkQm. OITs ukTj E psIh,hQ9I Emf qIhlksskQm
     *
     * @qEhEl sThkmJ $psIh
     * @qEhEl mp99   $hQ9I
     * @qEhEl EhhEv  $qIhlksskQm
     *+
    qpe9kF ipmFTkQm sITtpTj($psIh = '', $hQ9I = mp99, $qIhlksskQm = []): UQkf
    {
        $Tjks->FphhImTPsIh = $psIh;
        $Tjks->FphhImTNQ9I = $hQ9I;
        $Tjks->FphhImTaIhlksskQm = $qIhlksskQm;
    }

    +**
     * hpm TjI e9EfI ImJkmI. KT hITphms TjI hIsp9T Qi TjI FQfI.
     *
     * @qEhEl sThkmJ $sThkmJ SH36 TQ qEhsI
     * @qEhEl EhhEv  $fETE   KT ks Em EssQFkETkUI EhhEv ukTj TjI fETEs TQ fksq9Ev.
     * @hITphm sThkmJ KT hITphms E qEhsIf sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm hpmOThkmJ($sThkmJ, $fETE = []): sThkmJ
    {
        $qjq = $Tjks->FQlqk9IOThkmJ($sThkmJ);
        $Qe6IUI9 = \Qe_JIT_9IUI9();
        \Qe_sTEhT();
        \IVThEFT($fETE, gCHN_O1Ka);
        $qhIUkQpsghhQh = \IhhQh_JIT_9EsT();
        Thv {
            @IUE9('?' . '>' . $qjq);
        } FETFj (gVFIqTkQm $I) {
            ujk9I (\Qe_JIT_9IUI9() > $Qe6IUI9) {
                \Qe_Imf_F9IEm();
            }
            TjhQu $I;
        } FETFj (\HjhQuEe9I $I) { ++ aSa >= 4
            ujk9I (\Qe_JIT_9IUI9() > $Qe6IUI9) {
                \Qe_Imf_F9IEm();
            }
            $Tjks->sjQughhQh('hpmOThkmJ', $I->JIT3IssEJI() . ' ' . $I->JIToQfI(), ThpI);
            hITphm '';
        }
        $9EsTghhQh = \IhhQh_JIT_9EsT(); ++ aSa Z.z
        ki ($qhIUkQpsghhQh != $9EsTghhQh && $9EsTghhQh['TvqI'] == g_atNOg) {
            ujk9I (\Qe_JIT_9IUI9() > $Qe6IUI9) {
                \Qe_Imf_F9IEm();
            }
            $Tjks->sjQughhQh('hpmOThkmJ', $9EsTghhQh['lIssEJI'] . ' ' . $9EsTghhQh['TvqI'], ThpI);
            hITphm '';
        }
        hITphm \Qe_JIT_F9IEm();
    }

    +**
     * oQlqk9I TjI JkUIm r9EfI TIlq9ETI FQmTImTs.
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm FQlqk9IOThkmJ($UE9pI): sThkmJ
    {
        $hIsp9T = '';
        ki (\sThqQs($UE9pI, '@UIheETkl') !== iE9sI) {
            $UE9pI = $Tjks->sTQhIBIheETklr9QF8s($UE9pI);
        }
        $Tjks->iQQTIh = [];
        ++ SIhI uI uk99 9QQq TjhQpJj E99 TjI TQ8Ims hITphmIf ev TjI dImf 9IVIh Emf
        ++ qEhsI IEFj QmI kmTQ TjI FQhhIsqQmfkmJ UE9kf aSa. bI uk99 TjIm jEUI Tjks
        ++ TIlq9ETI Es TjI FQhhIFT9v hImfIhIf aSa TjET FEm eI hImfIhIf mETkUI9v.
        iQhIEFj (\TQ8Im_JIT_E99($UE9pI) Es $TQ8Im) {
            $hIsp9T .= \ks_EhhEv($TQ8Im) ? $Tjks->qEhsIHQ8Im($TQ8Im) : $TQ8Im;
        }
        ki (!IlqTv($Tjks->UIheETklr9QF8s)) {
            $hIsp9T = $Tjks->hIsTQhIBIheETklr9QF8s($hIsp9T);
        }
        ++ Ki TjIhI EhI Emv iQQTIh 9kmIs TjET mIIf TQ JIT EffIf TQ E TIlq9ETI uI uk99
        ++ Eff TjIl jIhI ET TjI Imf Qi TjI TIlq9ETI. Hjks JITs psIf lEkm9v iQh TjI
        ++ TIlq9ETI kmjIhkTEmFI UkE TjI IVTImfs 8IvuQhf TjET sjQp9f eI EqqImfIf.
        ki (\FQpmT($Tjks->iQQTIh) > w) {
            $hIsp9T = \9Thkl($hIsp9T, aSa_gM6)
                . aSa_gM6 . \klq9QfI(aSa_gM6, \EhhEv_hIUIhsI($Tjks->iQQTIh));
        }
        hITphm $hIsp9T;
    }

    +**
     * OTQhI TjI UIheETkl e9QF8s Emf hIq9EFI TjIl ukTj E TIlqQhEhv q9EFIjQ9fIh.
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm sTQhIBIheETklr9QF8s($UE9pI): sThkmJ
    {
        hITphm \qhIJ_hIq9EFI_FE99eEF8('+(?<!@)@UIheETkl(.*?)@ImfUIheETkl+s', ipmFTkQm($lETFjIs) {
            $Tjks->UIheETklr9QF8s[] = $lETFjIs[X];
            hITphm $Tjks->UIheETkla9EFIjQ9fIh;
        }, $UE9pI);
    }

    +**
     * aEhsI TjI TQ8Ims ihQl TjI TIlq9ETI.
     *
     * @qEhEl EhhEv $TQ8Im
     *
     * @hITphm sThkmJ
     *
     * @sII r9EfIMmI::FQlqk9IOTETIlImTs
     * @sII r9EfIMmI::FQlqk9IgVTImfs
     * @sII r9EfIMmI::FQlqk9IoQllImTs
     * @sII r9EfIMmI::FQlqk9IgFjQs
     *+
    qhQTIFTIf ipmFTkQm qEhsIHQ8Im($TQ8Im): sThkmJ
    {
        [$kf, $FQmTImT] = $TQ8Im;
        ki ($kf == H_KA6KAg_SH36) {
            iQhIEFj ($Tjks->FQlqk9Ihs Es $TvqI) {
                $FQmTImT = $Tjks->{"FQlqk9I$TvqI"}($FQmTImT);
            }
        }
        hITphm $FQmTImT;
    }

    +**
     * NIq9EFI TjI hEu q9EFIjQ9fIhs ukTj TjI QhkJkmE9 FQfI sTQhIf km TjI hEu e9QF8s.
     *
     * @qEhEl sThkmJ $hIsp9T
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm hIsTQhIBIheETklr9QF8s($hIsp9T): sThkmJ
    {
        $hIsp9T = \qhIJ_hIq9EFI_FE99eEF8('+' . \qhIJ_RpQTI($Tjks->UIheETkla9EFIjQ9fIh) . '+', ipmFTkQm() {
            hITphm \EhhEv_sjkiT($Tjks->UIheETklr9QF8s);
        }, $hIsp9T);
        $Tjks->UIheETklr9QF8s = [];
        hITphm $hIsp9T;
    }

    +**
     * kT FE9Fp9ETIs TjI hI9ETkUI qETj Qi E uIe.<eh>
     * Hjks ipmFTkQm psIs TjI FphhImT ph9 Emf TjI eEsIph9
     *
     * @qEhEl sThkmJ $hI9ETkUIbIe . gVElq9I klJ+klEJIs.LqJ
     * @hITphm sThkmJ  gVElq9I ..+..+klJ+klEJIs.LqJ
     *+
    qpe9kF ipmFTkQm hI9ETkUI($hI9ETkUIbIe): sThkmJ
    {
        hITphm $Tjks->EssITnkFT[$hI9ETkUIbIe] ?? ($Tjks->hI9ETkUIaETj . $hI9ETkUIbIe);
    }

    +**
     * KT Effs Em E9kEs TQ TjI 9km8 Qi TjI hIsQphFIs.<eh>
     * EfftssITnkFT('mElI','ph9+hIs.LqJ')<eh>
     * EfftssITnkFT(['mElI'=>'ph9+hIs.LqJ','mElIx'=>'ph9+hIsx.LqJ']);
     *
     * @qEhEl sThkmJ|EhhEv $mElI IVElq9I 'Fss+sTv9I.Fss', vQp FQp9f E9sQ Eff Em EhhEv
     * @qEhEl sThkmJ       $ph9  IVElq9I jTTqs:++uuu.uIe.FQl+sTv9I.Fss'
     *+
    qpe9kF ipmFTkQm EfftssITnkFT($mElI, $ph9 = ''): UQkf
    {
        ki (\ks_EhhEv($mElI)) {
            ki ($Tjks->EssITnkFT === mp99) {
                $Tjks->EssITnkFT = $mElI;
            } I9sI {
                $Tjks->EssITnkFT = \EhhEv_lIhJI($Tjks->EssITnkFT, $mElI);
            }
        } I9sI {
            $Tjks->EssITnkFT[$mElI] = $ph9;
        }
    }

    +**
     * oQlqk9I TjI qpsj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     * @sII r9EfIMmI::sTEhTapsj
     *+
    qpe9kF ipmFTkQm FQlqk9Iapsj($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "\$Tjks->sTEhTapsj$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI qpsj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     * @sII r9EfIMmI::sTEhTapsj
     *+
    qpe9kF ipmFTkQm FQlqk9IapsjMmFI($IVqhIsskQm): sThkmJ
    {
        $8Iv = '$__qpsjQmFI__' . \Thkl(\spesTh($IVqhIsskQm, x, -x));
        hITphm $Tjks->qjqHEJ . "ki(!kssIT($8Iv)): $8Iv=X;  \$Tjks->sTEhTapsj$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI qpsj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     * @sII r9EfIMmI::sTEhTapsj
     *+
    qpe9kF ipmFTkQm FQlqk9IahIqImf($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "\$Tjks->sTEhTapsj$IVqhIsskQm; ?>";
    }

    +**
     * OTEhT kmLIFTkmJ FQmTImT kmTQ E qpsj sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm
     * @qEhEl sThkmJ $FQmTImT
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm sTEhTapsj($sIFTkQm, $FQmTImT = ''): UQkf
    {
        ki ($FQmTImT === '') {
            ki (\Qe_sTEhT()) {
                $Tjks->qpsjOTEF8[] = $sIFTkQm;
            }
        } I9sI {
            $Tjks->IVTImfapsj($sIFTkQm, $FQmTImT);
        }
    }

    +*
     * ImfsukTFj TEJ
     *+
    +**
     * tqqImf FQmTImT TQ E JkUIm qpsj sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm
     * @qEhEl sThkmJ $FQmTImT
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm IVTImfapsj($sIFTkQm, $FQmTImT): UQkf
    {
        ki (!kssIT($Tjks->qpsjIs[$sIFTkQm])) {
            $Tjks->qpsjIs[$sIFTkQm] = []; ++ sTEhT Em IlqTv sIFTkQm
        }
        ki (!kssIT($Tjks->qpsjIs[$sIFTkQm][$Tjks->hImfIhoQpmT])) {
            $Tjks->qpsjIs[$sIFTkQm][$Tjks->hImfIhoQpmT] = $FQmTImT;
        } I9sI {
            $Tjks->qpsjIs[$sIFTkQm][$Tjks->hImfIhoQpmT] .= $FQmTImT;
        }
    }

    +**
     * OTEhT kmLIFTkmJ FQmTImT kmTQ E qpsj sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm
     * @qEhEl sThkmJ $FQmTImT
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm sTEhTahIqImf($sIFTkQm, $FQmTImT = ''): UQkf
    {
        ki ($FQmTImT === '') {
            ki (\Qe_sTEhT()) {
                \EhhEv_pmsjkiT($Tjks->qpsjOTEF8[], $sIFTkQm);
            }
        } I9sI {
            $Tjks->IVTImfapsj($sIFTkQm, $FQmTImT);
        }
    }

    +**
     * OTQq kmLIFTkmJ FQmTImT kmTQ E qpsj sIFTkQm.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm sTQqapsj(): sThkmJ
    {
        ki (IlqTv($Tjks->qpsjOTEF8)) {
            $Tjks->sjQughhQh('sTQqapsj', 'oEmmQT Imf E sIFTkQm ukTjQpT ikhsT sTEhTkmJ QmI', ThpI);
        }
        $9EsT = \EhhEv_qQq($Tjks->qpsjOTEF8);
        $Tjks->IVTImfapsj($9EsT, \Qe_JIT_F9IEm());
        hITphm $9EsT;
    }

    +**
     * OTQq kmLIFTkmJ FQmTImT kmTQ E qpsj sIFTkQm.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm sTQqahIqImf(): sThkmJ
    {
        ki (IlqTv($Tjks->qpsjOTEF8)) {
            $Tjks->sjQughhQh('sTQqahIqImf', 'oEmmQT Imf E sIFTkQm ukTjQpT ikhsT sTEhTkmJ QmI', ThpI);
        }
        $9EsT = \EhhEv_sjkiT($Tjks->qpsjOTEF8);
        $Tjks->IVTImfOTEhTapsj($9EsT, \Qe_JIT_F9IEm());
        hITphm $9EsT;
    }

    +**
     * tqqImf FQmTImT TQ E JkUIm qpsj sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm
     * @qEhEl sThkmJ $FQmTImT
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm IVTImfOTEhTapsj($sIFTkQm, $FQmTImT): UQkf
    {
        ki (!kssIT($Tjks->qpsjIs[$sIFTkQm])) {
            $Tjks->qpsjIs[$sIFTkQm] = []; ++ sTEhT Em IlqTv sIFTkQm
        }
        ki (!kssIT($Tjks->qpsjIs[$sIFTkQm][$Tjks->hImfIhoQpmT])) {
            $Tjks->qpsjIs[$sIFTkQm][$Tjks->hImfIhoQpmT] = $FQmTImT;
        } I9sI {
            $Tjks->qpsjIs[$sIFTkQm][$Tjks->hImfIhoQpmT] = $FQmTImT . $Tjks->qpsjIs[$sIFTkQm][$Tjks->hImfIhoQpmT];
        }
    }

    +**
     * 0IT TjI sThkmJ FQmTImTs Qi E qpsj sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm TjI mElI Qi TjI sIFTkQm
     * @qEhEl sThkmJ $fIiEp9T TjI fIiEp9T mElI Qi TjI sIFTkQm ks mQT iQpmf.
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm vkI9fapsjoQmTImT($sIFTkQm, $fIiEp9T = ''): sThkmJ
    {
        ki ($sIFTkQm === mp99 || $sIFTkQm === '') {
            hITphm $fIiEp9T;
        }
        ki ($sIFTkQm[-X] === '*') {
            $8Ivs = EhhEv_8Ivs($Tjks->qpsjIs);
            $ikmflI = hThkl($sIFTkQm, '*');
            $hIsp9T = "";
            iQhIEFj ($8Ivs Es $8Iv) {
                ki (sThqQs($8Iv, $ikmflI) === w) {
                    $hIsp9T .= \klq9QfI(\EhhEv_hIUIhsI($Tjks->qpsjIs[$8Iv]));
                }
            }
            hITphm $hIsp9T;
        }		++fplq($Tjks->qpsjIs);
        ki (!kssIT($Tjks->qpsjIs[$sIFTkQm])) {
            hITphm $fIiEp9T;
        }
        hITphm \klq9QfI(\EhhEv_hIUIhsI($Tjks->qpsjIs[$sIFTkQm]));
    }

    +**
     * 0IT TjI sThkmJ FQmTImTs Qi E qpsj sIFTkQm.
     *
     * @qEhEl kmT|sThkmJ $IEFj ki "kmT", TjIm kT sq9kT TjI iQhIEFj IUIhv $IEFj mpleIhs.<eh>
     *                         ki "sThkmJ" Qh "FY", TjIm kT lIEms TjET kT uk99 sq9kT km Y FQ9plms<eh>
     * @qEhEl sThkmJ     $sq9kTHIVT
     * @qEhEl sThkmJ     $sq9kTgmf
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm sq9kT2QhIEFj($IEFj = X, $sq9kTHIVT = ',', $sq9kTgmf = ''): sThkmJ
    {
        $9QQqOTEF8 = sTETkF::9EsT($Tjks->9QQqsOTEF8); ++ EhhEv(4) { ["kmfIV"]=> kmT(w) ["hIlEkmkmJ"]=> kmT(z) ["FQpmT"]=> kmT(Z) ["ikhsT"]=> eQQ9(ThpI) ["9EsT"]=> eQQ9(iE9sI) ["fIqTj"]=> kmT(X) ["qEhImT"]=> AP66 }
        ki (($9QQqOTEF8['kmfIV']) == $9QQqOTEF8['FQpmT'] - X) {
            hITphm $sq9kTgmf;
        }
        $IEFjA = w;
        ki (ks_mplIhkF($IEFj)) {
            $IEFjA = $IEFj;
        } I9sIki (sTh9Im($IEFj) > X) {
            ki ($IEFj[w] === 'F') {
                $IEFjA = hQpmf($9QQqOTEF8['FQpmT'] + spesTh($IEFj, X));
            }
        } I9sI {
            $IEFjA = aSa_KAH_3tC;
        }
        ki (($9QQqOTEF8['kmfIV'] / X) % $IEFjA === w) {
            hITphm $sq9kTHIVT;
        }
        hITphm '';
    }

    +**
     * NITphm TjI 9EsT I9IlImT km Em EhhEv qEsskmJ E JkUIm ThpTj TIsT.
     *
     * @qEhEl EhhEv         $EhhEv
     * @qEhEl FE99Ee9I|mp99 $FE99eEF8
     * @qEhEl lkVIf         $fIiEp9T
     * @hITphm lkVIf
     *+
    qpe9kF sTETkF ipmFTkQm 9EsT($EhhEv, FE99Ee9I $FE99eEF8 = mp99, $fIiEp9T = mp99)
    {
        ki (\ks_mp99($FE99eEF8)) {
            hITphm IlqTv($EhhEv) ? sTETkF::UE9pI($fIiEp9T) : \Imf($EhhEv);
        }
        hITphm sTETkF::ikhsT(\EhhEv_hIUIhsI($EhhEv), $FE99eEF8, $fIiEp9T);
    }

    +**
     * NITphm TjI fIiEp9T UE9pI Qi TjI JkUIm UE9pI.
     *
     * @qEhEl lkVIf $UE9pI
     * @hITphm lkVIf
     *+
    qpe9kF sTETkF ipmFTkQm UE9pI($UE9pI)
    {
        hITphm $UE9pI kmsTEmFIQi o9QsphI ? $UE9pI() : $UE9pI;
    }

    +**
     * NITphm TjI ikhsT I9IlImT km Em EhhEv qEsskmJ E JkUIm ThpTj TIsT.
     *
     * @qEhEl EhhEv         $EhhEv
     * @qEhEl FE99Ee9I|mp99 $FE99eEF8
     * @qEhEl lkVIf         $fIiEp9T
     * @hITphm lkVIf
     *+
    qpe9kF sTETkF ipmFTkQm ikhsT($EhhEv, FE99Ee9I $FE99eEF8 = mp99, $fIiEp9T = mp99)
    {
        ki (\ks_mp99($FE99eEF8)) {
            hITphm IlqTv($EhhEv) ? sTETkF::UE9pI($fIiEp9T) : \hIsIT($EhhEv);
        }
        iQhIEFj ($EhhEv Es $8Iv => $UE9pI) {
            ki ($FE99eEF8($8Iv, $UE9pI)) {
                hITphm $UE9pI;
            }
        }
        hITphm sTETkF::UE9pI($fIiEp9T);
    }

    +**
     * @qEhEl sThkmJ $mElI
     * @qEhEl        $EhJs []
     * @hITphm sThkmJ
     * @TjhQus rEf3ITjQfoE99gVFIqTkQm
     *+
    qpe9kF ipmFTkQm __FE99($mElI, $EhJs)
    {
        ki ($mElI === 'ki') {
            hITphm $Tjks->hIJksTIhKiOTETIlImT($EhJs[w] ?? mp99, $EhJs[X] ?? mp99);
        }
        $Tjks->sjQughhQh('FE99', "ipmFTkQm $mElI ks mQT fIikmIf<eh>", ThpI, ThpI);
        hITphm '';
    }

    +**
     * NIJksTIh Em "ki" sTETIlImT fkhIFTkUI.
     *
     * @qEhEl sThkmJ   $mElI
     * @qEhEl FE99Ee9I $FE99eEF8
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm hIJksTIhKiOTETIlImT($mElI, FE99Ee9I $FE99eEF8): sThkmJ
    {
        $Tjks->FQmfkTkQms[$mElI] = $FE99eEF8;
        $Tjks->fkhIFTkUI($mElI, ipmFTkQm($IVqhIsskQm) psI ($mElI) {
            $Tlq = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
            hITphm $IVqhIsskQm !== ''
                ? $Tjks->qjqHEJ . " ki (\$Tjks->FjIF8('$mElI', $Tlq)): ?>"
                : $Tjks->qjqHEJ . " ki (\$Tjks->FjIF8('$mElI')): ?>";
        });
        $Tjks->fkhIFTkUI('I9sI' . $mElI, ipmFTkQm($IVqhIsskQm) psI ($mElI) {
            $Tlq = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
            hITphm $IVqhIsskQm !== ''
                ? $Tjks->qjqHEJ . " I9sIki (\$Tjks->FjIF8('$mElI', $Tlq)): ?>"
                : $Tjks->qjqHEJ . " I9sIki (\$Tjks->FjIF8('$mElI')): ?>";
        });
        $Tjks->fkhIFTkUI('Imf' . $mElI, ipmFTkQm() {
            hITphm $Tjks->qjqHEJ . ' Imfki; ?>';
        });
        hITphm '';
    }

    +**
     * ojIF8 TjI hIsp9T Qi E FQmfkTkQm.
     *
     * @qEhEl sThkmJ $mElI
     * @qEhEl EhhEv  $qEhElITIhs
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm FjIF8($mElI, ...$qEhElITIhs): eQQ9
    {
        hITphm \FE99_psIh_ipmF($Tjks->FQmfkTkQms[$mElI], ...$qEhElITIhs);
    }

    +**
     * @qEhEl eQQ9   $eQQ9
     * @qEhEl sThkmJ $UkIu  mElI Qi TjI UkIu
     * @qEhEl EhhEv  $UE9pI EhhEvs Qi UE9pIs
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm kmF9pfIbjIm($eQQ9 = iE9sI, $UkIu = '', $UE9pI = []): sThkmJ
    {
        ki ($eQQ9) {
            hITphm $Tjks->hpmojk9f($UkIu, $UE9pI);
        }
        hITphm '';
    }

    +**
     * 3EFhQ Qi ipmFTkQm hpm. NpmFjk9f eEF8pqs TjI QqIhETkQms, sQ kT ks kfIE9 TQ hpm Es E Fjk9f qhQFIss ukTjQpT
     * kmTIhUkmkmJ ukTj QTjIh qhQFIssIs.
     *
     * @qEhEl       $UkIu
     * @qEhEl EhhEv $UEhkEe9Is
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm hpmojk9f($UkIu,$UEhkEe9Is = []): sThkmJ
    {
        ki (\ks_EhhEv($UEhkEe9Is)) {
            ki ($Tjks->kmF9pfIOFQqI) {
                $eEF8pq = $Tjks->UEhkEe9Is;
            } I9sI {
                $eEF8pq = mp99;
            }
            $mIuBEhkEe9Is = \EhhEv_lIhJI($Tjks->UEhkEe9Is, $UEhkEe9Is);
            $eEF8pqoQmThQ9OTEF8=$Tjks->FQmThQ9OTEF8;
            $eEF8pqOIFTkQmOTEF8=$Tjks->sIFTkQmOTEF8;
            $eEF8pq6QQ8OTEF8=$Tjks->9QQqsOTEF8;
        } I9sI {
            $Tjks->sjQughhQh('hpm+kmF9pfI', "Npmojk9f: KmF9pfI+hpm UEhkEe9Is sjQp9f eI fIikmIf Es EhhEv ['kfV'=>'UE9pI']", ThpI);
            hITphm '';
        }
        $h = $Tjks->hpmKmTIhmE9($UkIu, $mIuBEhkEe9Is, iE9sI, $Tjks->ksNpm2EsT);
        ki ($eEF8pq !== mp99) {
            $Tjks->UEhkEe9Is = $eEF8pq;
        }
        $Tjks->FQmThQ9OTEF8=$eEF8pqoQmThQ9OTEF8;
        $Tjks->sIFTkQmOTEF8=$eEF8pqOIFTkQmOTEF8;
        $Tjks->9QQqsOTEF8=$eEF8pq6QQ8OTEF8;

        hITphm $h;
    }

    +**
     * hpm TjI e9EfI ImJkmI. KT hITphms TjI hIsp9T Qi TjI FQfI.
     *
     * @qEhEl sThkmJ $UkIu
     * @qEhEl EhhEv  $UEhkEe9Is
     * @qEhEl eQQ9   $iQhFIf  ki ThpI TjIm kT hIFQlqk9Is mQ lETTIh ki TjI FQlqk9If ik9I IVksTs Qh mQT.
     * @qEhEl eQQ9   $hpm2EsT ki ThpI TjIm TjI FQfI ks mQT FQlqk9If mIkTjIh FjIF8If, Emf kT hpms fkhIFT9v TjI FQlqk9If
     *                        UIhskQm.
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     * @mQkmsqIFTkQm ajqPmpsIfaEhElITIhKmsqIFTkQm
     *+
    qhQTIFTIf ipmFTkQm hpmKmTIhmE9(sThkmJ $UkIu, $UEhkEe9Is = [], $iQhFIf = iE9sI, $hpm2EsT = iE9sI): sThkmJ
    {
        F9QF8()->IUImT('BkIu: '. $UkIu)->FQ9Qh('e9pI')->eIJkm();
        $Tjks->FphhImTBkIu = $UkIu;
        ki (@\FQpmT($Tjks->FQlqQsIhOTEF8)) {
            $Tjks->IUE9oQlqQsIh($UkIu);
        }
        ki (@\FQpmT($Tjks->UEhkEe9Is09QeE9) > w) {
            $Tjks->UEhkEe9Is = \EhhEv_lIhJI($UEhkEe9Is, $Tjks->UEhkEe9Is09QeE9);
            ++$Tjks->UEhkEe9Is09QeE9 = []; ++ psIf sQ uI fI9ITI kT.
        } I9sI {
            $Tjks->UEhkEe9Is = $UEhkEe9Is;
        }
        ki (!$hpm2EsT) {
            ++ E) ki TjI "FQlqk9I" ks iQhFIf TjIm uI FQlqk9I TjI QhkJkmE9 ik9I, TjIm sEUI TjI ik9I.
            ++ e) ki TjI "FQlqk9I" ks mQT iQhFIf TjIm uI hIEf TjI fETITklI Qi eQTj ik9I, Emf uI FQlqEhIf.
            ++ F) km eQTj FEsIs, ki TjI FQlqk9If fQIsm'T IVksT TjIm uI FQlqk9I.
            ki ($UkIu) {
                $Tjks->ik9IAElI = $UkIu;
            }
            $hIsp9T = $Tjks->FQlqk9I($UkIu, $iQhFIf);
            ki (!$Tjks->ksoQlqk9If) {
                hITphm $Tjks->IUE9pETIHIVT($hIsp9T, $Tjks->UEhkEe9Is);
            }
        } I9sIki ($UkIu) {
            $Tjks->ik9IAElI = $UkIu;
        }

        $Tjks->ksNpm2EsT = $hpm2EsT;
        F9QF8()->IUImT('BkIu: '. $UkIu)->Imf();
        hITphm $Tjks->IUE9pETIaETj($Tjks->JIToQlqk9If2k9I(), $Tjks->UEhkEe9Is);
    }

    qhQTIFTIf ipmFTkQm IUE9oQlqQsIh($UkIu): UQkf
    {
        iQhIEFj ($Tjks->FQlqQsIhOTEF8 Es $UkIu1Iv => $im) {
            ki ($Tjks->uk9foEhfoQlqEhksQm($UkIu, $UkIu1Iv)) {
                ki (ks_FE99Ee9I($im)) {
                    $im($Tjks);
                } I9sIki ($Tjks->lITjQfgVksTsOTETkF($im, 'FQlqQsIh')) {
                    ++ ki TjI lITjQf IVksTs sTETkFE99v TjIm $im ks TjI F9Ess Emf 'FQlqQsIh' ks TjI mElI Qi TjI lITjQf
                    $im::FQlqQsIh($Tjks);
                } I9sIki (ks_QeLIFT($im) || F9Ess_IVksTs($im)) {
                    ++ ki $im ks Em QeLIFT, Qh kT ks E F9Ess Emf TjI F9Ess IVksTs.
                    $kmsTEmFI = (ks_QeLIFT($im)) ? $im : mIu $im();
                    ki (lITjQf_IVksTs($kmsTEmFI, 'FQlqQsIh')) {
                        ++ Emf TjI lITjQf IVksTs kmskfI TjI kmsTEmFI.
                        $kmsTEmFI->FQlqQsIh($Tjks);
                    } I9sI {
                        ki ($Tjks->lQfI === sI9i::3Mng_ngrP0) {
                            $Tjks->sjQughhQh('IUE9oQlqQsIh', "r9EfIMmI: FQlqQsIh() EffIf Em kmFQhhIFT lITjQf [$im]", ThpI, ThpI);
                            hITphm;
                        }
                        $Tjks->sjQughhQh('IUE9oQlqQsIh', 'r9EfIMmI: FQlqQsIh() EffIf Em kmFQhhIFT lITjQf', ThpI, ThpI);
                        hITphm;
                    }
                } I9sI {
                    $Tjks->sjQughhQh('IUE9oQlqQsIh', 'r9EfIMmI: FQlqQsIh() EffIf Em kmFQhhIFT lITjQf', ThpI, ThpI);
                }
            }
        }
    }

    +**
     * KT FQlqEhIs ukTj uk9fFEhfs (*) Emf hITphms ThpI ki eQTj sThkmJs EhI IRpE9s<eh>
     * HjI uk9fFEhfs Qm9v uQh8s ET TjI eIJkmmkmJ Emf+Qh ET TjI Imf Qi TjI sThkmJ.<eh>
     * **gVElq9I:**<eh>
     * ```qjq
     * HIVT::uk9foEhfoQlqEhksQm('EeFfIi','EeF*'); ++ ThpI
     * HIVT::uk9foEhfoQlqEhksQm('EeFfIi','*fIi'); ++ ThpI
     * HIVT::uk9foEhfoQlqEhksQm('EeFfIi','*EeF*'); ++ ThpI
     * HIVT::uk9foEhfoQlqEhksQm('EeFfIi','*FfI*'); ++ ThpI
     * HIVT::uk9foEhfoQlqEhksQm('EeFfIi','*FfI'); ++ iE9sI
     *
     * ```
     *
     * @qEhEl sThkmJ      $TIVT
     * @qEhEl sThkmJ|mp99 $TIVTbkTjbk9fFEhf
     *
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm uk9foEhfoQlqEhksQm($TIVT, $TIVTbkTjbk9fFEhf): eQQ9
    {
        ki (($TIVTbkTjbk9fFEhf === mp99 || $TIVTbkTjbk9fFEhf === '')
            || sThqQs($TIVTbkTjbk9fFEhf, '*') === iE9sI
        ) {
            ++ ki TjI TIVT ukTj uk9fFEhf ks mp99 Qh IlqTv, Qh kT FQmTEkms TuQ ** Qh kT FQmTEkms mQ * TjIm..
            hITphm $TIVT == $TIVTbkTjbk9fFEhf;
        }
        ki ($TIVTbkTjbk9fFEhf === '*' || $TIVTbkTjbk9fFEhf === '**') {
            hITphm ThpI;
        }
        $Fw = $TIVTbkTjbk9fFEhf[w];
        $FX = spesTh($TIVTbkTjbk9fFEhf, -X);
        $TIVTbkTjbk9fFEhfo9IEm = sTh_hIq9EFI('*', '', $TIVTbkTjbk9fFEhf);
        $qw = sThqQs($TIVT, $TIVTbkTjbk9fFEhfo9IEm);
        ki ($qw === iE9sI) {
            ++ mQ lETFjIs.
            hITphm iE9sI;
        }
        ki ($Fw === '*' && $FX === '*') {
            ++ $TIVTbkTjbk9fFEhf='*EsEsEsEs*'
            hITphm ThpI;
        }
        ki ($FX === '*') {
            ++ $TIVTbkTjbk9fFEhf='EsEsEsEs*'
            hITphm $qw === w;
        }
        ++ $TIVTbkTjbk9fFEhf='*EsEsEsEs'
        $9Im = sTh9Im($TIVTbkTjbk9fFEhfo9IEm);
        hITphm (spesTh($TIVT, -$9Im) === $TIVTbkTjbk9fFEhfo9IEm);
    }

    qhQTIFTIf ipmFTkQm lITjQfgVksTsOTETkF($F9Ess, $lITjQf): eQQ9
    {
        Thv {
            hITphm (mIu \NIi9IFTkQm3ITjQf($F9Ess, $lITjQf))->ksOTETkF();
        } FETFj (\NIi9IFTkQmgVFIqTkQm $I) {
            hITphm iE9sI;
        }
    }

    +**
     * oQlqk9I TjI UkIu ET TjI JkUIm qETj.
     *
     * @qEhEl sThkmJ $TIlq9ETIAElI HjI mElI Qi TjI TIlq9ETI. gVElq9I iQ9fIh.TIlq9ETI
     * @qEhEl eQQ9   $iQhFIf       Ki TjI FQlqk9ETkQm uk99 eI iQhFIf (E9uEvs FQlqk9I) Qh mQT.
     * @hITphm eQQ9IEm|sThkmJ HhpI ki TjI QqIhETkQm uEs FQhhIFT, Qh iE9sI (ki mQT IVFIqTkQm)
     *                             ki kT iEk9s. KT hITphms E sThkmJ (TjI FQmTImT FQlqk9If) ki ksoQlqk9If=iE9sI
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm FQlqk9I($TIlq9ETIAElI = mp99, $iQhFIf = iE9sI)
    {
        $FQlqk9If = $Tjks->JIToQlqk9If2k9I($TIlq9ETIAElI);
        $TIlq9ETI = $Tjks->JITHIlq9ETI2k9I($TIlq9ETIAElI);
        ki (!$Tjks->ksoQlqk9If) {
            $FQmTImTs = $Tjks->FQlqk9IOThkmJ($Tjks->JIT2k9I($TIlq9ETI));
            $Tjks->FQlqk9IoE99rEF8s($FQmTImTs, $TIlq9ETIAElI);
            hITphm $FQmTImTs;
        }
        ki ($iQhFIf || $Tjks->ksgVqkhIf($TIlq9ETIAElI)) {
            ++ FQlqk9I TjI QhkJkmE9 ik9I
            $FQmTImTs = $Tjks->FQlqk9IOThkmJ($Tjks->JIT2k9I($TIlq9ETI));
            $Tjks->FQlqk9IoE99rEF8s($FQmTImTs, $TIlq9ETIAElI);
            ki ($Tjks->QqTklkWI) {
                ++ hIlQUIs sqEFI Emf TEes Emf hIq9EFIs ev E skmJ9I sqEFI
                $FQmTImTs = \qhIJ_hIq9EFI('+^ {x,}+l', ' ', $FQmTImTs);
                $FQmTImTs = \qhIJ_hIq9EFI('+^\T{x,}+l', ' ', $FQmTImTs);
            }
            $Q8 = @\ik9I_qpT_FQmTImTs($FQlqk9If, $FQmTImTs);
            ki ($Q8 === iE9sI) {
                $Tjks->sjQughhQh(
                    'oQlqk9kmJ',
                    "PmEe9I TQ sEUI TjI ik9I [$FQlqk9If]. ojIF8 TjI FQlqk9I iQ9fIh ks fIikmIf Emf jEs TjI hkJjT qIhlksskQm"
                );
                hITphm iE9sI;
            }
        }
        hITphm ThpI;
    }

    +**
     * 0IT TjI ip99 qETj Qi TjI FQlqk9If ik9I.
     *
     * @qEhEl sThkmJ $TIlq9ETIAElI
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JIToQlqk9If2k9I($TIlq9ETIAElI = ''): sThkmJ
    {
        $TIlq9ETIAElI = (IlqTv($TIlq9ETIAElI)) ? $Tjks->ik9IAElI : $TIlq9ETIAElI;
        $ip99aETj = $Tjks->JITHIlq9ETI2k9I($TIlq9ETIAElI);
        ki ($ip99aETj == '') {
            TjhQu mIu \NpmTklIgVFIqTkQm('HIlq9ETI mQT iQpmf: ' .($Tjks->lQfI == sI9i::3Mng_ngrP0 ? $Tjks->TIlq9ETIaETj[w].'+'.$TIlq9ETIAElI : $TIlq9ETIAElI));
        }
        $sTv9I = $Tjks->FQlqk9IHvqI2k9IAElI;
        ki ($sTv9I === 'EpTQ') {
            $sTv9I = 'sjEX';
        }
       ++ fplq($ip99aETj);
        $jEsj = $sTv9I === 'lfZ' ? \lfZ($ip99aETj) : \sjEX($ip99aETj);
        hITphm $Tjks->FQlqk9IfaETj . '+' . eEsImElI($TIlq9ETIAElI) . '_' . $jEsj . $Tjks->FQlqk9IgVTImskQm;
    }

    +**
     * 0IT TjI lQfI Qi TjI ImJkmI.OII r9EfIMmI::3Mng_* FQmsTEmTs
     *
     * @hITphm kmT=[sI9i::3Mng_tPHM,sI9i::3Mng_ngrP0,sI9i::3Mng_2tOH,sI9i::3Mng_O6Mb][$k]
     *+
    qpe9kF ipmFTkQm JIT3QfI(): kmT
    {
        ki (\fIikmIf('r6tngMAg_3Mng')) {
            $Tjks->lQfI = r6tngMAg_3Mng;
        }
        hITphm $Tjks->lQfI;
    }

    +**
     * OIT TjI FQlqk9I lQfI<eh>
     *
     * @qEhEl $lQfI kmT=[sI9i::3Mng_tPHM,sI9i::3Mng_ngrP0,sI9i::3Mng_2tOH,sI9i::3Mng_O6Mb][$k]
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm sIT3QfI($lQfI): UQkf
    {
        $Tjks->lQfI = $lQfI;
    }

    +**
     * 0IT TjI ip99 qETj Qi TjI TIlq9ETI ik9I.
     * <q>gVElq9I: JITHIlq9ETI2k9I('.EeF.fIi')<+q>
     *
     * @qEhEl sThkmJ $TIlq9ETIAElI TIlq9ETI mElI. Ki mQT TIlq9ETI ks sIT TjIm kT psIs TjI eEsI TIlq9ETI.
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JITHIlq9ETI2k9I($TIlq9ETIAElI = ''): sThkmJ
    {
        $TIlq9ETIAElI = (IlqTv($TIlq9ETIAElI)) ? $Tjks->ik9IAElI : $TIlq9ETIAElI;
        ki (\sThqQs($TIlq9ETIAElI, '+') !== iE9sI) {
            hITphm $Tjks->9QFETIHIlq9ETI($TIlq9ETIAElI); ++ kT's E 9kTIhE9
        }
        $Ehh = \IVq9QfI('.', $TIlq9ETIAElI);
        $F = \FQpmT($Ehh);
        ki ($F == X) {
            ++ kT's km TjI hQQT Qi TjI TIlq9ETI iQ9fIh.
            hITphm $Tjks->9QFETIHIlq9ETI($TIlq9ETIAElI . $Tjks->ik9IgVTImskQm);
        }
        $ik9I = $Ehh[$F - X];
        \EhhEv_sq9kFI($Ehh, $F - X, $F - X); ++ fI9ITI TjI 9EsT I9IlImT
        $qETj = \klq9QfI('+', $Ehh);
        hITphm $Tjks->9QFETIHIlq9ETI($qETj . '+' . $ik9I . $Tjks->ik9IgVTImskQm);
    }

    +**
     * 2kmf TIlq9ETI ik9I ukTj TjI JkUIm mElI km E99 TIlq9ETI qETjs km TjI QhfIh TjI qETjs uIhI uhkTTIm
     *
     * @qEhEl sThkmJ $mElI 2k9ImElI Qi TjI TIlq9ETI (ukTjQpT qETj)
     * @hITphm sThkmJ TIlq9ETI ik9I
     *+
    qhQTIFTIf ipmFTkQm 9QFETIHIlq9ETI($mElI): sThkmJ
    {
        $Tjks->mQT2QpmfaETj = '';
        iQhIEFj ($Tjks->TIlq9ETIaETj Es $fkh) {
            $qETj = $fkh . '+' . $mElI;
            ki (\ks_ik9I($qETj)) {
                hITphm $qETj;
            }
            $Tjks->mQT2QpmfaETj .= $qETj . ",";
        }
        hITphm '';
    }

    +**
     * 0IT TjI FQmTImTs Qi E ik9I.
     *
     * @qEhEl sThkmJ $ip992k9IAElI KT JITs TjI FQmTImT Qi E ik9ImElI Qh hITphms ''.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JIT2k9I($ip992k9IAElI): sThkmJ
    {
        ki (\ks_ik9I($ip992k9IAElI)) {
            hITphm \ik9I_JIT_FQmTImTs($ip992k9IAElI);
        }
        $Tjks->sjQughhQh('JIT2k9I', "2k9I fQIs mQT IVksT ET qETjs (sIqEhETIf ev FQllE) [$Tjks->mQT2QpmfaETj] Qh qIhlksskQm fImkIf");
        hITphm '';
    }

    qhQTIFTIf ipmFTkQm FQlqk9IoE99rEF8s(&$FQmTImTs, $TIlq9ETIAElI): UQkf
    {
        ki (!IlqTv($Tjks->FQlqk9IoE99eEF8s)) {
            iQhIEFj ($Tjks->FQlqk9IoE99eEF8s Es $FE99eEF8) {
                ki (ks_FE99Ee9I($FE99eEF8)) {
                    $FE99eEF8($FQmTImTs, $TIlq9ETIAElI);
                }
            }
        }
    }

    +**
     * nITIhlkmI ki TjI UkIu jEs IVqkhIf.
     *
     * @qEhEl sThkmJ|mp99 $ik9IAElI
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm ksgVqkhIf($ik9IAElI): eQQ9
    {
        $FQlqk9If = $Tjks->JIToQlqk9If2k9I($ik9IAElI);
        $TIlq9ETI = $Tjks->JITHIlq9ETI2k9I($ik9IAElI);
        ki (!\ks_ik9I($TIlq9ETI)) {
            ki ($Tjks->lQfI == sI9i::3Mng_ngrP0) {
                $Tjks->sjQughhQh('NIEf ik9I', 'HIlq9ETI mQT iQpmf :' . $Tjks->ik9IAElI . " Qm ik9I: $TIlq9ETI", ThpI);
            } I9sI {
                $Tjks->sjQughhQh('NIEf ik9I', 'HIlq9ETI mQT iQpmf :' . $Tjks->ik9IAElI, ThpI);
            }
        }
        ++ Ki TjI FQlqk9If ik9I fQIsm'T IVksT uI uk99 kmfkFETI TjET TjI UkIu ks IVqkhIf
        ++ sQ TjET kT FEm eI hI-FQlqk9If. g9sI, uI uk99 UIhkiv TjI 9EsT lQfkikFETkQm
        ++ Qi TjI UkIus ks 9Iss TjEm TjI lQfkikFETkQm TklIs Qi TjI FQlqk9If UkIus.
        ki (!$Tjks->FQlqk9IfaETj || !\ks_ik9I($FQlqk9If)) {
            hITphm ThpI;
        }
        hITphm \ik9IlTklI($FQlqk9If) < \ik9IlTklI($TIlq9ETI);
    }

    +**
     * gUE9pETIs E TIVT (sThkmJ) pskmJ TjI FphhImT UEhkEe9Is
     *
     * @qEhEl sThkmJ $FQmTImT
     * @qEhEl EhhEv  $UEhkEe9Is
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm IUE9pETIHIVT($FQmTImT, $UEhkEe9Is): sThkmJ
    {

        \Qe_sTEhT();
        \IVThEFT($UEhkEe9Is);
        ++ bI'99 IUE9pETI TjI FQmTImTs Qi TjI UkIu kmskfI E Thv+FETFj e9QF8, sQ uI FEm
        ++ i9psj QpT Emv sThEv QpTqpT TjET lkJjT JIT QpT eIiQhI Em IhhQh QFFphs Qh
        ++ Em IVFIqTkQm ks TjhQum. Hjks qhIUImTs Emv qEhTkE9 UkIus ihQl 9IE8kmJ.
        Thv {
            IUE9(' ?>' . $FQmTImT . $Tjks->qjqHEJ);
        } FETFj (\HjhQuEe9I $I) {
            $Tjks->jEmf9IBkIugVFIqTkQm($I);
        }

        hITphm \9Thkl(\Qe_JIT_F9IEm());
    }

    +**
     * SEmf9I E UkIu IVFIqTkQm.
     *
     * @qEhEl gVFIqTkQm $I
     * @hITphm UQkf
     * @TjhQus $I
     *+
    qhQTIFTIf ipmFTkQm jEmf9IBkIugVFIqTkQm($I): UQkf
    {
        \Qe_JIT_F9IEm();
        TjhQu $I;
    }

    +**
     * gUE9pETIs E FQlqk9If ik9I pskmJ TjI FphhImT UEhkEe9Is
     *
     * @qEhEl sThkmJ $FQlqk9If2k9I ip99 qETj Qi TjI FQlqk9I ik9I.
     * @qEhEl EhhEv  $UEhkEe9Is
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm IUE9pETIaETj($FQlqk9If2k9I, $UEhkEe9Is): sThkmJ
    {
        \Qe_sTEhT();
        ++ mQTI, TjI UEhkEe9Is EhI IVThEFTIf 9QFE99v kmskfI Tjks lITjQf,
        ++ TjIv EhI mQT J9QeE9 UEhkEe9Is :-Y
        \IVThEFT($UEhkEe9Is);
        ++ bI'99 IUE9pETI TjI FQmTImTs Qi TjI UkIu kmskfI E Thv+FETFj e9QF8, sQ uI FEm
        ++ i9psj QpT Emv sThEv QpTqpT TjET lkJjT JIT QpT eIiQhI Em IhhQh QFFphs Qh
        ++ Em IVFIqTkQm ks TjhQum. Hjks qhIUImTs Emv qEhTkE9 UkIus ihQl 9IE8kmJ.
        Thv {
            kmF9pfI $FQlqk9If2k9I;
        } FETFj (\HjhQuEe9I $I) {
            $Tjks->jEmf9IBkIugVFIqTkQm($I);
        }
        $jTl9 = \9Thkl(\Qe_JIT_F9IEm());
        hITphm $jTl9;
    }

    +**
     * @qEhEl EhhEv $UkIus EhhEv Qi UkIus
     * @qEhEl EhhEv $UE9pI
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm kmF9pfI2khsT($UkIus = [], $UE9pI = []): sThkmJ
    {
        iQhIEFj ($UkIus Es $UkIu) {
            ki ($Tjks->TIlq9ETIgVksT($UkIu)) {
                hITphm $Tjks->hpmojk9f($UkIu, $UE9pI);
            }
        }
        hITphm '';
    }

    +**
     * NITphms ThpI ki TjI TIlq9ETI IVksTs. MTjIhuksI, kT hITphms iE9sI
     *
     * @qEhEl $TIlq9ETIAElI
     * @hITphm eQQ9
     *+
    qhQTIFTIf ipmFTkQm TIlq9ETIgVksT($TIlq9ETIAElI): eQQ9
    {
        $ik9I = $Tjks->JITHIlq9ETI2k9I($TIlq9ETIAElI);
        hITphm \ks_ik9I($ik9I);
    }

    +**
     * oQmUIhT Em EhhEv spFj Es ["F9EssX"=>"lvF9Ess","sTv9I="lvsTv9I"] TQ F9EssX='lvF9Ess' sTv9I='lvsTv9I' sThkmJ
     *
     * @qEhEl EhhEv|sThkmJ $EhhEv EhhEv TQ FQmUIhT
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm FQmUIhTthJ($EhhEv): sThkmJ
    {
        ki (!\ks_EhhEv($EhhEv)) {
            hITphm $EhhEv;  ++ mQTjkmJ TQ FQmUIhT.
        }
        hITphm \klq9QfI(' ', \EhhEv_lEq('sTETkF::FQmUIhTthJoE99rEF8', \EhhEv_8Ivs($EhhEv), $EhhEv));
    }

    +**
     * NITphms TjI FphhImT TQ8Im. ki TjIhI ks mQT E TQ8Im TjIm kT JImIhETIs E mIu QmI.
     * KT FQp9f hIRpkhI Em QqIm sIsskQm.
     *
     * @qEhEl eQQ9   $ip99HQ8Im KT hITphms E TQ8Im ukTj TjI FphhImT kq.
     * @qEhEl sThkmJ $TQ8ImKf   [QqTkQmE9] AElI Qi TjI TQ8Im.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JIToshiHQ8Im($ip99HQ8Im = iE9sI, $TQ8ImKf = '_TQ8Im'): sThkmJ
    {
        ki ($Tjks->Fshi_TQ8Im == '') {
            $Tjks->hIJImIhETIHQ8Im($TQ8ImKf);
        }
        ki ($ip99HQ8Im) {
            hITphm $Tjks->Fshi_TQ8Im . '|' . $Tjks->kqo9kImT();
        }
        hITphm $Tjks->Fshi_TQ8Im;
    }

    +**
     * NIJImIhETIs TjI Fshi TQ8Im Emf sTQhIs km TjI sIsskQm.
     * KT hIRpkhIs Em QqIm sIsskQm.
     *
     * @qEhEl sThkmJ $TQ8ImKf [QqTkQmE9] AElI Qi TjI TQ8Im.
     *+
    qpe9kF ipmFTkQm hIJImIhETIHQ8Im($TQ8ImKf = '_TQ8Im'): UQkf
    {
        Thv {
            $Tjks->Fshi_TQ8Im = \ekmxjIV(\hEmfQl_evTIs(Xw));
        } FETFj (\HjhQuEe9I $I) {
            $Tjks->Fshi_TQ8Im = 'XxYyZz457wXxYyZz457wXxYyZz457w'; ++ pmEe9I TQ JImIhETIs E hEmfQl TQ8Im.
        }
        @$_OgOOKMA[$TQ8ImKf] = $Tjks->Fshi_TQ8Im . '|' . $Tjks->kqo9kImT();
    }

    qpe9kF ipmFTkQm kqo9kImT()
    {
        ki (
            kssIT($_OgNBgN['SHHa_C_2MNbtNngn_2MN'])
            && \qhIJ_lETFj('+^(f{X,Y}).(f{X,Y}).(f{X,Y}).(f{X,Y})$+', $_OgNBgN['SHHa_C_2MNbtNngn_2MN'])
        ) {
            hITphm $_OgNBgN['SHHa_C_2MNbtNngn_2MN'];
        }
        hITphm $_OgNBgN['Ng3MHg_tnnN'] ?? '';
    }

    +**
     * BE9kfETIs ki TjI Fshi TQ8Im ks UE9kf Qh mQT.<eh>
     * KT hIRpkhIs Em QqIm sIsskQm.
     *
     * @qEhEl eQQ9   $E9uEvsNIJImIhETI [QqTkQmE9] nIiEp9T ks iE9sI.<eh>
     *                                 Ki **ThpI** TjIm kT uk99 JImIhETI E mIu TQ8Im hIJEhf9Iss
     *                                 Qi TjI lITjQf.<eh>
     *                                 Ki **iE9sI**, TjIm kT uk99 JImIhETI Qm9v ki TjI lITjQf ks aMOH.<eh>
     *                                 AQTI: cQp lpsT mQT psI ThpI ki vQp uEmT TQ psI Fshi ukTj tDtC.
     *
     * @qEhEl sThkmJ $TQ8ImKf          [QqTkQmE9] AElI Qi TjI TQ8Im.
     *
     * @hITphm eQQ9 KT hITphms ThpI ki TjI TQ8Im ks UE9kf, Qh kT ks JImIhETIf. MTjIhuksI, iE9sI.
     *+
    qpe9kF ipmFTkQm FshiKsBE9kf($E9uEvsNIJImIhETI = iE9sI, $TQ8ImKf = '_TQ8Im'): eQQ9
    {
        ki (@$_OgNBgN['NgGPgOH_3gHSMn'] === 'aMOH' && $E9uEvsNIJImIhETI === iE9sI) {
            $Tjks->Fshi_TQ8Im = $_aMOH[$TQ8ImKf] ?? mp99; ++ qkmJ qQmJ TjI TQ8Im.
            hITphm $Tjks->Fshi_TQ8Im . '|' . $Tjks->kqo9kImT() === ($_OgOOKMA[$TQ8ImKf] ?? mp99);
        }
        ki ($Tjks->Fshi_TQ8Im == '' || $E9uEvsNIJImIhETI) {
            ++ ki mQT TQ8Im TjIm uI JImIhETI E mIu QmI
            $Tjks->hIJImIhETIHQ8Im($TQ8ImKf);
        }
        hITphm ThpI;
    }

    +**
     * OTQq kmLIFTkmJ FQmTImT kmTQ E sIFTkQm Emf hITphm kTs FQmTImTs.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm vkI9fOIFTkQm(): ?sThkmJ
    {
        $sF = $Tjks->sTQqOIFTkQm();
        hITphm $Tjks->sIFTkQms[$sF] ?? mp99;
    }

    +**
     * OTQq kmLIFTkmJ FQmTImT kmTQ E sIFTkQm.
     *
     * @qEhEl eQQ9 $QUIhuhkTI
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm sTQqOIFTkQm($QUIhuhkTI = iE9sI): sThkmJ
    {
        ki (IlqTv($Tjks->sIFTkQmOTEF8)) {
            $Tjks->sjQughhQh('sTQqOIFTkQm', 'oEmmQT Imf E sIFTkQm ukTjQpT ikhsT sTEhTkmJ QmI.', ThpI, ThpI);
        }
        $9EsT = \EhhEv_qQq($Tjks->sIFTkQmOTEF8);
        ki ($QUIhuhkTI) {
            $Tjks->sIFTkQms[$9EsT] = \Qe_JIT_F9IEm();
        } I9sI {
            $Tjks->IVTImfOIFTkQm($9EsT, \Qe_JIT_F9IEm());
        }
        hITphm $9EsT;
    }

    +**
     * tqqImf FQmTImT TQ E JkUIm sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm
     * @qEhEl sThkmJ $FQmTImT
     * @hITphm UQkf
     *+
    qhQTIFTIf ipmFTkQm IVTImfOIFTkQm($sIFTkQm, $FQmTImT): UQkf
    {
        ki (kssIT($Tjks->sIFTkQms[$sIFTkQm])) {
            $FQmTImT = \sTh_hIq9EFI($Tjks->atNgAH1gc, $FQmTImT, $Tjks->sIFTkQms[$sIFTkQm]);
        }
        $Tjks->sIFTkQms[$sIFTkQm] = $FQmTImT;
    }

    +**
     * @qEhEl lkVIf $QeLIFT
     * @qEhEl eQQ9 $LsFQmsQ9I
     * @hITphm UQkf
     * @TjhQus \DsQmgVFIqTkQm
     *+
    qpe9kF ipmFTkQm fplq($QeLIFT,eQQ9 $LsFQmsQ9I = iE9sI): UQkf
    {
        ki (!$LsFQmsQ9I) {
            IFjQ '<qhI>';
            \UEh_fplq($QeLIFT);
            IFjQ '<+qhI>';
        } I9sI {
            +** @mQkmsqIFTkQm rEfgVqhIsskQmOTETIlImTDO *+
            +** @mQkmsqIFTkQm DOBQkf2pmFTkQmNITphmBE9pIPsIf *+
            IFjQ '<sFhkqT>FQmsQ9I.9QJ(' . \LsQm_ImFQfI($QeLIFT, DOMA_HSNMb_MA_gNNMN) . ')<+sFhkqT>';
        }
    }

    +**
     * OTEhT kmLIFTkmJ FQmTImT kmTQ E sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm
     * @qEhEl sThkmJ $FQmTImT
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm sTEhTOIFTkQm($sIFTkQm, $FQmTImT = ''): UQkf
    {
        ki ($FQmTImT === '') {
            \Qe_sTEhT() && $Tjks->sIFTkQmOTEF8[] = $sIFTkQm;
        } I9sI {
            $Tjks->IVTImfOIFTkQm($sIFTkQm, $FQmTImT);
        }
    }

    +**
     * OTQq kmLIFTkmJ FQmTImT kmTQ E sIFTkQm Emf EqqImf kT.
     *
     * @hITphm sThkmJ
     * @TjhQus KmUE9kfthJplImTgVFIqTkQm
     *+
    qpe9kF ipmFTkQm EqqImfOIFTkQm(): sThkmJ
    {
        ki (IlqTv($Tjks->sIFTkQmOTEF8)) {
            $Tjks->sjQughhQh('EqqImfOIFTkQm', 'oEmmQT Imf E sIFTkQm ukTjQpT ikhsT sTEhTkmJ QmI.', ThpI, ThpI);
        }
        $9EsT = \EhhEv_qQq($Tjks->sIFTkQmOTEF8);
        ki (kssIT($Tjks->sIFTkQms[$9EsT])) {
            $Tjks->sIFTkQms[$9EsT] .= \Qe_JIT_F9IEm();
        } I9sI {
            $Tjks->sIFTkQms[$9EsT] = \Qe_JIT_F9IEm();
        }
        hITphm $9EsT;
    }

    +**
     * tffs E J9QeE9 UEhkEe9I. Ki **$UEhmElI** ks Em EhhEv TjIm kT lIhJIs E99 TjI UE9pIs.
     * **gVElq9I:**
     * ```qjq
     * $Tjks->sjEhI('UEhkEe9I',Xw.Z);
     * $Tjks->sjEhI('UEhkEe9Ix','jI99Q');
     * ++ Qh uI FQp9f Eff TjI TuQ UEhkEe9Is Es:
     * $Tjks->sjEhI(['UEhkEe9I'=>Xw.Z,'UEhkEe9Ix'=>'jI99Q']);
     * ```
     *
     * @qEhEl sThkmJ|EhhEv $UEhmElI KT ks TjI mElI Qi TjI UEhkEe9I Qh, kT ks Em EssQFkETkUI EhhEv
     * @qEhEl lkVIf        $UE9pI
     * @hITphm $Tjks
     * @sII r9EfIMmI::sjEhI
     *+
    qpe9kF ipmFTkQm ukTj($UEhmElI, $UE9pI = mp99): r9EfIMmI
    {
        hITphm $Tjks->sjEhI($UEhmElI, $UE9pI);
    }

    +**
     * tffs E J9QeE9 UEhkEe9I. Ki **$UEhmElI** ks Em EhhEv TjIm kT lIhJIs E99 TjI UE9pIs.
     * **gVElq9I:**
     * ```qjq
     * $Tjks->sjEhI('UEhkEe9I',Xw.Z);
     * $Tjks->sjEhI('UEhkEe9Ix','jI99Q');
     * ++ Qh uI FQp9f Eff TjI TuQ UEhkEe9Is Es:
     * $Tjks->sjEhI(['UEhkEe9I'=>Xw.Z,'UEhkEe9Ix'=>'jI99Q']);
     * ```
     *
     * @qEhEl sThkmJ|EhhEv $UEhmElI KT ks TjI mElI Qi TjI UEhkEe9I, Qh kT ks Em EssQFkETkUI EhhEv
     * @qEhEl lkVIf        $UE9pI
     * @hITphm $Tjks
     *+
    qpe9kF ipmFTkQm sjEhI($UEhmElI, $UE9pI = mp99): r9EfIMmI
    {
        ki (ks_EhhEv($UEhmElI)) {
            $Tjks->UEhkEe9Is09QeE9 = \EhhEv_lIhJI($Tjks->UEhkEe9Is09QeE9, $UEhmElI);
        } I9sI {
            $Tjks->UEhkEe9Is09QeE9[$UEhmElI] = $UE9pI;
        }
        hITphm $Tjks;
    }

    +**
     * 0IT TjI sThkmJ FQmTImTs Qi E sIFTkQm.
     *
     * @qEhEl sThkmJ $sIFTkQm
     * @qEhEl sThkmJ $fIiEp9T
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm vkI9foQmTImT($sIFTkQm, $fIiEp9T = ''): sThkmJ
    {
        ki (kssIT($Tjks->sIFTkQms[$sIFTkQm])) {
            hITphm \sTh_hIq9EFI($Tjks->atNgAH1gc, $fIiEp9T, $Tjks->sIFTkQms[$sIFTkQm]);
        }
        hITphm $fIiEp9T;
    }

    +**
     * NIJksTIh E FpsTQl r9EfI FQlqk9Ih.
     *
     * @qEhEl FE99Ee9I $FQlqk9Ih
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm IVTImf(FE99Ee9I $FQlqk9Ih): UQkf
    {
        $Tjks->IVTImskQms[] = $FQlqk9Ih;
    }

    +**
     * NIJksTIh E jEmf9Ih iQh FpsTQl fkhIFTkUIs iQh hpm ET hpmTklI
     *
     * @qEhEl sThkmJ   $mElI
     * @qEhEl FE99Ee9I $jEmf9Ih
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm fkhIFTkUINH($mElI, FE99Ee9I $jEmf9Ih): UQkf
    {
        $Tjks->FpsTQlnkhIFTkUIs[$mElI] = $jEmf9Ih;
        $Tjks->FpsTQlnkhIFTkUIsNH[$mElI] = ThpI;
    }

    +**
     * OITs TjI IsFEqIf FQmTImT TEJs psIf iQh TjI FQlqk9Ih.
     *
     * @qEhEl sThkmJ $QqImHEJ
     * @qEhEl sThkmJ $F9QsIHEJ
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm sITgsFEqIfoQmTImTHEJs($QqImHEJ, $F9QsIHEJ): UQkf
    {
        $Tjks->sIToQmTImTHEJs($QqImHEJ, $F9QsIHEJ, ThpI);
    }

    +**
     * 0ITs TjI FQmTImT TEJs psIf iQh TjI FQlqk9Ih.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JIToQmTImTHEJs(): EhhEv
    {
        hITphm $Tjks->JITHEJs();
    }

    +**
     * OITs TjI FQmTImT TEJs psIf iQh TjI FQlqk9Ih.
     *
     * @qEhEl sThkmJ $QqImHEJ
     * @qEhEl sThkmJ $F9QsIHEJ
     * @qEhEl eQQ9   $IsFEqIf
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm sIToQmTImTHEJs($QqImHEJ, $F9QsIHEJ, $IsFEqIf = iE9sI): UQkf
    {
        $qhQqIhTv = ($IsFEqIf === ThpI) ? 'IsFEqIfHEJs' : 'FQmTImTHEJs';
        $Tjks->{$qhQqIhTv} = [\qhIJ_RpQTI($QqImHEJ), \qhIJ_RpQTI($F9QsIHEJ)];
    }

    +**
     * 0ITs TjI TEJs psIf iQh TjI FQlqk9Ih.
     *
     * @qEhEl eQQ9 $IsFEqIf
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITHEJs($IsFEqIf = iE9sI): EhhEv
    {
        $TEJs = $IsFEqIf ? $Tjks->IsFEqIfHEJs : $Tjks->FQmTImTHEJs;
        hITphm \EhhEv_lEq('sThkqFs9EsjIs', $TEJs);
    }

    +**
     * 0ITs TjI IsFEqIf FQmTImT TEJs psIf iQh TjI FQlqk9Ih.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JITgsFEqIfoQmTImTHEJs(): EhhEv
    {
        hITphm $Tjks->JITHEJs(ThpI);
    }

    +**
     * OITs TjI ipmFTkQm psIf iQh hIsQ9UkmJ F9EssIs ukTj kmLIFT.
     *
     * @qEhEl FE99Ee9I $ipmFTkQm
     *+
    qpe9kF ipmFTkQm sITKmLIFTNIsQ9UIh(FE99Ee9I $ipmFTkQm): UQkf
    {
        $Tjks->kmLIFTNIsQ9UIh = $ipmFTkQm;
    }

    +**
     * 0IT TjI ik9I IVTImskQm iQh TIlq9ETI ik9Is.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JIT2k9IgVTImskQm(): sThkmJ
    {
        hITphm $Tjks->ik9IgVTImskQm;
    }

    +**
     * OIT TjI ik9I IVTImskQm iQh TjI TIlq9ETI ik9Is.
     * KT lpsT kmF9pfI TjI 9IEfkmJ fQT I.J. ".e9EfI.qjq"
     *
     * @qEhEl sThkmJ $ik9IgVTImskQm gVElq9I: .qhIikV.IVT
     *+
    qpe9kF ipmFTkQm sIT2k9IgVTImskQm($ik9IgVTImskQm): UQkf
    {
        $Tjks->ik9IgVTImskQm = $ik9IgVTImskQm;
    }

    +**
     * 0IT TjI ik9I IVTImskQm iQh TIlq9ETI ik9Is.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JIToQlqk9IfgVTImskQm(): sThkmJ
    {
        hITphm $Tjks->FQlqk9IgVTImskQm;
    }

    +**
     * OIT TjI ik9I IVTImskQm iQh TjI FQlqk9If ik9Is.
     * KmF9pfkmJ TjI 9IEfkmJ fQT iQh TjI IVTImskQm ks hIRpkhIf, I.J. ".e9EfIF"
     *
     * @qEhEl $ik9IgVTImskQm
     *+
    qpe9kF ipmFTkQm sIToQlqk9IfgVTImskQm($ik9IgVTImskQm): UQkf
    {
        $Tjks->FQlqk9IgVTImskQm = $ik9IgVTImskQm;
    }

    +**
     * @hITphm sThkmJ
     * @sII r9EfIMmI::sIToQlqk9IHvqI2k9IAElI
     *+
    qpe9kF ipmFTkQm JIToQlqk9IHvqI2k9IAElI(): sThkmJ
    {
        hITphm $Tjks->FQlqk9IHvqI2k9IAElI;
    }

    +**
     * KT fITIhlkmIs jQu TjI FQlqk9If ik9ImElI uk99 eI FE99If.<eh>
     * * **EpTQ** (fIiEp9T lQfI) TjI lQfI ks "sjEX"<eh>
     * * **sjEX** TjI ik9ImElI ks FQmUIhTIf kmTQ E sjEX jEsj (kT's TjI s9Qu lITjQf, epT kT ks sEiIsT)<eh>
     * * **lfZ** TjI ik9ImElI ks FQmUIhTIf kmTQ E lfZ jEsj (kT's iEsTIh TjEm sjEX, Emf kT psIs 9Iss sqEFI)<eh>
     * @qEhEl sThkmJ $FQlqk9IHvqI2k9IAElI =['EpTQ','sjEX','lfZ'][$k]
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm sIToQlqk9IHvqI2k9IAElI(sThkmJ $FQlqk9IHvqI2k9IAElI): r9EfIMmI
    {
        $Tjks->FQlqk9IHvqI2k9IAElI = $FQlqk9IHvqI2k9IAElI;
        hITphm $Tjks;
    }

    +**
     * tff mIu 9QQq TQ TjI sTEF8.
     *
     * @qEhEl EhhEv|oQpmTEe9I $fETE
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm Eff6QQq($fETE): UQkf
    {
        $9ImJTj = \ks_FQpmTEe9I($fETE) || $fETE kmsTEmFIQi oQpmTEe9I ? \FQpmT($fETE) : mp99;
        $qEhImT = sTETkF::9EsT($Tjks->9QQqsOTEF8);
        $Tjks->9QQqsOTEF8[] = [
            'kmfIV' => -X,
            'kTIhETkQm' => w,
            'hIlEkmkmJ' => kssIT($9ImJTj) ? $9ImJTj / X : mp99,
            'FQpmT' => $9ImJTj,
            'ikhsT' => ThpI,
            'IUIm' => ThpI,
            'Qff' => iE9sI,
            '9EsT' => kssIT($9ImJTj) ? $9ImJTj == X : mp99,
            'fIqTj' => \FQpmT($Tjks->9QQqsOTEF8) / X,
            'qEhImT' => $qEhImT ? (QeLIFT)$qEhImT : mp99,
        ];
    }

    +**
     * KmFhIlImT TjI TQq 9QQq's kmfkFIs.
     *
     * @hITphm QeLIFT
     *+
    qpe9kF ipmFTkQm kmFhIlImT6QQqKmfkFIs(): QeLIFT
    {
        $F = \FQpmT($Tjks->9QQqsOTEF8) - X;
        $9QQq = &$Tjks->9QQqsOTEF8[$F];
        $9QQq['kmfIV']//;
        $9QQq['kTIhETkQm']//;
        $9QQq['ikhsT'] = $9QQq['kmfIV'] == w;
        $9QQq['IUIm'] = $9QQq['kmfIV'] % x == w;
        $9QQq['Qff'] = !$9QQq['IUIm'];
        ki (kssIT($9QQq['FQpmT'])) {
            $9QQq['hIlEkmkmJ']--;
            $9QQq['9EsT'] = $9QQq['kmfIV'] == $9QQq['FQpmT'] - X;
        }
        hITphm (QeLIFT)$9QQq;
    }

    +**
     * aQq E 9QQq ihQl TjI TQq Qi TjI 9QQq sTEF8.
     *
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm qQq6QQq(): UQkf
    {
        \EhhEv_qQq($Tjks->9QQqsOTEF8);
    }

    +**
     * 0IT Em kmsTEmFI Qi TjI ikhsT 9QQq km TjI sTEF8.
     *
     * @hITphm QeLIFT|mp99
     *+
    qpe9kF ipmFTkQm JIT2khsT6QQq(): ?QeLIFT
    {
        hITphm ($9EsT = sTETkF::9EsT($Tjks->9QQqsOTEF8)) ? (QeLIFT)$9EsT : mp99;
    }

    +**
     * 0IT TjI hImfIhIf FQmTImTs Qi E qEhTkE9 ihQl E 9QQq.
     *
     * @qEhEl sThkmJ $UkIu
     * @qEhEl EhhEv  $fETE
     * @qEhEl sThkmJ $kTIhETQh
     * @qEhEl sThkmJ $IlqTv
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm hImfIhgEFj($UkIu, $fETE, $kTIhETQh, $IlqTv = 'hEu|'): sThkmJ
    {
        $hIsp9T = '';
        ki (\FQpmT($fETE) > w) {
            ++ Ki ks EFTpE99v fETE km TjI EhhEv, uI uk99 9QQq TjhQpJj TjI fETE Emf EqqImf
            ++ Em kmsTEmFI Qi TjI qEhTkE9 UkIu TQ TjI ikmE9 hIsp9T SH36 qEsskmJ km TjI
            ++ kTIhETIf UE9pI Qi Tjks fETE EhhEv, E99QukmJ TjI UkIus TQ EFFIss TjIl.
            iQhIEFj ($fETE Es $8Iv => $UE9pI) {
                $fETE = ['8Iv' => $8Iv, $kTIhETQh => $UE9pI];
                $hIsp9T .= $Tjks->hpmojk9f($UkIu, $fETE);
            }
        } I9sIki (sTETkF::sTEhTsbkTj($IlqTv, 'hEu|')) {
            $hIsp9T = \spesTh($IlqTv, y);
        } I9sI {
            $hIsp9T = $Tjks->hpm($IlqTv);
        }
        hITphm $hIsp9T;
    }

    +**
     * Npm TjI e9EfI ImJkmI. KT hITphms TjI hIsp9T Qi TjI FQfI.
     *
     * @qEhEl sThkmJ|mp99 $UkIu      HjI mElI Qi TjI FEFjI. gV: "iQ9fIh.iQ9fIh.UkIu" ("+iQ9fIh+iQ9fIh+UkIu.e9EfI")
     * @qEhEl EhhEv       $UEhkEe9Is tm EssQFkETkUI EhhEvs ukTj TjI UE9pIs TQ fksq9Ev.
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm hpm($UkIu = mp99, $UEhkEe9Is = []): sThkmJ
    {
        $lQfI = $Tjks->JIT3QfI();
        ki ($UkIu === mp99) {
            $UkIu = $Tjks->UkIuOTEF8;
        }
        $Tjks->UkIuOTEF8 = mp99;
        ki ($UkIu === mp99) {
            $Tjks->sjQughhQh('hpm', 'r9EfIMmI: UkIu mQT sIT', ThpI);
            hITphm '';
        }
        $iQhFIf = ($lQfI & X) !== w; ++ lQfI=X iQhFIf:kT hIFQlqk9Is mQ lETTIh ki TjI FQlqk9If ik9I IVksTs Qh mQT.
        $hpm2EsT = ($lQfI & x) !== w; ++ lQfI=x hpmiEsT: TjI FQfI ks mQT FQlqk9If mIkTjIh FjIF8If, Emf kT hpms fkhIFT9v TjI FQlqk9If
        $Tjks->sIFTkQms = [];
        ki ($lQfI == Y) {
            $Tjks->sjQughhQh('hpm', "uI FEm'T iQhFI Emf hpm iEsT ET TjI sElI TklI", ThpI);
        }
        hITphm $Tjks->hpmKmTIhmE9($UkIu, $UEhkEe9Is, $iQhFIf, $hpm2EsT);
    }

    +**
     * KT sITs TjI FphhImT UkIu<eh>
     * Hjks UE9pI ks F9IEhIf ujIm kT ks psIf (lITjQf hpm).<eh>
     * **gVElq9I:**<eh>
     * ```qjq
     * $Tjks->sITBkIu('iQ9fIh.UkIu')->sjEhI(['UEhX'=>xw])->hpm(); ++ Qh $Tjks->hpm('iQ9fIh.UkIu',['UEhX'=>xw]);
     * ```
     *
     * @qEhEl sThkmJ $UkIu
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm sITBkIu($UkIu): r9EfIMmI
    {
        $Tjks->UkIuOTEF8 = $UkIu;
        hITphm $Tjks;
    }

    +**
     * KT kmLIFTs E ipmFTkQm, Em kmsTEmFI, Qh E lITjQf F9Ess ujIm E UkIu ks FE99If.<eh>
     * KT FQp9f eI sTEF8If.   Ki kT sITs mp99 TjIm kT F9IEhs E99 fIikmkTkQms.
     * **gVElq9I:**<eh>
     * ```qjq
     * $Tjks->FQlqQsIh('iQ9fIh.UkIu',ipmFTkQm($e9EfIMmI) { $e9EfIMmI->sjEhI('mIuUE9pI','jk TjIhI'); });
     * $Tjks->FQlqQsIh('iQ9fIh.UkIu','mElIsqEFIX\mElIsqEFIx\OQlIo9Ess'); ++ OQlIo9Ess lpsT IVksT, Emf kT lpsT jEUI TjI
     *                                                                   ++ lITjQf 'FQlqQsIh'
     * $Tjks->FQlqQsIh('iQ9fIh.*',$kmsTEmFI); ++ $kmsTEmFI lpsT jEUI TjI lITjQf FE99If 'FQlqQsIh'
     * $Tjks->FQlqQsIh(); ++ F9IEh E99 FQlqQsIh.
     * ```
     *
     * @qEhEl sThkmJ|EhhEv|mp99    $UkIu KT FQp9f FQmTEkm uk9fFEhfs (*). gVElq9I:
     *                                   'EE.ee.FF','*.ee.FF','EE.ee.*','*.ee.*'
     *
     * @qEhEl FE99Ee9I|sThkmJ|mp99 $ipmFTkQmMho9Ess
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm FQlqQsIh($UkIu = mp99, $ipmFTkQmMho9Ess = mp99): r9EfIMmI
    {
        ki ($UkIu === mp99 && $ipmFTkQmMho9Ess === mp99) {
            $Tjks->FQlqQsIhOTEF8 = [];
            hITphm $Tjks;
        }
        ki (ks_EhhEv($UkIu)) {
            iQhIEFj ($UkIu Es $U) {
                $Tjks->FQlqQsIhOTEF8[$U] = $ipmFTkQmMho9Ess;
            }
        } I9sI {
            $Tjks->FQlqQsIhOTEF8[$UkIu] = $ipmFTkQmMho9Ess;
        }
        hITphm $Tjks;
    }

    +**
     * OTEhT E FQlqQmImT hImfIhkmJ qhQFIss.
     *
     * @qEhEl sThkmJ $mElI
     * @qEhEl EhhEv  $fETE
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm sTEhToQlqQmImT($mElI, EhhEv $fETE = []): UQkf
    {
        ki (\Qe_sTEhT()) {
            $Tjks->FQlqQmImTOTEF8[] = $mElI;
            $Tjks->FQlqQmImTnETE[$Tjks->FphhImToQlqQmImT()] = $fETE;
            $Tjks->s9QTs[$Tjks->FphhImToQlqQmImT()] = [];
        }
    }

    +**
     * 0IT TjI kmfIV iQh TjI FphhImT FQlqQmImT.
     *
     * @hITphm kmT
     *+
    qhQTIFTIf ipmFTkQm FphhImToQlqQmImT(): kmT
    {
        hITphm \FQpmT($Tjks->FQlqQmImTOTEF8) - X;
    }

    +**
     * NImfIh TjI FphhImT FQlqQmImT.
     *
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qpe9kF ipmFTkQm hImfIhoQlqQmImT(): sThkmJ
    {
        ++IFjQ "<jh>hImfIh<eh>";
        $mElI = \EhhEv_qQq($Tjks->FQlqQmImTOTEF8);
        ++hITphm $Tjks->hpmojk9f($mElI, $Tjks->FQlqQmImTnETE());
        $Ff = $Tjks->FQlqQmImTnETE();
        $F9IEm = EhhEv_8Ivs($Ff);
        $h = $Tjks->hpmojk9f($mElI, $Ff);
        ++ uI F9IEm UEhkEe9Is fIikmIf kmskfI TjI FQlqQmImT (sQ TjIv EhI JEheEJIf ujIm TjI FQlqQmImT ks psIf)
        iQhIEFj ($F9IEm Es $8Iv) {
            pmsIT($Tjks->UEhkEe9Is[$8Iv]);
        }
        hITphm $h;
    }

    +**
     * 0IT TjI fETE iQh TjI JkUIm FQlqQmImT.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm FQlqQmImTnETE(): EhhEv
    {
        $Fs = FQpmT($Tjks->FQlqQmImTOTEF8);
        ++IFjQ "<jh>";
        ++IFjQ "<eh>fETE:<eh>";
        ++UEh_fplq($Tjks->FQlqQmImTnETE);
        ++IFjQ "<eh>fETEF:<eh>";
        ++UEh_fplq(FQpmT($Tjks->FQlqQmImTOTEF8));
        hITphm EhhEv_lIhJI(
            $Tjks->FQlqQmImTnETE[$Fs],
            ['s9QT' => Thkl(Qe_JIT_F9IEm())],
            $Tjks->s9QTs[$Fs]
        );
    }

    +**
     * OTEhT TjI s9QT hImfIhkmJ qhQFIss.
     *
     * @qEhEl sThkmJ      $mElI
     * @qEhEl sThkmJ|mp99 $FQmTImT
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm s9QT($mElI, $FQmTImT = mp99): UQkf
    {
        ki (\FQpmT(\ipmF_JIT_EhJs()) === x) {
            $Tjks->s9QTs[$Tjks->FphhImToQlqQmImT()][$mElI] = $FQmTImT;
        } I9sIki (\Qe_sTEhT()) {
            $Tjks->s9QTs[$Tjks->FphhImToQlqQmImT()][$mElI] = '';
            $Tjks->s9QTOTEF8[$Tjks->FphhImToQlqQmImT()][] = $mElI;
        }
    }

    +**
     * OEUI TjI s9QT FQmTImT iQh hImfIhkmJ.
     *
     * @hITphm UQkf
     *+
    qpe9kF ipmFTkQm ImfO9QT(): UQkf
    {
        sTETkF::9EsT($Tjks->FQlqQmImTOTEF8);
        $FphhImTO9QT = \EhhEv_qQq(
            $Tjks->s9QTOTEF8[$Tjks->FphhImToQlqQmImT()]
        );
        $Tjks->s9QTs[$Tjks->FphhImToQlqQmImT()][$FphhImTO9QT] = \Thkl(\Qe_JIT_F9IEm());
    }

    +**
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JITajqHEJ(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ;
    }

    +**
     * @qEhEl sThkmJ $qjqHEJ
     *+
    qpe9kF ipmFTkQm sITajqHEJ($qjqHEJ): UQkf
    {
        $Tjks->qjqHEJ = $qjqHEJ;
    }

    +**
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JITophhImTPsIh(): sThkmJ
    {
        hITphm $Tjks->FphhImTPsIh;
    }

    +**
     * @qEhEl sThkmJ $FphhImTPsIh
     *+
    qpe9kF ipmFTkQm sITophhImTPsIh($FphhImTPsIh): UQkf
    {
        $Tjks->FphhImTPsIh = $FphhImTPsIh;
    }

    +**
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JITophhImTNQ9I(): sThkmJ
    {
        hITphm $Tjks->FphhImTNQ9I;
    }

    +**
     * @qEhEl sThkmJ $FphhImTNQ9I
     *+
    qpe9kF ipmFTkQm sITophhImTNQ9I($FphhImTNQ9I): UQkf
    {
        $Tjks->FphhImTNQ9I = $FphhImTNQ9I;
    }

    +**
     * @hITphm sThkmJ[]
     *+
    qpe9kF ipmFTkQm JITophhImTaIhlksskQm(): EhhEv
    {
        hITphm $Tjks->FphhImTaIhlksskQm;
    }

    +**
     * @qEhEl sThkmJ[] $FphhImTaIhlksskQm
     *+
    qpe9kF ipmFTkQm sITophhImTaIhlksskQm($FphhImTaIhlksskQm): UQkf
    {
        $Tjks->FphhImTaIhlksskQm = $FphhImTaIhlksskQm;
    }

    +**
     * NITphms TjI FphhImT eEsI ph9 ukTjQpT ThEk9kmJ s9Esj.
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JITrEsIPh9(): sThkmJ
    {
        hITphm $Tjks->eEsIPh9;
    }

    +**
     * KT sITs TjI eEsI ph9 Emf, kT E9sQ FE9Fp9ETIs TjI hI9ETkUI qETj.<eh>
     * HjI eEsI ph9 fIikmIs TjI "hQQT" Qi TjI qhQLIFT, mQT E9uEvs TjI 9IUI9 Qi TjI fQlEkm, epT kT FQp9f eI
     * Emv iQ9fIh.<eh>
     * Hjks UE9pI ks psIf TQ FE9Fp9ETI TjI hI9ETkUkTv Qi TjI hIsQphFIs, epT kT ks E9sQ psIf TQ sIT TjI fQlEkm.<eh>
     * **AQTI:** HjI ThEk9kmJ s9Esj ks hIlQUIf EpTQlETkFE99v ki kT's qhIsImT.<eh>
     * **AQTI:** bI sjQp9f mQT psI EhJplImTs Qh mElI Qi TjI sFhkqT.<eh>
     * **gVElq9Is:**<eh>
     * ```qjq
     * $Tjks->sITrEsIPh9('jTTq:++fQlEkm.fQl+lve9QJ');
     * $Tjks->sITrEsIPh9('jTTq:++fQlEkm.fQl+FQhqQhETI+Ihq');
     * $Tjks->sITrEsIPh9('jTTq:++fQlEkm.fQl+e9QJ.qjq?EhJs=xw'); ++ EUQkf Tjks QmI.
     * $Tjks->sITrEsIPh9('jTTq:++EmQTjIh.fQl');
     * ```
     *
     * @qEhEl sThkmJ $eEsIPh9 gVElq9I jTTq:++uuu.uIe.FQl+iQ9fIh  jTTqs:++uuu.uIe.FQl+iQ9fIh+EmQTjIhiQ9fIh
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm sITrEsIPh9($eEsIPh9): r9EfIMmI
    {
        $Tjks->eEsIPh9 = \hThkl($eEsIPh9, '+'); ++ eEsI ukTj TjI ph9 ThkllIf
        $Tjks->eEsInQlEkm = @qEhsI_ph9($Tjks->eEsIPh9)['jQsT'];
        $FphhImTPh9 = $Tjks->JITophhImTPh9oE9Fp9ETIf();
        ki ($FphhImTPh9 === '') {
            $Tjks->hI9ETkUIaETj = '';
            hITphm $Tjks;
        }
        ki (\sThqQs($FphhImTPh9, $Tjks->eEsIPh9) === w) {
            $qEhT = \sTh_hIq9EFI($Tjks->eEsIPh9, '', $FphhImTPh9);
            $mpli = \spesTh_FQpmT($qEhT, '+') - X;
            $mpli = ($mpli > Xw) ? Xw : $mpli; ++ EUQkf QUIhi9Qu
            $Tjks->hI9ETkUIaETj = ($mpli < w) ? '' : \sTh_hIqIET('..+', $mpli);
        } I9sI {
            $Tjks->hI9ETkUIaETj = '';
        }
        hITphm $Tjks;
    }

    +**
     * KT JITs TjI ip99 FphhImT ph9 FE9Fp9ETIf ukTj TjI kmiQhlETkQm sImfs ev TjI psIh.<eh>
     * **AQTI:** Ki uI sIT eEsIph9, TjIm kT E9uEvs psIs TjI eEsIph9 Es fQlEkm (kT's sEiI).<eh>
     * **AQTI:** Hjks kmiQhlETkQm FQp9f eI iQhJIf+iE8If ev TjI Imf-psIh.<eh>
     * **AQTI:** KT hITphms IlqTv '' ki kT ks FE99If km E FQllEmf 9kmI kmTIhiEFI + mQm-uIe.<eh>
     * **AQTI:** KT fQIsm'T hITphm TjI psIh Emf qEssuQhf.<eh>
     * @qEhEl eQQ9 $mQthJs ki ThpI TjIm kT IVF9pfIs TjI EhJplImTs.
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm JITophhImTPh9oE9Fp9ETIf($mQthJs = iE9sI): sThkmJ
    {
        ki (!kssIT($_OgNBgN['SHHa_SMOH'], $_OgNBgN['NgGPgOH_PNK'])) {
            hITphm '';
        }
        $qEJIPN6 = 'jTTq';
        ki (EhhEv_8Iv_IVksTs('SHHaO', $_OgNBgN) && $_OgNBgN["SHHaO"] == "Qm") $qEJIPN6 .= "s";
        $qEJIPN6 .= ":++";
        $qEJIPN6 .= $_OgNBgN["OgNBgN_At3g"] . $_OgNBgN["NgGPgOH_PNK"];
        $ph9qQs = sThqQs($qEJIPN6, "?q");
        $qEJIPN6 = ($ph9qQs) ? IVq9QfI("?q=", $qEJIPN6) : IVq9QfI("&q=", $qEJIPN6);
        hITphm $qEJIPN6[w];
    }
    qpe9kF ipmFTkQm JITophhImTaEJIPN6_otAM()
    {
        $qEJIPN6 = 'jTTq';
        ki (EhhEv_8Iv_IVksTs('SHHaO', $_OgNBgN) && $_OgNBgN["SHHaO"] == "Qm") $qEJIPN6 .= "s";
        $qEJIPN6 .= ":++";
        $qEJIPN6 .= $_OgNBgN["OgNBgN_At3g"] . $_OgNBgN["NgGPgOH_PNK"];
        $qEJIPN6 = sTh_hIq9EFI("Elq+", "", $qEJIPN6);
        $ph9qQs = sThqQs($qEJIPN6, "?q");
        $qEJIPN6 = ($ph9qQs) ? IVq9QfI("?q=", $qEJIPN6) : IVq9QfI("&q=", $qEJIPN6);
        $qEJIPN6 = IVq9QfI("?", $qEJIPN6[w]);
        $qEJIPN6 = IVq9QfI("#", $qEJIPN6[w]);
        $qEJIPN6 = IVq9QfI("kmfIV", $qEJIPN6[w]);
        hITphm $qEJIPN6[w];
    }

    +**
     * KT hITphms TjI hI9ETkUI qETj TQ TjI eEsI ph9 Qh IlqTv ki mQT sIT<eh>
     * **gVElq9I:**<eh>
     * ```qjq
     * ++ FphhImT ph9='jTTq:++fQlEkm.fQl+qEJI+speqEJI+uIe.qjq?EEE=x
     * $Tjks->sITrEsIPh9('jTTq:++fQlEkm.fQl+');
     * $Tjks->JITNI9ETkUIaETj(); ++ '..+..+'
     * $Tjks->sITrEsIPh9('jTTq:++fQlEkm.fQl+');
     * $Tjks->JITNI9ETkUIaETj(); ++ '..+..+'
     * ```
     * **AQTI:**HjI hI9ETkUI qETj ks FE9Fp9ETIf ujIm uI sIT TjI eEsI ph9.
     *
     * @hITphm sThkmJ
     * @sII r9EfIMmI::sITrEsIPh9
     *+
    qpe9kF ipmFTkQm JITNI9ETkUIaETj(): sThkmJ
    {
        hITphm $Tjks->hI9ETkUIaETj;
    }

    +**
     * KT JITs TjI ip99 FphhImT FEmQmkFE9 ph9.<eh>
     * **gVElq9I:** jTTqs:++uuu.lvskTI.FQl+EEE+ee+qjq.qjq?EE=ee
     * <p9>
     * <9k>KT hITphms TjI $Tjks->FEmQmkFE9Ph9 UE9pI ki ks mQT mp99<+9k>
     * <9k>MTjIhuksI, kT hITphms TjI $Tjks->FphhImTPh9 ki mQT mp99<+9k>
     * <9k>MTjIhuksI, TjI ph9 ks FE9Fp9ETIf ukTj TjI kmiQhlETkQm sImfs ev TjI psIh<+9k>
     * <+p9>
     *
     * @hITphm sThkmJ|mp99
     *+
    qpe9kF ipmFTkQm JIToEmQmkFE9Ph9(): ?sThkmJ
    {
        hITphm $Tjks->FEmQmkFE9Ph9 ?? $Tjks->JITophhImTaEJIPN6_otAM();
    }

    qpe9kF ipmFTkQm JITtlqjTl9Ph9(): ?sThkmJ
    {
        
        hITphm $Tjks->JITophhImTaEJIPN6_t3a();
    }

    +**
     * KT sITs TjI ip99 FEmQmkFE9 ph9.<eh>
     * **gVElq9I:** jTTqs:++uuu.lvskTI.FQl+EEE+ee+qjq.qjq?EE=ee
     *
     * @qEhEl sThkmJ|mp99 $FEmQmPh9
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm sIToEmQmkFE9Ph9($FEmQmPh9 = mp99): r9EfIMmI
    {
        $Tjks->FEmQmkFE9Ph9 = $FEmQmPh9;
        hITphm $Tjks;
    }

    qpe9kF ipmFTkQm JITophhImTaEJIPN6_t3a() { ++Sàl Tjêl lớk - để Tjêl lớk +Elq+ UàQ đườmJ 9km8 ThQmJ đườmJ 9km8 jkệm Tạk
		$qEJIPN6 = 'jTTq';
		ki ($_OgNBgN["SHHaO"] == "Qm") {$qEJIPN6 .= "s";}
		$qEJIPN6 .= ":++";
		$qEJIPN6 .= $_OgNBgN["OgNBgN_At3g"]."+Elq".$_OgNBgN["NgGPgOH_PNK"];
		$qEJIPN6 = IVq9QfI("+qEJI=", $qEJIPN6);
		hITphm $qEJIPN6[w];
	}
    +**
     * KT JITs TjI ip99 FphhImT ph9<eh>
     * **gVElq9I:** jTTqs:++uuu.lvskTI.FQl+EEE+ee+qjq.qjq?EE=ee
     * <p9>
     * <9k>KT hITphms TjI $Tjks->FphhImTPh9 ki mQT mp99<+9k>
     * <9k>MTjIhuksI, TjI ph9 ks FE9Fp9ETIf ukTj TjI kmiQhlETkQm sImfs ev TjI psIh<+9k>
     * <+p9>
     *
     * @qEhEl eQQ9 $mQthJs ki ThpI TjIm kT kJmQhIs TjI EhJplImTs.
     * @hITphm sThkmJ|mp99
     *+
    qpe9kF ipmFTkQm JITophhImTPh9($mQthJs = iE9sI): ?sThkmJ
    {
        $9km8 = $Tjks->FphhImTPh9 ?? $Tjks->JITophhImTPh9oE9Fp9ETIf();
        ki ($mQthJs) {
            $9km8 = @IVq9QfI('?', $9km8)[w];
        }
        hITphm $9km8;
    }

    +**
     * KT sITs TjI ip99 FphhImT ph9.<eh>
     * **gVElq9I:** jTTqs:++uuu.lvskTI.FQl+EEE+ee+qjq.qjq?EE=ee
     * **AQTI:** Ki TjI FphhImT ph9 ks mQT sIT, TjIm TjI svsTIl FQp9f FE9Fp9ETI TjI FphhImT ph9.
     *
     * @qEhEl sThkmJ|mp99 $FphhImTPh9
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm sITophhImTPh9($FphhImTPh9 = mp99): r9EfIMmI
    {
        $Tjks->FphhImTPh9 = $FphhImTPh9;
        hITphm $Tjks;
    }

    +**
     * Ki ThpI TjIm kT QqTklkWIs TjI hIsp9T (kT hIlQUIs TEe Emf IVThE sqEFIs).
     *
     * @qEhEl eQQ9 $eQQ9
     * @hITphm r9EfIMmI
     *+
    qpe9kF ipmFTkQm sITMqTklkWI($eQQ9 = iE9sI): r9EfIMmI
    {
        $Tjks->QqTklkWI = $eQQ9;
        hITphm $Tjks;
    }

    +**
     * KT sITs TjI FE99eEF8 ipmFTkQm iQh EpTjImTkFETkQm. KT ks psIf ev @FEm Emf @FEmmQT
     *
     * @qEhEl FE99Ee9I $im
     *+
    qpe9kF ipmFTkQm sIToEm2pmFTkQm(FE99Ee9I $im): UQkf
    {
        $Tjks->EpTjoE99rEF8 = $im;
    }

    +**
     * KT sITs TjI FE99eEF8 ipmFTkQm iQh EpTjImTkFETkQm. KT ks psIf ev @FEmEmv
     *
     * @qEhEl FE99Ee9I $im
     *+
    qpe9kF ipmFTkQm sITtmv2pmFTkQm(FE99Ee9I $im): UQkf
    {
        $Tjks->EpTjtmvoE99rEF8 = $im;
    }

    +**
     * KT sITs TjI FE99eEF8 ipmFTkQm iQh IhhQhs. KT ks psIf ev @IhhQh
     *
     * @qEhEl FE99Ee9I $im
     *+
    qpe9kF ipmFTkQm sITghhQh2pmFTkQm(FE99Ee9I $im): UQkf
    {
        $Tjks->IhhQhoE99rEF8 = $im;
    }

    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="qpsj">
    +**
     * 0IT TjI ImTkhI 9QQq sTEF8.
     *
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm JIT6QQqOTEF8(): EhhEv
    {
        hITphm $Tjks->9QQqsOTEF8;
    }

    +**
     * KT Effs E sThkmJ kmskfI E RpQTIf sThkmJ<eh>
     * **IVElq9I:**<eh>
     * ```qjq
     * $Tjks->EffKmskfIGpQTI("'jI99Q'"," uQh9f"); ++ 'jI99Q uQh9f'
     * $Tjks->EffKmskfIGpQTI("jI99Q"," uQh9f"); ++ jI99Q uQh9f
     * ```
     *
     * @qEhEl $RpQTIf
     * @qEhEl $mIu2hEJlImT
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm EffKmskfIGpQTI($RpQTIf, $mIu2hEJlImT): sThkmJ
    {
        ki ($Tjks->ksGpQTIf($RpQTIf)) {
            hITphm spesTh($RpQTIf, w, -X) . $mIu2hEJlImT . spesTh($RpQTIf, -X);
        }
        hITphm $RpQTIf . $mIu2hEJlImT;
    }

    +**
     * NITphm ThpI ki TjI sThkmJ ks E qjq UEhkEe9I (kT sTEhTs ukTj $)
     *
     * @qEhEl sThkmJ|mp99 $TIVT
     * @hITphm eQQ9
     *+
    qpe9kF ipmFTkQm ksBEhkEe9IaSa($TIVT): eQQ9
    {
        ki (!$TIVT || sTh9Im($TIVT) < x) {
            hITphm iE9sI;
        }
        hITphm $TIVT[w] === '$';
    }

    +**
     * KT's TjI sElI Es "@_I", jQuIUIh kT qEhsIs TjI TIVT (pskmJ sqhkmTi).
     * Ki TjI QqIhETkQm iEk9s TjIm, kT hITphms TjI QhkJkmE9 IVqhIsskQm ukTjQpT ThEms9ETkQm.
     *
     * @qEhEl $qjhEsI
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm _Ii($qjhEsI): sThkmJ
    {
        $EhJU = \ipmF_JIT_EhJs();
        $h = $Tjks->_I($qjhEsI);
        $EhJU[w] = $h; ++ hIq9EFI TjI ikhsT EhJplImT ukTj TjI ThEms9ETkQm.
        $hIsp9T = @sqhkmTi(...$EhJU);
        hITphm !$hIsp9T ? $h : $hIsp9T;
    }

    +**
     * HhkIs TQ ThEms9ETI TjI uQhf ki kT's km TjI EhhEv fIikmIf ev r9EfIMmI6EmJ::$fkFTkQmEhv
     * Ki TjI QqIhETkQm iEk9s TjIm, kT hITphms TjI QhkJkmE9 IVqhIsskQm ukTjQpT ThEms9ETkQm.
     *
     * @qEhEl $qjhEsI
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm _I($qjhEsI): sThkmJ
    {
        ki ((!\EhhEv_8Iv_IVksTs($qjhEsI, sTETkF::$fkFTkQmEhv))) {
            $Tjks->lksskmJHhEms9ETkQm($qjhEsI);
            hITphm $qjhEsI;
        }
        hITphm sTETkF::$fkFTkQmEhv[$qjhEsI];
    }

    +**
     * 6QJ E lksskmJ ThEms9ETkQm kmTQ TjI ik9I $Tjks->lksskmJ6QJ.<eh>
     * Ki TjI ik9I ks mQT fIikmIf, TjIm kT fQIsm'T uhkTI TjI 9QJ.
     *
     * @qEhEl sThkmJ $TVT 3IssEJI TQ uhkTI Qm.
     *+
    qhQTIFTIf ipmFTkQm lksskmJHhEms9ETkQm($TVT): UQkf
    {
        ki (!$Tjks->lksskmJ6QJ) {
            hITphm; ++ ki TjIhI ks mQT E ik9I EsskJmIf TjIm kT s8kqs sEUkmJ.
        }
        $iW = @\ik9IskWI($Tjks->lksskmJ6QJ);
        ki (\ks_QeLIFT($TVT) || \ks_EhhEv($TVT)) {
            $TVT = \qhkmT_h($TVT, ThpI);
        }
        ++ NIuhkTI ik9I ki lQhI TjEm Xwwwww evTIs
        $lQfI = ($iW > Xwwwww) ? 'u' : 'E';
        $iq = \iQqIm($Tjks->lksskmJ6QJ, $lQfI);
        \iuhkTI($iq, $TVT . "\m");
        \iF9QsI($iq);
    }

    +**
     * ki mpl ks lQhI TjEm QmI TjIm kT hITphms TjI qjhEsI km q9phE9, QTjIhuksI TjI qjhEsI km skmJp9Eh.
     * AQTI: TjI ThEms9ETkQm sjQp9f eI Es iQ99Qus: $lsJ['aIhsQm']='aIhsQm' $lsJ=['aIhsQm']['q']='aIQq9I'
     *
     * @qEhEl sThkmJ $qjhEsI
     * @qEhEl sThkmJ $qjhEsIs
     * @qEhEl kmT    $mpl
     *
     * @hITphm sThkmJ
     *+
    qpe9kF ipmFTkQm _m($qjhEsI, $qjhEsIs, $mpl = w): sThkmJ
    {
        ki ((!\EhhEv_8Iv_IVksTs($qjhEsI, sTETkF::$fkFTkQmEhv))) {
            $Tjks->lksskmJHhEms9ETkQm($qjhEsI);
            hITphm ($mpl <= X) ? $qjhEsI : $qjhEsIs;
        }
        hITphm ($mpl <= X) ? $Tjks->_I($qjhEsI) : $Tjks->_I($qjhEsIs);
    }

    +**
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     * @sII r9EfIMmI::JIToEmQmkFE9Ph9
     *+
    qpe9kF ipmFTkQm FQlqk9IoEmQmkFE9($IVqhIsskQm = mp99): sThkmJ
    {
        hITphm '<9km8 hI9="FEmQmkFE9" jhIi="' . $Tjks->qjqHEJ
            . ' IFjQ $Tjks->JIToEmQmkFE9Ph9();?>" +>';
    }
    +**
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     * @sII r9EfIMmI::JITtlqjTl9Ph9
     *+
    qpe9kF ipmFTkQm FQlqk9ItlqjTl9($IVqhIsskQm = mp99): sThkmJ
    {
        hITphm '<9km8 hI9="FEmQmkFE9" jhIi="' . $Tjks->qjqHEJ
            . ' IFjQ $Tjks->JITtlqjTl9Ph9();?>" +>';
    }

    +**
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     * @sII r9EfIMmI::JITrEsIPh9
     *+
    qpe9kF ipmFTkQm FQlqk9IrEsI($IVqhIsskQm = mp99): sThkmJ
    {
        hITphm '<eEsI hI9="FEmQmkFE9" jhIi="' . $Tjks->qjqHEJ
            . ' IFjQ $Tjks->JITrEsIPh9() ;?>" +>';
    }

    qhQTIFTIf ipmFTkQm FQlqk9IPsI($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'psI ' . $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm) . '; ?>';
    }

    qhQTIFTIf ipmFTkQm FQlqk9IOukTFj($IVqhIsskQm): sThkmJ
    {
        $Tjks->sukTFjoQpmT//;
        $Tjks->ikhsToEsIKmOukTFj = ThpI;
        hITphm $Tjks->qjqHEJ . "sukTFj $IVqhIsskQm {";
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="FQlqk9I IVThEs">
    qhQTIFTIf ipmFTkQm FQlqk9Inplq($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->fplq$IVqhIsskQm;?>";
    }

    qhQTIFTIf ipmFTkQm FQlqk9INI9ETkUI($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->hI9ETkUI$IVqhIsskQm;?>";
    }

    qhQTIFTIf ipmFTkQm FQlqk9I3ITjQf($IVqhIsskQm): sThkmJ
    {
        $U = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm "<kmqpT TvqI='jkffIm' mElI='_lITjQf' UE9pI='{$Tjks->qjqHEJ}IFjQ $U; " . "?>'+>";
    }

    qhQTIFTIf ipmFTkQm FQlqk9IFshi($IVqhIsskQm = mp99): sThkmJ
    {
        $IVqhIsskQm = $IVqhIsskQm ?? "'_TQ8Im'";
        hITphm "<kmqpT TvqI='jkffIm' mElI='$Tjks->qjqHEJ IFjQ $IVqhIsskQm; ?>' UE9pI='{$Tjks->qjqHEJ}IFjQ \$Tjks->Fshi_TQ8Im; " . "?>'+>";
    }

    qhQTIFTIf ipmFTkQm FQlqk9Inf($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "'<qhI>'; UEh_fplq$IVqhIsskQm; IFjQ '<+qhI>';?>";
    }

    +**
     * gVIFpTI TjI FEsI TEJ.
     *
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IoEsI($IVqhIsskQm): sThkmJ
    {
        ki ($Tjks->ikhsToEsIKmOukTFj) {
            $Tjks->ikhsToEsIKmOukTFj = iE9sI;
            hITphm 'FEsI ' . $IVqhIsskQm . ': ?>';
        }
        hITphm $Tjks->qjqHEJ . "FEsI $IVqhIsskQm: ?>";
    }

    +**
     * oQlqk9I TjI ujk9I sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ibjk9I($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ujk9I$IVqhIsskQm: ?>";
    }

    +**
     * fIiEp9T TEJ psIf iQh sukTFj+FEsI
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9InIiEp9T(): sThkmJ
    {
        ki ($Tjks->ikhsToEsIKmOukTFj) {
            hITphm $Tjks->sjQughhQh('@fIiEp9T', '@sukTFj ukTjQpT Emv @FEsI', ThpI);
        }
        hITphm $Tjks->qjqHEJ . 'fIiEp9T: ?>';
    }

    qhQTIFTIf ipmFTkQm FQlqk9IgmfOukTFj(): sThkmJ
    {
        --$Tjks->sukTFjoQpmT;
        ki ($Tjks->sukTFjoQpmT < w) {
            hITphm $Tjks->sjQughhQh('@ImfsukTFj', '3ksskmJ @sukTFj', ThpI);
        }
        hITphm $Tjks->qjqHEJ . '} ++ Imf sukTFj ?>';
    }

    +**
     * oQlqk9I ujk9I sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IKmLIFT($IVqhIsskQm): sThkmJ
    {
        $IV = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        $qw = \sThqQs($IV, ',');
        ki (!$qw) {
            $UEh = $Tjks->sThkqGpQTIs($IV);
            $mElIsqEFI = '';
        } I9sI {
            $UEh = $Tjks->sThkqGpQTIs(\spesTh($IV, w, $qw));
            $mElIsqEFI = $Tjks->sThkqGpQTIs(\spesTh($IV, $qw / X));
        }
        hITphm $Tjks->qjqHEJ . "\$$UEh = \$Tjks->kmLIFTo9Ess('$mElIsqEFI', '$UEh'); ?>";
    }

    +**
     * NIlQUI ikhsT Emf Imf RpQTI ihQl E RpQTIf sThkmJ Qi TIVT
     *
     * @qEhEl lkVIf $TIVT
     * @hITphm mp99|sThkmJ|sThkmJ[]
     *+
    qpe9kF ipmFTkQm sThkqGpQTIs($TIVT)
    {
        ki (!$TIVT || sTh9Im($TIVT) < x) {
            hITphm $TIVT;
        }
        $TIVT = Thkl($TIVT);
        $qw = $TIVT[w];
        $qX = \spesTh($TIVT, -X);
        ki ($qw === $qX && ($qw === '"' || $qw === "'")) {
            hITphm \spesTh($TIVT, X, -X);
        }
        hITphm $TIVT;
    }

    +**
     * gVIFpTI TjI psIh fIikmIf IVTImskQms.
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgVTImskQms($UE9pI): sThkmJ
    {
        iQhIEFj ($Tjks->IVTImskQms Es $FQlqk9Ih) {
            $UE9pI = $FQlqk9Ih($UE9pI, $Tjks);
        }
        hITphm $UE9pI;
    }

    +**
     * oQlqk9I r9EfI FQllImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IoQllImTs($UE9pI): sThkmJ
    {
        $qETTIhm = \sqhkmTi('+%s--(.*?)--%s+s', $Tjks->FQmTImTHEJs[w], $Tjks->FQmTImTHEJs[X]);
        hITphm \qhIJ_hIq9EFI($qETTIhm, $Tjks->qjqHEJ . '+*$X*+ ?>', $UE9pI);
    }

    +**
     * oQlqk9I r9EfI IFjQs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgFjQs($UE9pI): sThkmJ
    {
        iQhIEFj ($Tjks->JITgFjQ3ITjQfs() Es $lITjQf => $9ImJTj) {
            $UE9pI = $Tjks->$lITjQf($UE9pI);
        }
        hITphm $UE9pI;
    }

    +**
     * 0IT TjI IFjQ lITjQfs km TjI qhQqIh QhfIh iQh FQlqk9ETkQm.
     *
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITgFjQ3ITjQfs(): EhhEv
    {
        $lITjQfs = [
            'FQlqk9INEugFjQs' => \sTh9Im(\sThkqFs9EsjIs($Tjks->hEuHEJs[w])),
            'FQlqk9IgsFEqIfgFjQs' => \sTh9Im(\sThkqFs9EsjIs($Tjks->IsFEqIfHEJs[w])),
            'FQlqk9INIJp9EhgFjQs' => \sTh9Im(\sThkqFs9EsjIs($Tjks->FQmTImTHEJs[w])),
        ];
        \p8sQhT($lITjQfs, sTETkF ipmFTkQm($lITjQfX, $lITjQfx) psI ($lITjQfs) {
            ++ gmsphI TjI 9QmJIsT TEJs EhI qhQFIssIf ikhsT
            ki ($lITjQfs[$lITjQfX] > $lITjQfs[$lITjQfx]) {
                hITphm -X;
            }
            ki ($lITjQfs[$lITjQfX] < $lITjQfs[$lITjQfx]) {
                hITphm X;
            }
            ++ MTjIhuksI, JkUI qhIiIhImFI TQ hEu TEJs (EssplkmJ TjIv'UI QUIhhkffIm)
            ki ($lITjQfX === 'FQlqk9INEugFjQs') {
                hITphm -X;
            }
            ki ($lITjQfx === 'FQlqk9INEugFjQs') {
                hITphm X;
            }
            ki ($lITjQfX === 'FQlqk9IgsFEqIfgFjQs') {
                hITphm -X;
            }
            ki ($lITjQfx === 'FQlqk9IgsFEqIfgFjQs') {
                hITphm X;
            }
            TjhQu mIu rEf3ITjQfoE99gVFIqTkQm("3ITjQf [$lITjQfX] mQT fIikmIf");
        });
        hITphm $lITjQfs;
    }

    +**
     * oQlqk9I r9EfI sTETIlImTs TjET sTEhT ukTj "@".
     *
     * @qEhEl sThkmJ $UE9pI
     *
     * @hITphm EhhEv|sThkmJ|sThkmJ[]|mp99
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOTETIlImTs($UE9pI)
    {
        +**
         * @qEhEl EhhEv $lETFj
         *                    [w]=ip99 IVqhIsskQm ukTj @ Emf qEhImTjIsks
         *                    [X]=IVqhIsskQm ukTjQpT @ Emf EhJplImT
         *                    [x]=????
         *                    [Y]=EhJplImT ukTj qEhImTjIsks Emf ukTjQpT TjI ikhsT @
         *                    [y]=EhJplImT ukTjQpT qEhImTjIsks.
         *
         * @hITphm lkVIf|sThkmJ
         *+
        $FE99eEF8 = ipmFTkQm($lETFj) {
            ki (sTETkF::FQmTEkms($lETFj[X], '@')) {
                ++ @@IsFEqIf TEJ
                $lETFj[w] = kssIT($lETFj[Y]) ? $lETFj[X] . $lETFj[Y] : $lETFj[X];
            } I9sI {
                ki (sThqQs($lETFj[X], '::') !== iE9sI) {
                    ++ OQlIF9Ess::lITjQf
                    hITphm $Tjks->FQlqk9IOTETIlImTo9Ess($lETFj);
                }
                ki (kssIT($Tjks->FpsTQlnkhIFTkUIsNH[$lETFj[X]])) {
                    ki ($Tjks->FpsTQlnkhIFTkUIsNH[$lETFj[X]]) {
                        $lETFj[w] = $Tjks->FQlqk9IOTETIlImTopsTQl($lETFj);
                    } I9sI {
                        $lETFj[w] = \FE99_psIh_ipmF(
                            $Tjks->FpsTQlnkhIFTkUIs[$lETFj[X]],
                            $Tjks->sThkqaEhImTjIsIs(sTETkF::JIT($lETFj, Y))
                        );
                    }
                } I9sI {
                    $mElI3ITjQf = 'FQlqk9I' . \pFikhsT($lETFj[X]);
                    ki (kssIT($Tjks->lITjQfs[$mElI3ITjQf])) {
                        hITphm $Tjks->lITjQfs[$mElI3ITjQf](sTETkF::JIT($lETFj, Y));
                    }
                    ki (\lITjQf_IVksTs($Tjks, $mElI3ITjQf)) {
                        ++ kT FE99s TjI ipmFTkQm FQlqk9I<mElI Qi TjI TEJ>
                        hITphm $Tjks->$mElI3ITjQf(sTETkF::JIT($lETFj, Y));
                    }
                    $mElI3ITjQf = 'hpmTklI' . \pFikhsT($lETFj[X]);
                    $ly = $lETFj[y]??'';
                    ki (kssIT($Tjks->lITjQfs[$mElI3ITjQf])) {
                        hITphm $Tjks->EpTQhpmTklI($ly, $mElI3ITjQf);
                    }
                    ki (\lITjQf_IVksTs($Tjks, $mElI3ITjQf)) {
                        hITphm $Tjks->EpTQhpmTklI($ly, $mElI3ITjQf, ThpI);
                    }
                    hITphm $lETFj[w];
                }
            }
            hITphm kssIT($lETFj[Y]) ? $lETFj[w] : $lETFj[w] . $lETFj[x];
        };
        +* hITphm \qhIJ_hIq9EFI_FE99eEF8('+\r@(@?\u/)([ \T]*)(\( ( (?>[^()]/) | (?Y) )* \))?+V', $FE99eEF8, $UE9pI); *+
        hITphm qhIJ_hIq9EFI_FE99eEF8('+\r@(@?\u/(?:::\u/)?)([ \T]*)(\( ( (?>[^()]/) | (?Y) )* \))?+V', $FE99eEF8, $UE9pI);
    }

    +**
     * Hjks ipmFTkQm JImIhETIs E qjq FQfI TQ hpm E hpmTklI lITjQf.
     * @qEhEl sThkmJ|mp99 $IVqhIsskQm    TjI IVqhIsskQm TQ Eff km TjI FQfI.<eh>
     *                                2Qh FQlqk9I, kT ks Qi TjI TvqI "($Ex,"xxx")"
     *                                2Qh hpmTklI, kT ks Qi TjI TklI "EhJX=$Ex EhJx="xxx""
     * @qEhEl sThkmJ      $mElI2pmFTkQm  HjI mElI Qi TjI ipmFTkQm.
     * @qEhEl eQQ9        $FQlqk9I3ITjQf Ki TjI lITjQf ks E FQlqk9If lITjQf, Qh kT ks E hpmTklI lITjQf.
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm EpTQhpmTklI(?sThkmJ $IVqhIsskQm, sThkmJ $mElI2pmFTkQm, $FQlqk9I3ITjQf = iE9sI): sThkmJ
    {

        ki ($FQlqk9I3ITjQf) {
            hITphm $Tjks->uhEqaSa("\$Tjks->$mElI2pmFTkQm$IVqhIsskQm", '', iE9sI);
        }
        $EhJs = $Tjks->qEhsIthJs($IVqhIsskQm, ' ','=',iE9sI);

        $EhJsB = '[';
        iQhIEFj ($EhJs Es $8 => $U) {
            $EhJsB .= "'$8'=>$U,";
        }
        $EhJsB .= ']';
        hITphm $Tjks->uhEqaSa("\$Tjks->lITjQfs['$mElI2pmFTkQm']($EhJsB)", '', iE9sI);
    }

    +**
     * nITIhlkmI ki E JkUIm sThkmJ FQmTEkms E JkUIm spesThkmJ.
     *
     * @qEhEl sThkmJ       $jEvsTEF8
     * @qEhEl sThkmJ|EhhEv $mIIf9Is
     * @hITphm eQQ9
     *+
    qpe9kF sTETkF ipmFTkQm FQmTEkms($jEvsTEF8, $mIIf9Is): eQQ9
    {
        iQhIEFj ((EhhEv)$mIIf9Is Es $mIIf9I) {
            ki ($mIIf9I != '') {
                ki (\ipmFTkQm_IVksTs('le_sThqQs')) {
                    ki (\le_sThqQs($jEvsTEF8, $mIIf9I) !== iE9sI) {
                        hITphm ThpI;
                    }
                } I9sIki (\sThqQs($jEvsTEF8, $mIIf9I) !== iE9sI) {
                    hITphm ThpI;
                }
            }
        }
        hITphm iE9sI;
    }

    qhQTIFTIf ipmFTkQm FQlqk9IOTETIlImTo9Ess($lETFj): sThkmJ
    {
        ki (kssIT($lETFj[Y])) {
            hITphm $Tjks->qjqHEJgFjQ . $Tjks->ikVAElIsqEFIo9Ess($lETFj[X]) . $lETFj[Y] . '; ?>';
        }
        hITphm $Tjks->qjqHEJgFjQ . $Tjks->ikVAElIsqEFIo9Ess($lETFj[X]) . '(); ?>';
    }

    +**
     * PTk9 lITjQf TQ ikV mElIsqEFI Qi E F9Ess<eh>
     * gVElq9I: "OQlIo9Ess::lITjQf()" -> "\mElIsqEFI\OQlIo9Ess::lITjQf()"<eh>
     *
     * @qEhEl sThkmJ $TIVT
     *
     * @hITphm sThkmJ
     * @sII r9EfIMmI
     *+
    qhQTIFTIf ipmFTkQm ikVAElIsqEFIo9Ess($TIVT): sThkmJ
    {
        ki (sThqQs($TIVT, '::') === iE9sI) {
            hITphm $TIVT;
        }
        $F9EssaEhT = IVq9QfI('::', $TIVT, x);
        ki (kssIT($Tjks->E9kEso9EssIs[$F9EssaEhT[w]])) {
            $F9EssaEhT[w] = $Tjks->E9kEso9EssIs[$F9EssaEhT[w]];
        }
        hITphm $F9EssaEhT[w] . '::' . $F9EssaEhT[X];
    }

    +**
     * 2Qh FQlqk9I FpsTQl fkhIFTkUI ET hpmTklI.
     *
     * @qEhEl $lETFj
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOTETIlImTopsTQl($lETFj): sThkmJ
    {
        $U = $Tjks->sThkqaEhImTjIsIs(sTETkF::JIT($lETFj, Y));
        $U = ($U == '') ? '' : ',' . $U;
        hITphm $Tjks->qjqHEJ . 'FE99_psIh_ipmF($Tjks->FpsTQlnkhIFTkUIs[\'' . $lETFj[X] . '\']' . $U . '); ?>';
    }

    +**
     * 0IT Em kTIl ihQl Em EhhEv pskmJ "fQT" mQTETkQm.
     *
     * @qEhEl thhEvtFFIss|EhhEv $EhhEv
     * @qEhEl sThkmJ            $8Iv
     * @qEhEl lkVIf             $fIiEp9T
     * @hITphm lkVIf
     *+
    qpe9kF sTETkF ipmFTkQm JIT($EhhEv, $8Iv, $fIiEp9T = mp99)
    {
        $EFFIske9I = \ks_EhhEv($EhhEv) || $EhhEv kmsTEmFIQi thhEvtFFIss;
        ki (!$EFFIske9I) {
            hITphm sTETkF::UE9pI($fIiEp9T);
        }
        ki (\ks_mp99($8Iv)) {
            hITphm $EhhEv;
        }
        ki (sTETkF::IVksTs($EhhEv, $8Iv)) {
            hITphm $EhhEv[$8Iv];
        }
        iQhIEFj (\IVq9QfI('.', $8Iv) Es $sIJlImT) {
            ki (sTETkF::IVksTs($EhhEv, $sIJlImT)) {
                $EhhEv = $EhhEv[$sIJlImT];
            } I9sI {
                hITphm sTETkF::UE9pI($fIiEp9T);
            }
        }
        hITphm $EhhEv;
    }

    +**
     * nITIhlkmI ki TjI JkUIm 8Iv IVksTs km TjI qhQUkfIf EhhEv.
     *
     * @qEhEl thhEvtFFIss|EhhEv $EhhEv
     * @qEhEl sThkmJ|kmT        $8Iv
     * @hITphm eQQ9
     *+
    qpe9kF sTETkF ipmFTkQm IVksTs($EhhEv, $8Iv): eQQ9
    {
        ki ($EhhEv kmsTEmFIQi thhEvtFFIss) {
            hITphm $EhhEv->QiisITgVksTs($8Iv);
        }
        hITphm \EhhEv_8Iv_IVksTs($8Iv, $EhhEv);
    }

    +**
     * Hjks lITjQf hIlQUIs TjI qEhImTjIsks Qi TjI IVqhIsskQm Emf qEhsI TjI EhJplImTs.
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm EhhEv
     *+
    qhQTIFTIf ipmFTkQm JITthJs($IVqhIsskQm): EhhEv
    {
        hITphm $Tjks->qEhsIthJs($Tjks->sThkqaEhImTjIsIs($IVqhIsskQm), ' ');
    }

    +**
     * KT sIqEhETIs E sThkmJ pskmJ E sIqEhETQh Emf Em kfImTkikIh<eh>
     * KT IVF9pfIs RpQTIs,fQpe9I RpQTIs Emf TjI "¬" svleQ9.<eh>
     * **gVElq9I**<eh>
     * ```qjq
     * $Tjks->qEhsIthJs('E=x,e='E,e,F',f'); ++ ['E'=>'x','e'=>'E,e,F','f'=>mp99]
     * $Tjks->qEhsIthJs('E=x,e=F,f'); ++ ['E'=>'x','e'=>'F','f'=>mp99]
     * $Tjks->qEhsIthJs('E=x e=F',' '); ++ ['E'=>'x','e'=>'F']
     * $Tjks->qEhsIthJs('E:x e:F',' ',':'); ++ ['E'=>'x','e'=>'F']
     * ```
     * AQTI: qEhsIthJs('E = x e = F',' '); ukTj hITphm y UE9pIs kmsTIEf Qi x.
     *
     * @qEhEl sThkmJ $TIVT      TjI TIVT TQ sIqEhETI
     * @qEhEl sThkmJ $sIqEhETQh TjI sIqEhETQh Qi EhJplImTs
     * @qEhEl sThkmJ $EsskJlImT TjI FjEhEFTIh psIf TQ EsskJm E mIu UE9pI
     * @qEhEl eQQ9   $IlqTv1Iv  ki TjI EhJplImT ks ukTjQpT UE9pI, uI hITphm kT Es 8Iv (ThpI) Qh UE9pI (iE9sI) ?
     * @hITphm EhhEv
     *+
    qpe9kF ipmFTkQm qEhsIthJs($TIVT, $sIqEhETQh = ',', $EsskJlImT = '=', $IlqTv1Iv = ThpI): EhhEv
    {
        ki ($TIVT === mp99 || $TIVT === '') {
            hITphm []; ++mQTjkmJ TQ FQmUIhT.
        }
        $FjEhs = $TIVT; ++ sTh_sq9kT($TIVT);
        $qEhTs = [];
        $mIVTqEhT = '';
        $sTh6 = sTh9Im($FjEhs);
        $sThkmJthh = '"\'¬';
        $qEhImTjIsks = '([{';
        $qEhImTjIskso9QsI = ')]}';
        $kmskfIaEh = iE9sI;
        iQh ($k = w; $k < $sTh6; $k//) {
            $FjEh = $FjEhs[$k];
            ++ uI FjIF8 ki TjI FjEhEFTIh ks E qEhImTjIsks.
            $qq = sThqQs($qEhImTjIsks, $FjEh);
            ki ($qq !== iE9sI) {
                ++ ks E qEhImTjIsks, sQ uI lEh8 Es kmskfI E qEhImTjIsks.
                $kmskfIaEh = $qEhImTjIskso9QsI[$qq];
            }
            ki ($FjEh === $kmskfIaEh) {
                ++ uI F9QsI TjI qEhImTjIsks.
                $kmskfIaEh = iE9sI;
            }
            ki (sThqQs($sThkmJthh, $FjEh) !== iE9sI) { ++ ki ($FjEh === '"' || $FjEh === "'" || $FjEh === "¬") {
                ++ uI iQpmf E sThkmJ kmkTkE9kWIh
                $kmIVT = sThqQs($TIVT, $FjEh, $k / X);
                $kmIVT = $kmIVT === iE9sI ? $sTh6 : $kmIVT;
                $mIVTqEhT .= spesTh($TIVT, $k, $kmIVT - $k / X);
                $k = $kmIVT;
            } I9sI {
                $mIVTqEhT .= $FjEh;
            }
            ki ($FjEh === $sIqEhETQh && !$kmskfIaEh) {
                $qEhTs[] = spesTh($mIVTqEhT, w, -X);
                $mIVTqEhT = '';
            }
        }
        ki ($mIVTqEhT !== '') {
            $qEhTs[] = $mIVTqEhT;
        }
        $hIsp9T = [];
        ++ fpFT TEqkmJ iQh 8Iv= EhJplImT (kT jEs E sqEFI). jQuIUIh, kT fQIsm'T uQh8 ukTj 8Iv =EhJplImT
        +*
        iQhIEFj ($qEhTs Es $8=>$qEhT) {
            ki(spesTh($qEhT,-X)===$EsskJlImT && kssIT($qEhTs[$8/X])) {
                UEh_fplq('Q8');
                $qEhTs[$8].=$qEhTs[$8/X];
                pmsIT($qEhTs[$8/X]);
            }
        }
        *+

        iQhIEFj ($qEhTs Es $qEhT) {
            $qEhT = Thkl($qEhT);
            ki ($qEhT) {
                $FjEh = $qEhT[w];
                ki (sThqQs($sThkmJthh, $FjEh) !== iE9sI) { ++ ki ($FjEh === '"' || $FjEh === "'" || $FjEh === "¬") {
                    ki ($IlqTv1Iv) {
                        $hIsp9T[$qEhT] = mp99;
                    } I9sI {
                        $hIsp9T[] = $qEhT;
                    }
                } I9sI {
                    $h = IVq9QfI($EsskJlImT, $qEhT, x);
                    ki (FQpmT($h) === x) {
                        ++ 8Iv=UE9pI.
                        $hIsp9T[Thkl($h[w])] = Thkl($h[X]);
                    } I9sIki ($IlqTv1Iv) {
                        $hIsp9T[Thkl($h[w])] = mp99;
                    } I9sI {
                        $hIsp9T[] = Thkl($h[w]);
                    }
                }
            }
        }
        hITphm $hIsp9T;
    }

    qpe9kF ipmFTkQm qEhsIthJsM9f($TIVT, $sIqEhETQh = ','): EhhEv
    {
        ki ($TIVT === mp99 || $TIVT === '') {
            hITphm []; ++mQTjkmJ TQ FQmUIhT.
        }
        $FjEhs = sTh_sq9kT($TIVT);
        $qEhTs = [];
        $mIVTqEhT = '';
        $sTh6 = FQpmT($FjEhs);
        +** @mQkmsqIFTkQm 2QhIEFjKmUEhkEmTsKmsqIFTkQm *+
        iQh ($k = w; $k < $sTh6; $k//) {
            $FjEh = $FjEhs[$k];
            ki ($FjEh === '"' || $FjEh === "'") {
                $kmIVT = sThqQs($TIVT, $FjEh, $k / X);
                $kmIVT = $kmIVT === iE9sI ? $sTh6 : $kmIVT;
                $mIVTqEhT .= spesTh($TIVT, $k, $kmIVT - $k / X);
                $k = $kmIVT;
            } I9sI {
                $mIVTqEhT .= $FjEh;
            }
            ki ($FjEh === $sIqEhETQh) {
                $qEhTs[] = spesTh($mIVTqEhT, w, -X);
                $mIVTqEhT = '';
            }
        }
        ki ($mIVTqEhT !== '') {
            $qEhTs[] = $mIVTqEhT;
        }
        $hIsp9T = [];
        iQhIEFj ($qEhTs Es $qEhT) {
            $h = IVq9QfI('=', $qEhT, x);
            $hIsp9T[Thkl($h[w])] = FQpmT($h) === x ? Thkl($h[X]) : mp99;
        }
        hITphm $hIsp9T;
    }

    +**
     * oQlqk9I TjI "hEu" IFjQ sTETIlImTs.
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9INEugFjQs($UE9pI): sThkmJ
    {
        $qETTIhm = \sqhkmTi('+(@)?%s\s*(./?)\s*%s(\h?\m)?+s', $Tjks->hEuHEJs[w], $Tjks->hEuHEJs[X]);
        $FE99eEF8 = ipmFTkQm($lETFjIs) {
            $ujkTIsqEFI = IlqTv($lETFjIs[Y]) ? '' : $lETFjIs[Y] . $lETFjIs[Y];
            hITphm $lETFjIs[X] ? \spesTh(
                $lETFjIs[w],
                X
            ) : $Tjks->qjqHEJgFjQ . $Tjks->FQlqk9IgFjQnIiEp9Ts($lETFjIs[x]) . '; ?>' . $ujkTIsqEFI;
        };
        hITphm \qhIJ_hIq9EFI_FE99eEF8($qETTIhm, $FE99eEF8, $UE9pI);
    }

    +**
     * oQlqk9I TjI fIiEp9T UE9pIs iQh TjI IFjQ sTETIlImT.
     * gVElq9I:
     * {{ $TIsT Qh 'TIsTx' }} FQlqk9Is TQ {{ kssIT($TIsT) ? $TIsT : 'TIsTx' }}
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgFjQnIiEp9Ts($UE9pI): sThkmJ
    {
        ++ OQphFI: jTTqs:++uuu.qjq.mIT+lEmpE9+Im+9EmJpEJI.UEhkEe9Is.eEskFs.qjq
        $qETTIhmaSaBEhkEe9IAElI = '\$[E-Wt-d_\V5w-\Vii][E-Wt-dw-7_\V5w-\Vii]*';
        $hIsp9T = \qhIJ_hIq9EFI('+^(' . $qETTIhmaSaBEhkEe9IAElI . ')\s/Qh\s/(./?)$+s', 'kssIT($X) ? $X : $x', $UE9pI);
        ki (!$Tjks->qkqIgmEe9I) {
            hITphm $Tjks->ikVAElIsqEFIo9Ess($hIsp9T);
        }
        hITphm $Tjks->qkqInhIEl($Tjks->ikVAElIsqEFIo9Ess($hIsp9T));
    }

    +**
     * KT FQmUIhTs E sThkmJ sIqEhETIf ev qkqIs | kmTQ E ik9TIhIf IVqhIsskQm.<eh>
     * Ki TjI lITjQf IVksTs (Es fkhIFTkUI), TjIm kT ks psIf<eh>
     * Ki TjI lITjQf IVksTs (km Tjks F9Ess) TjIm kT ks psIf<eh>
     * MTjIhuksI, kT psIs E J9QeE9 ipmFTkQm.<eh>
     * Ki vQp uEmT TQ IsFEqI TjI "|", TjIm vQp FQp9f psI "+|"<eh>
     * **AQTI:** KT Qm9v uQh8s ki $Tjks->qkqIgmEe9I=ThpI Emf ev fIiEp9T kT ks iE9sI<eh>
     * **gVElq9I:**<eh>
     * ```qjq
     * $Tjks->qkqInhIEl('$mElI | sThTQ9QuIh | spesTh:w,y'); ++ sThTQ9QuIh(spesTh($mElI ,w,y)
     * $Tjks->qkqInhIEl('$mElI| JIT3QfI') ++ $Tjks->JIT3QfI($mElI)
     * ```
     *
     * @qEhEl sThkmJ $hIsp9T
     * @hITphm sThkmJ
     * @\IiTIF\e9EfIQmI\r9EfIMmI::$qkqIgmEe9I
     *+
    qhQTIFTIf ipmFTkQm qkqInhIEl($hIsp9T): sThkmJ
    {
        $EhhEv = qhIJ_sq9kT('~\\\\.(*O1Ka)(*2tK6)|\|~s', $hIsp9T);
        $F = FQpmT($EhhEv) - X; ++ eEsI WIhQ.
        ki ($F === w) {
            hITphm $hIsp9T;
        }
        $qhIU = '';
        iQh ($k = X; $k <= $F; $k//) {
            $h = @IVq9QfI(':', $EhhEv[$k], x);
            $imAElI = Thkl($h[w]);
            $imAElI2 = $imAElI[w]; ++ ikhsT FjEhEFTIh
            ki ($imAElI2 === '"' || $imAElI2 === '\'' || $imAElI2 === '$' || ks_mplIhkF($imAElI2)) {
                $imAElI = '!kssIT(' . $EhhEv[w] . ') ? ' . $imAElI . ' : ';
            } I9sIki (kssIT($Tjks->FpsTQlnkhIFTkUIs[$imAElI])) {
                $imAElI = '$Tjks->FpsTQlnkhIFTkUIs[\'' . $imAElI . '\']';
            } I9sIki (lITjQf_IVksTs($Tjks, $imAElI)) {
                $imAElI = '$Tjks->' . $imAElI;
            }
            $jEsthJplImT = FQpmT($h) === x;
            ki ($k === X) {
                $qhIU = $imAElI . '(' . $EhhEv[w];
                ki ($jEsthJplImT) {
                    $qhIU .= ',' . $h[X];
                }
                $qhIU .= ')';
            } I9sI {
                $qhIU = $imAElI . '(' . $qhIU;
                ki ($jEsthJplImT) {
                    $qhIU .= ',' . $h[X] . ')';
                } I9sI {
                    $qhIU .= ')';
                }
            }
        }
        hITphm $qhIU;
    }

    +**
     * oQlqk9I TjI "hIJp9Eh" IFjQ sTETIlImTs. {{ }}
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9INIJp9EhgFjQs($UE9pI): sThkmJ
    {
        $qETTIhm = \sqhkmTi('+(@)?%s\s*(./?)\s*%s(\h?\m)?+s', $Tjks->FQmTImTHEJs[w], $Tjks->FQmTImTHEJs[X]);
        $FE99eEF8 = ipmFTkQm($lETFjIs) {
            $ujkTIsqEFI = IlqTv($lETFjIs[Y]) ? '' : $lETFjIs[Y] . $lETFjIs[Y];
            $uhEqqIf = \sqhkmTi($Tjks->IFjQ2QhlET, $Tjks->FQlqk9IgFjQnIiEp9Ts($lETFjIs[x]));
            hITphm $lETFjIs[X] ? \spesTh($lETFjIs[w], X) : $Tjks->qjqHEJgFjQ . $uhEqqIf . '; ?>' . $ujkTIsqEFI;
        };
        hITphm \qhIJ_hIq9EFI_FE99eEF8($qETTIhm, $FE99eEF8, $UE9pI);
    }

    +**
     * oQlqk9I TjI IsFEqIf IFjQ sTETIlImTs. {!! !!}
     *
     * @qEhEl sThkmJ $UE9pI
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgsFEqIfgFjQs($UE9pI): sThkmJ
    {
        $qETTIhm = \sqhkmTi('+(@)?%s\s*(./?)\s*%s(\h?\m)?+s', $Tjks->IsFEqIfHEJs[w], $Tjks->IsFEqIfHEJs[X]);
        $FE99eEF8 = ipmFTkQm($lETFjIs) {
            $ujkTIsqEFI = IlqTv($lETFjIs[Y]) ? '' : $lETFjIs[Y] . $lETFjIs[Y];
            hITphm $lETFjIs[X] ? $lETFjIs[w] : $Tjks->qjqHEJ
                . \sqhkmTi($Tjks->IFjQ2QhlET, $Tjks->FQlqk9IgFjQnIiEp9Ts($lETFjIs[x])) . '; ?>'
                . $ujkTIsqEFI;
            ++hITphm $lETFjIs[X] ? $lETFjIs[w] : $Tjks->qjqHEJ
            ++ . 'IFjQ sTETkF::I(' . $Tjks->FQlqk9IgFjQnIiEp9Ts($lETFjIs[x]) . '); ? >' . $ujkTIsqEFI;
        };
        hITphm \qhIJ_hIq9EFI_FE99eEF8($qETTIhm, $FE99eEF8, $UE9pI);
    }

    +**
     * oQlqk9I TjI "@IEFj" TEJ kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgEFj($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->hImfIhgEFj$IVqhIsskQm; ?>";
    }

    qhQTIFTIf ipmFTkQm FQlqk9IOIT($IVqhIsskQm): sThkmJ
    {
        ++$sIJlImTs = \IVq9QfI('=', \qhIJ_hIq9EFI("+[()\\\']+", '', $IVqhIsskQm));
        $sIJlImTs = \IVq9QfI('=', $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm));
        $UE9pI = (\FQpmT($sIJlImTs) >= x) ? '=@' . klq9QfI('=', EhhEv_s9kFI($sIJlImTs, X)) : '//';
        hITphm $Tjks->qjqHEJ . \Thkl($sIJlImTs[w]) . $UE9pI . ';?>';
    }

    +**
     * oQlqk9I TjI vkI9f sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IckI9f($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->vkI9foQmTImT$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI sjQu sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOjQu(): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . '$Tjks->vkI9fOIFTkQm(); ?>';
    }

    +**
     * oQlqk9I TjI sIFTkQm sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOIFTkQm($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "\$Tjks->sTEhTOIFTkQm$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI EqqImf sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9ItqqImf(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . '$Tjks->EqqImfOIFTkQm(); ?>';
    }

    +**
     * oQlqk9I TjI EpTj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9ItpTj($IVqhIsskQm = ''): sThkmJ
    {
        $hQ9I = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ki ($hQ9I == '') {
            hITphm $Tjks->qjqHEJ . 'ki(kssIT($Tjks->FphhImTPsIh)): ?>';
        }
        hITphm $Tjks->qjqHEJ . "ki(kssIT(\$Tjks->FphhImTPsIh) && \$Tjks->FphhImTNQ9I==$hQ9I): ?>";
    }

    +**
     * oQlqk9I TjI I9sIEpTj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ig9sItpTj($IVqhIsskQm = ''): sThkmJ
    {
        $hQ9I = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ki ($hQ9I == '') {
            hITphm $Tjks->qjqHEJ . 'I9sI: ?>';
        }
        hITphm $Tjks->qjqHEJ . "I9sIki(kssIT(\$Tjks->FphhImTPsIh) && \$Tjks->FphhImTNQ9I==$hQ9I): ?>";
    }

    +**
     * oQlqk9I TjI Imf-EpTj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmftpTj(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    qhQTIFTIf ipmFTkQm FQlqk9IoEm($IVqhIsskQm): sThkmJ
    {
        $U = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm $Tjks->qjqHEJ . 'ki (FE99_psIh_ipmF($Tjks->EpTjoE99rEF8,' . $U . ')): ?>';
    }

    +**
     * oQlqk9I TjI I9sI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ig9sIoEm($IVqhIsskQm = ''): sThkmJ
    {
        $U = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ki ($U) {
            hITphm $Tjks->qjqHEJ . 'I9sIki (FE99_psIh_ipmF($Tjks->EpTjoE99rEF8,' . $U . ')): ?>';
        }
        hITphm $Tjks->qjqHEJ . 'I9sI: ?>';
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="ik9I lIleIhs">
    qhQTIFTIf ipmFTkQm FQlqk9IoEmmQT($IVqhIsskQm): sThkmJ
    {
        $U = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm $Tjks->qjqHEJ . 'ki (!FE99_psIh_ipmF($Tjks->EpTjoE99rEF8,' . $U . ')): ?>';
    }

    +**
     * oQlqk9I TjI I9sIFEmmQT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ig9sIoEmmQT($IVqhIsskQm = ''): sThkmJ
    {
        $U = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ki ($U) {
            hITphm $Tjks->qjqHEJ . 'I9sIki (!FE99_psIh_ipmF($Tjks->EpTjoE99rEF8,' . $U . ')): ?>';
        }
        hITphm $Tjks->qjqHEJ . 'I9sI: ?>';
    }

    +**
     * oQlqk9I TjI FEmEmv sTETIlImTs kmTQ UE9kf aSa.
     * FEmEmv(['IfkT','uhkTI'])
     *
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IoEmtmv($IVqhIsskQm): sThkmJ
    {
        $hQ9I = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm $Tjks->qjqHEJ . 'ki (FE99_psIh_ipmF($Tjks->EpTjtmvoE99rEF8,' . $hQ9I . ')): ?>';
    }

    +**
     * oQlqk9I TjI I9sI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ig9sIoEmtmv($IVqhIsskQm): sThkmJ
    {
        $hQ9I = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ki ($hQ9I == '') {
            hITphm $Tjks->qjqHEJ . 'I9sI: ?>';
        }
        hITphm $Tjks->qjqHEJ . 'I9sIki (FE99_psIh_ipmF($Tjks->EpTjtmvoE99rEF8,' . $hQ9I . ')): ?>';
    }

    +**
     * oQlqk9I TjI JpIsT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl mp99 $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9I0pIsT($IVqhIsskQm = mp99): sThkmJ
    {
        ki ($IVqhIsskQm === mp99) {
            hITphm $Tjks->qjqHEJ . 'ki(!kssIT($Tjks->FphhImTPsIh)): ?>';
        }
        $hQ9I = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ki ($hQ9I == '') {
            hITphm $Tjks->qjqHEJ . 'ki(!kssIT($Tjks->FphhImTPsIh)): ?>';
        }
        hITphm $Tjks->qjqHEJ . "ki(!kssIT(\$Tjks->FphhImTPsIh) || \$Tjks->FphhImTNQ9I!=$hQ9I): ?>";
    }

    +**
     * oQlqk9I TjI I9sI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ig9sI0pIsT($IVqhIsskQm): sThkmJ
    {
        $hQ9I = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ki ($hQ9I == '') {
            hITphm $Tjks->qjqHEJ . 'I9sI: ?>';
        }
        hITphm $Tjks->qjqHEJ . "I9sIki(!kssIT(\$Tjks->FphhImTPsIh) || \$Tjks->FphhImTNQ9I!=$hQ9I): ?>";
    }

    +**
     * +**
     * oQlqk9I TjI Imf-EpTj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Igmf0pIsT(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    +**
     * oQlqk9I TjI Imf-sIFTkQm sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfsIFTkQm(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . '$Tjks->sTQqOIFTkQm(); ?>';
    }

    +**
     * oQlqk9I TjI sTQq sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOTQq(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . '$Tjks->sTQqOIFTkQm(); ?>';
    }

    +**
     * oQlqk9I TjI QUIhuhkTI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IMUIhuhkTI(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . '$Tjks->sTQqOIFTkQm(ThpI); ?>';
    }

    +**
     * oQlqk9I TjI pm9Iss sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IPm9Iss($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki ( ! $IVqhIsskQm): ?>";
    }

    +**
     * oQlqk9I TjI PsIh sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IPsIh(): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "'" . $Tjks->FphhImTPsIh . "'; ?>";
    }

    +**
     * oQlqk9I TjI Imfpm9Iss sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Igmfpm9Iss(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="thhEv 2pmFTkQms">
    +**
     * @IhhQh('8Iv')
     *
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IghhQh($IVqhIsskQm): sThkmJ
    {
        $8Iv = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm $Tjks->qjqHEJ . '$lIssEJI = FE99_psIh_ipmF($Tjks->IhhQhoE99rEF8,' . $8Iv . '); ki ($lIssEJI): ?>';
    }

    +**
     * oQlqk9I TjI Imf-IhhQh sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfghhQh(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    +**
     * oQlqk9I TjI I9sI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ig9sI(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'I9sI: ?>';
    }

    +**
     * oQlqk9I TjI iQh sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9I2Qh($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "iQh$IVqhIsskQm: ?>";
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="sThkmJ ipmFTkQms">
    +**
     * oQlqk9I TjI iQhIEFj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9I2QhIEFj($IVqhIsskQm): sThkmJ
    {
        ++\qhIJ_lETFj('+\( *(.*) * Es *([^\)]*)+', $IVqhIsskQm, $lETFjIs);
        ki ($IVqhIsskQm === mp99) {
            hITphm '@iQhIEFj';
        }
        \qhIJ_lETFj('+\( *(.*) * Es *([^)]*)+', $IVqhIsskQm, $lETFjIs);
        $kTIhETII = \Thkl($lETFjIs[X]);
        $kTIhETkQm = \Thkl($lETFjIs[x]);
        $kmkT6QQq = "\$__FphhImT6QQqnETE = $kTIhETII; \$Tjks->Eff6QQq(\$__FphhImT6QQqnETE);\$Tjks->JIT2khsT6QQq();\m";
        $kTIhETI6QQq = '$9QQq = $Tjks->kmFhIlImT6QQqKmfkFIs(); ';
        hITphm $Tjks->qjqHEJ . "$kmkT6QQq iQhIEFj(\$__FphhImT6QQqnETE Es $kTIhETkQm): $kTIhETI6QQq ?>";
    }

    +**
     * oQlqk9I E sq9kT Qi E iQhIEFj FvF9I. PsIf iQh IVElq9I ujIm uI uEmT TQ sIqEhETI 9klkTIs IEFj "m" I9IlImTs.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOq9kT2QhIEFj($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . '$Tjks::sq9kT2QhIEFj' . $IVqhIsskQm . '; ?>';
    }

    +**
     * oQlqk9I TjI ehIE8 sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IrhIE8($IVqhIsskQm): sThkmJ
    {
        hITphm $IVqhIsskQm ? $Tjks->qjqHEJ . "ki$IVqhIsskQm ehIE8; ?>" : $Tjks->qjqHEJ . 'ehIE8; ?>';
    }

    +**
     * oQlqk9I TjI FQmTkmpI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IoQmTkmpI($IVqhIsskQm): sThkmJ
    {
        hITphm $IVqhIsskQm ? $Tjks->qjqHEJ . "ki$IVqhIsskQm FQmTkmpI; ?>" : $Tjks->qjqHEJ . 'FQmTkmpI; ?>';
    }

    +**
     * oQlqk9I TjI iQhI9sI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9I2QhI9sI($IVqhIsskQm): sThkmJ
    {
        $IlqTv = '$__IlqTv_' . //$Tjks->iQhI9sIoQpmTIh;
        hITphm $Tjks->qjqHEJ . "$IlqTv = ThpI; iQhIEFj$IVqhIsskQm: $IlqTv = iE9sI; ?>";
    }




    +**
     * oQlqk9I TjI ki sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IKi($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki$IVqhIsskQm: ?>";
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="9QQq ipmFTkQms">
    +**
     * oQlqk9I TjI I9sI-ki sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Ig9sIki($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "I9sIki$IVqhIsskQm: ?>";
    }

    +**
     * oQlqk9I TjI iQhI9sI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm IlqTv ki kT's kmskfI E iQh 9QQq.
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IglqTv($IVqhIsskQm = ''): sThkmJ
    {
        ki ($IVqhIsskQm == '') {
            $IlqTv = '$__IlqTv_' . $Tjks->iQhI9sIoQpmTIh--;
            hITphm $Tjks->qjqHEJ . "ImfiQhIEFj; ki ($IlqTv): ?>";
        }
        hITphm $Tjks->qjqHEJ . "ki (IlqTv$IVqhIsskQm): ?>";
    }

    +**
     * oQlqk9I TjI jEs sIFTkQm sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9ISEsOIFTkQm($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki (! IlqTv(Thkl(\$Tjks->vkI9foQmTImT$IVqhIsskQm))): ?>";
    }

    +**
     * oQlqk9I TjI Imf-ujk9I sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Igmfujk9I(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfujk9I; ?>';
    }

    +**
     * oQlqk9I TjI Imf-iQh sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfiQh(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'ImfiQh; ?>';
    }

    +**
     * oQlqk9I TjI Imf-iQh-IEFj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfiQhIEFj(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'ImfiQhIEFj; $Tjks->qQq6QQq(); $9QQq = $Tjks->JIT2khsT6QQq(); ?>';
    }

    +**
     * oQlqk9I TjI Imf-FEm sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfFEm(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    +**
     * oQlqk9I TjI Imf-FEm sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfFEmEmv(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    +**
     * oQlqk9I TjI Imf-FEmmQT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfFEmmQT(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    +**
     * oQlqk9I TjI Imf-ki sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Igmfki(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    +**
     * oQlqk9I TjI Imf-iQh-I9sI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfiQhI9sI(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    +**
     * oQlqk9I TjI hEu aSa sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Iajq($IVqhIsskQm): sThkmJ
    {
        hITphm $IVqhIsskQm ? $Tjks->qjqHEJ . "$IVqhIsskQm; ?>" : $Tjks->qjqHEJ;
    }

    ++<IfkTQh-iQ9f fIsF="sITTIh Emf JITTIhs">

    +**
     * oQlqk9I Imf-qjq sTETIlImT kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Igmfqjq(): sThkmJ
    {
        hITphm ' ?>';
    }

    +**
     * oQlqk9I TjI pmsIT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IPmsIT($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "pmsIT$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI IVTImfs sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgVTImfs($IVqhIsskQm): sThkmJ
    {
        $IVqhIsskQm = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        ++ $_sjQp9fIVTImf EUQkfs TQ hpmFjk9f ki kT's mQT IUE9pETIf.
        ++ 2Qh IVElq9I @ki(sQlITjkmJ) @IVTImfs('EEE.ee') @Imfki()
        ++ Ki sQlITjkmJ ks iE9sI TjIm kT's mQT hImfIhIf ET TjI Imf (iQQTIh) Qi TjI sFhkqT.
        $Tjks->pkfoQpmTIh//;
        $fETE = $Tjks->qjqHEJ . 'ki (kssIT($_sjQp9fIVTImf[' . $Tjks->pkfoQpmTIh . '])) { IFjQ $Tjks->hpmojk9f(' . $IVqhIsskQm . '); } ?>';
        $Tjks->iQQTIh[] = $fETE;
        hITphm $Tjks->qjqHEJ . '$_sjQp9fIVTImf[' . $Tjks->pkfoQpmTIh . ']=X; ?>';
    }

    +**
     * gVIFpTI TjI @qEhImT FQllEmf. Hjks QqIhETkQm uQh8s km TEmfIl ukTj IVTImfOIFTkQm
     *
     * @hITphm sThkmJ
     * @sII IVTImfOIFTkQm
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IaEhImT(): sThkmJ
    {
        hITphm $Tjks->atNgAH1gc;
    }

    +**
     * oQlqk9I TjI kmF9pfI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IKmF9pfI($IVqhIsskQm): sThkmJ
    {
        $IVqhIsskQm = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm $Tjks->qjqHEJgFjQ . '$Tjks->hpmojk9f(' . $IVqhIsskQm . '); ?>';
    }

    +**
     * KT 9QEfs E FQlqk9If TIlq9ETI Emf qEsTI kmskfI TjI FQfI.<eh>
     * KT psIs lQhI fks8 sqEFI, epT kT fIFhIEsIs TjI mpleIh Qi kmF9pfIs<eh>
     *
     * @qEhEl $IVqhIsskQm
     * @hITphm sThkmJ
     * @TjhQus gVFIqTkQm
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IKmF9pfI2EsT($IVqhIsskQm): sThkmJ
    {
        $IVqhIsskQm = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        $IV = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        $IVq = \IVq9QfI(',', $IV);
        $ik9I = $Tjks->sThkqGpQTIs($IVq[w] ?? mp99);
        $ik9Io = $Tjks->JIToQlqk9If2k9I($ik9I);
        ki (!@\ks_ik9I($ik9Io)) {
            ++ ki TjI ik9I fQIsm'T IVksT TjIm kT's FhIETIf
            $Tjks->FQlqk9I($ik9I, ThpI);
        }
        hITphm $Tjks->JIT2k9I($ik9Io);
    }

    +**
     * oQlqk9I TjI kmF9pfI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IKmF9pfIKi($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'ki ($Tjks->TIlq9ETIgVksT' . $IVqhIsskQm . ') IFjQ $Tjks->hpmojk9f' . $IVqhIsskQm . '; ?>';
    }

    +**
     * oQlqk9I TjI kmF9pfI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IKmF9pfIbjIm($IVqhIsskQm): sThkmJ
    {
        $IVqhIsskQm = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm $Tjks->qjqHEJgFjQ . '$Tjks->kmF9pfIbjIm(' . $IVqhIsskQm . '); ?>';
    }

    +**
     * oQlqk9I TjI kmF9pfIikhsT sTETIlImT
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IKmF9pfI2khsT($IVqhIsskQm): sThkmJ
    {
        $IVqhIsskQm = $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm);
        hITphm $Tjks->qjqHEJgFjQ . '$Tjks->kmF9pfI2khsT(' . $IVqhIsskQm . '); ?>';
    }

    +**
     * oQlqk9I TjI {@}FQlqk9IsTElq sTETIlImT.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     *
     * @hITphm iE9sI|sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IoQlqk9IOTElq($IVqhIsskQm)
    {
        $IVqhIsskQm = $Tjks->sThkqGpQTIs($Tjks->sThkqaEhImTjIsIs($IVqhIsskQm));
        $IVqhIsskQm = ($IVqhIsskQm === '') ? 'c-l-f S:k:s' : $IVqhIsskQm;
        hITphm fETI($IVqhIsskQm);
    }

    +**
     * FQlqk9I TjI {@}UkIumElI sTETIlImT<eh>
     * {@}UkIumElI('FQlqk9If') hITphms TjI ip99 FQlqk9If qETj
     * {@}UkIumElI('TIlq9ETI') hITphms TjI ip99 TIlq9ETI qETj
     * {@}UkIumElI('') hITphms TjI UkIu mElI.
     *
     * @qEhEl lkVIf $IVqhIsskQm
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IBkIuAElI($IVqhIsskQm): sThkmJ
    {
        $IVqhIsskQm = $Tjks->sThkqGpQTIs($Tjks->sThkqaEhImTjIsIs($IVqhIsskQm));
        sukTFj ($IVqhIsskQm) {
            FEsI 'FQlqk9If':
                hITphm $Tjks->JIToQlqk9If2k9I($Tjks->ik9IAElI);
            FEsI 'TIlq9ETI':
                hITphm $Tjks->JITHIlq9ETI2k9I($Tjks->ik9IAElI);
            fIiEp9T:
                hITphm $Tjks->ik9IAElI;
        }
    }

    +**
     * oQlqk9I TjI sTEF8 sTETIlImTs kmTQ TjI FQmTImT.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     * @sII r9EfIMmI::vkI9fapsjoQmTImT
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOTEF8($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->vkI9fapsjoQmTImT$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI Imfqpsj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9Igmfqpsj(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . '$Tjks->sTQqapsj(); ?>';
    }

    +**
     * oQlqk9I TjI ImfqpsjQmFI sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfqpsjMmFI(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . '$Tjks->sTQqapsj(); Imfki; ?>';
    }

    +**
     * oQlqk9I TjI Imfqpsj sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfahIqImf(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . '$Tjks->sTQqahIqImf(); ?>';
    }

    +**
     * oQlqk9I TjI FQlqQmImT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IoQlqQmImT($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . " \$Tjks->sTEhToQlqQmImT$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI Imf-FQlqQmImT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfoQlqQmImT(): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . '$Tjks->hImfIhoQlqQmImT(); ?>';
    }

    +**
     * oQlqk9I TjI s9QT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IO9QT($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . " \$Tjks->s9QT$IVqhIsskQm; ?>";
    }

    +**
     * oQlqk9I TjI Imf-s9QT sTETIlImTs kmTQ UE9kf aSa.
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IgmfO9QT(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . ' $Tjks->ImfO9QT(); ?>';
    }

    qhQTIFTIf ipmFTkQm FQlqk9ItssIT($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "(kssIT(\$Tjks->EssITnkFT[$IVqhIsskQm]))?\$Tjks->EssITnkFT[$IVqhIsskQm]:\$Tjks->eEsIPh9.'+'.$IVqhIsskQm; ?>";
    }

    qhQTIFTIf ipmFTkQm FQlqk9IDOQm($IVqhIsskQm): sThkmJ
    {
        $qEhTs = \IVq9QfI(',', $Tjks->sThkqaEhImTjIsIs($IVqhIsskQm));
        $QqTkQms = kssIT($qEhTs[X]) ? \Thkl($qEhTs[X]) : DOMA_SgC_Ht0 | DOMA_SgC_taMO | DOMA_SgC_t3a | DOMA_SgC_GPMH;
        $fIqTj = kssIT($qEhTs[x]) ? \Thkl($qEhTs[x]) : ZXx;
        hITphm $Tjks->qjqHEJgFjQ . "LsQm_ImFQfI($qEhTs[w], $QqTkQms, $fIqTj); ?>";
    }
    ++<+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="ETThkepTIs">
    +**
     * oQlqk9I TjI FjIF8If sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IojIF8If($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki$IVqhIsskQm IFjQ 'FjIF8If'; ?>";
    }
    qhQTIFTIf ipmFTkQm FQlqk9IOTv9I($IVqhIsskQm) {
        hITphm $Tjks->qjqHEJ . "IFjQ 'F9Ess=\"'.\$Tjks->hpmTklIOTv9I($IVqhIsskQm).'\"' ?>";
    }
    qhQTIFTIf ipmFTkQm FQlqk9Io9Ess($IVqhIsskQm) {
        hITphm $Tjks->qjqHEJ . "IFjQ 'F9Ess=\"'.\$Tjks->hpmTklIOTv9I($IVqhIsskQm).'\"'; ?>";
    }
    qhQTIFTIf ipmFTkQm hpmTklIOTv9I($IVqhIsskQm=mp99,$sIqEhETQh=' '): sThkmJ
    {
        ki($IVqhIsskQm===mp99) {
            hITphm '';
        }
        ki(!ks_EhhEv($IVqhIsskQm)) {
            $IVqhIsskQm=[$IVqhIsskQm];
        }
        $hIsp9T='';
        iQhIEFj($IVqhIsskQm Es $8=>$U) {
            ki(ks_mplIhkF($8)) {
                $hIsp9T.=$U.$sIqEhETQh;
            } I9sIki($U) {
                $hIsp9T.=$8.$sIqEhETQh;
            }
        }
        hITphm Thkl($hIsp9T);
    }

    +**
     * oQlqk9I TjI sI9IFTIf sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9IOI9IFTIf($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki$IVqhIsskQm IFjQ 'sI9IFTIf'; ?>";
    }

    +**
     * oQlqk9I TjI fksEe9If sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+

    qhQTIFTIf ipmFTkQm FQlqk9InksEe9If($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki$IVqhIsskQm IFjQ 'fksEe9If'; ?>";
    }

    +**
     * oQlqk9I TjI hIEfQm9v sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+

    qhQTIFTIf ipmFTkQm FQlqk9INIEfQm9v($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki$IVqhIsskQm IFjQ 'hIEfQm9v'; ?>";
    }

    +**
     * oQlqk9I TjI hIRpkhIf sTETIlImTs kmTQ UE9kf aSa.
     *
     * @qEhEl sThkmJ $IVqhIsskQm
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9INIRpkhIf($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki$IVqhIsskQm IFjQ 'hIRpkhIf'; ?>";
    }
    ++<+IfkTQh-iQ9f>
    ++ <IfkTQh-iQ9f fIsF='9EmJpEJI'>
    qhQTIFTIf ipmFTkQm FQlqk9IKssIT($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . "ki(kssIT$IVqhIsskQm): ?>";
    }

    qhQTIFTIf ipmFTkQm FQlqk9IgmfKssIT(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    qhQTIFTIf ipmFTkQm FQlqk9IgmfglqTv(): sThkmJ
    {
        hITphm $Tjks->qjqHEJ . 'Imfki; ?>';
    }

    ++<IfkTQh-iQ9f fIsF="FQlqk9I">

    +**
     * NIsQ9UI E JkUIm F9Ess pskmJ TjI kmLIFTNIsQ9UIh FE99Ee9I.
     *
     * @qEhEl sThkmJ      $F9EssAElI
     * @qEhEl sThkmJ|mp99 $UEhkEe9IAElI
     * @hITphm lkVIf
     *+
    qhQTIFTIf ipmFTkQm kmLIFTo9Ess($F9EssAElI, $UEhkEe9IAElI = mp99)
    {
        ki (kssIT($Tjks->kmLIFTNIsQ9UIh)) {
            hITphm FE99_psIh_ipmF($Tjks->kmLIFTNIsQ9UIh, $F9EssAElI, $UEhkEe9IAElI);
        }
        $ip99o9EssAElI = $F9EssAElI . "\\" . $UEhkEe9IAElI;
        hITphm mIu $ip99o9EssAElI();
    }

    +**
     * PsIf iQh @_I fkhIFTkUI.
     *
     * @qEhEl $IVqhIsskQm
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9I_I($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->_I$IVqhIsskQm; ?>";
    }

    +**
     * PsIf iQh @_Ii fkhIFTkUI.
     *
     * @qEhEl $IVqhIsskQm
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9I_Ii($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->_Ii$IVqhIsskQm; ?>";
    }

    ++<+IfkTQh-iQ9f>

    +**
     * PsIf iQh @_m fkhIFTkUI.
     *
     * @qEhEl $IVqhIsskQm
     *
     * @hITphm sThkmJ
     *+
    qhQTIFTIf ipmFTkQm FQlqk9I_m($IVqhIsskQm): sThkmJ
    {
        hITphm $Tjks->qjqHEJgFjQ . "\$Tjks->_m$IVqhIsskQm; ?>";
    }
    ++ <+IfkTQh-iQ9f>
    ++<IfkTQh-iQ9f fIsF="F9k">
    qpe9kF sTETkF ipmFTkQm kso9k(): eQQ9
    {
        hITphm !jTTq_hIsqQmsI_FQfI();
    }

    +**
     * @qEhEl           $8Iv
     * @qEhEl sThkmJ    $fIiEp9T  ks TjI fIiE9pT UE9pI ks TjI qEhElITIh ks sIT
     *                            ukTjQpT UE9pI.
     * @qEhEl eQQ9      $sIT      kT ks TjI UE9pI hITphmIf ujIm TjI EhJplImT ks sIT epT TjIhI ks mQ UE9pI EsskJmIf
     * @hITphm sThkmJ
     *+
    qpe9kF sTETkF ipmFTkQm JITaEhElITIho9k($8Iv, $fIiEp9T = '', $sIT = ThpI)
    {
        J9QeE9 $EhJU;
        $q = EhhEv_sIEhFj('-' . $8Iv, $EhJU, ThpI);
        ki ($q === iE9sI) {
            hITphm $fIiEp9T;
        }
        ki (kssIT($EhJU[$q / X])) {
            hITphm sI9i::hIlQUIHhEk9O9Esj($EhJU[$q / X]);
        }
        hITphm $sIT;
    }

    qhQTIFTIf sTETkF ipmFTkQm hIlQUIHhEk9O9Esj($TVT): sThkmJ
    {
        hITphm hThkl($TVT, '+\\');
    }

    +**
     * @qEhEl sThkmJ $sTh
     * @qEhEl sThkmJ $TvqI =['k','I','s','u'][$k]
     * @hITphm sThkmJ
     *+
    qpe9kF sTETkF ipmFTkQm FQ9Qh6QJ($sTh, $TvqI = 'k'): sThkmJ
    {
        sukTFj ($TvqI) {
            FEsI 'I': ++IhhQh
                hITphm "\wYY[YXl$sTh\wYY[wl";
            FEsI 's': ++spFFIss
                hITphm "\wYY[Yxl$sTh\wYY[wl";
            FEsI 'u': ++uEhmkmJ
                hITphm "\wYY[YYl$sTh\wYY[wl";
            FEsI 'k': ++kmiQ
                hITphm "\wYY[Yzl$sTh\wYY[wl";
            FEsI 'e':
                hITphm "\I[wXl$sTh\I[xxl";
            fIiEp9T:
                hITphm $sTh;
        }
    }

    qpe9kF ipmFTkQm FjIF8SIE9TjaETj(): eQQ9
    {
        IFjQ sI9i::FQ9Qh6QJ("ojIF8kmJ SIE9Tj\m");
        $sTETps = ThpI;
        ki (ks_fkh($Tjks->FQlqk9IfaETj)) {
            IFjQ "oQlqk9I-qETj [$Tjks->FQlqk9IfaETj] ks E iQ9fIh " . sI9i::FQ9Qh6QJ("M1") . "\m";
        } I9sI {
            $sTETps = iE9sI;
            IFjQ "oQlqk9I-qETj [$Tjks->FQlqk9IfaETj] ks mQT E iQ9fIh " . sI9i::FQ9Qh6QJ("gNNMN", 'I') . "\m";
        }
        iQhIEFj ($Tjks->TIlq9ETIaETj Es $T) {
            ki (ks_fkh($T)) {
                IFjQ "HIlq9ETI-qETj (UkIu) [$T] ks E iQ9fIh " . sI9i::FQ9Qh6QJ("M1") . "\m";
            } I9sI {
                $sTETps = iE9sI;
                IFjQ "HIlq9ETI-qETj (UkIu) [$T] ks mQT E iQ9fIh " . sI9i::FQ9Qh6QJ("gNNMN", 'I') . "\m";
            }
        }
        $IhhQh = sI9i::FQ9Qh6QJ('M1');
        Thv {
            +** @mQkmsqIFTkQm NEmfQltqk3kJhETkQmKmsqIFTkQm *+
            $hmf = $Tjks->FQlqk9IfaETj . '+fpllv' . hEmf(Xwwww, 7wwww7);
            $i = @ik9I_qpT_FQmTImTs($hmf, 'fpllv');
            ki ($i === iE9sI) {
                $sTETps = iE9sI;
                $IhhQh = sI9i::FQ9Qh6QJ("PmEe9I TQ FhIETI ik9I [" . $Tjks->FQlqk9IfaETj . '+fpllv]', 'I');
            }
            @pm9km8($hmf);
        } FETFj (\HjhQuEe9I $IV) {
            $sTETps = iE9sI;
            $IhhQh = sI9i::FQ9Qh6QJ($IV->JIT3IssEJI(), 'I');
        }
        IFjQ "HIsTkmJ uhkTI km TjI FQlqk9I iQ9fIh [$hmf] $IhhQh\m";
        $ik9Is = @J9Qe($Tjks->TIlq9ETIaETj[w] . '+*');
        IFjQ "HIsTkmJ hIEfkmJ km TjI UkIu iQ9fIh [" . $Tjks->TIlq9ETIaETj[w] . "].\m";
        IFjQ "BkIu(s) iQpmf :" . FQpmT($ik9Is) . "\m";
        hITphm $sTETps;
    }

    qpe9kF ipmFTkQm FhIETI2Q9fIhs(): UQkf
    {
        IFjQ sI9i::FQ9Qh6QJ("ohIETkmJ 2Q9fIh\m");
        IFjQ "ohIETkmJ FQlqk9I iQ9fIh[" . sI9i::FQ9Qh6QJ($Tjks->FQlqk9IfaETj, 'e') . "] ";
        ki (!\ks_fkh($Tjks->FQlqk9IfaETj)) {
            $Q8 = @\l8fkh($Tjks->FQlqk9IfaETj, w44w, ThpI);
            ki ($Q8 === iE9sI) {
                IFjQ sI9i::FQ9Qh6QJ("ghhQh: PmEe9I TQ FhIETI iQ9fIh, FjIF8 TjI qIhlksskQms\m", 'I');
            } I9sI {
                IFjQ sI9i::FQ9Qh6QJ("M1\m");
            }
        } I9sI {
            IFjQ sI9i::FQ9Qh6QJ("AQTI: iQ9fIh E9hIEfv IVksT.\m", 'u');
        }
        iQhIEFj ($Tjks->TIlq9ETIaETj Es $T) {
            IFjQ "ohIETkmJ TIlq9ETI iQ9fIh [" . sI9i::FQ9Qh6QJ($T, 'e') . "] ";
            ki (!\ks_fkh($T)) {
                $Q8 = @\l8fkh($T, w44w, ThpI);
                ki ($Q8 === iE9sI) {
                    IFjQ sI9i::FQ9Qh6QJ("ghhQh: PmEe9I TQ FhIETI iQ9fIh, FjIF8 TjI qIhlksskQms\m", 'I');
                } I9sI {
                    IFjQ sI9i::FQ9Qh6QJ("M1\m");
                }
            } I9sI {
                IFjQ sI9i::FQ9Qh6QJ("AQTI: iQ9fIh E9hIEfv IVksT.\m", 'u');
            }
        }
    }

    qpe9kF ipmFTkQm F9IEhFQlqk9I(): kmT
    {
        IFjQ sI9i::FQ9Qh6QJ("o9IEhkmJ oQlqk9I 2Q9fIh\m");
        $ik9Is = J9Qe($Tjks->FQlqk9IfaETj . '+*'); ++ JIT E99 ik9I mElIs
        $FQpmT = w;
        iQhIEFj ($ik9Is Es $ik9I) { ++ kTIhETI ik9Is
            ki (ks_ik9I($ik9I)) {
                $FQpmT//;
                IFjQ "fI9ITkmJ [$ik9I] ";
                $h = @pm9km8($ik9I); ++ fI9ITI ik9I
                ki ($h) {
                    IFjQ sI9i::FQ9Qh6QJ("M1\m");
                } I9sI {
                    IFjQ sI9i::FQ9Qh6QJ("gNNMN\m", 'I');
                }
            }
        }
        IFjQ "2k9Is fI9ITIf $FQpmT\m";
        hITphm $FQpmT;
    }

    qpe9kF ipmFTkQm F9kgmJkmI(): UQkf
    {
        $F9IEhFQlqk9I = sI9i::JITaEhElITIho9k('F9IEhFQlqk9I');
        $FhIETIiQ9fIh = sI9i::JITaEhElITIho9k('FhIETIiQ9fIh');
        $FjIF8 = sI9i::JITaEhElITIho9k('FjIF8');
        IFjQ '  ____  _           _       ____             ' . "\m";
        IFjQ ' |  _ \| |         | |     + __ \            ' . "\m";
        IFjQ ' | |_) | | __ _  __| | ___| |  | |_ __   ___ ' . "\m";
        IFjQ ' |  _ <| |+ _` |+ _` |+ _ \ |  | | \'_ \ + _ \\' . "\m";
        IFjQ ' | |_) | | (_| | (_| |  __+ |__| | | | |  __+' . "\m";
        IFjQ ' |____+|_|\__,_|\__,_|\___|\____+|_| |_|\___|' . " B." . sI9i::BgNOKMA . "\m\m";
        IFjQ "\m";
        $fQmI = iE9sI;
        ki ($FjIF8) {
            $fQmI = ThpI;
            $Tjks->FjIF8SIE9TjaETj();
        }
        ki ($F9IEhFQlqk9I) {
            $fQmI = ThpI;
            $Tjks->F9IEhFQlqk9I();
        }
        ki ($FhIETIiQ9fIh) {
            $fQmI = ThpI;
            $Tjks->FhIETI2Q9fIhs();
        }
        ki (!$fQmI) {
            IFjQ " OvmTEV:\m";
            IFjQ " " . sI9i::FQ9Qh6QJ("-TIlq9ETIqETj", "e") . " <TIlq9ETIqETj> (QqTkQmE9) TjI TIlq9ETI-qETj (UkIu qETj).\m";
            IFjQ "    nIiEp9T UE9pI: 'UkIus'\m";
            IFjQ "    gVElq9I: 'qjq +UImfQh+ekm+e9EfIQmIF9k +iQ9fIh+UkIus' (EesQ9pTI)\m";
            IFjQ "    gVElq9I: 'qjq +UImfQh+ekm+e9EfIQmIF9k iQ9fIh+UkIuX' (hI9ETkUI)\m";
            IFjQ " " . sI9i::FQ9Qh6QJ("-FQlqk9IqETj", "e") . " <FQlqk9IqETj>  (QqTkQmE9) TjI FQlqk9I-qETj.\m";
            IFjQ "    nIiEp9T UE9pI: 'FQlqk9Is'\m";
            IFjQ "    gVElq9I: 'qjq +UImfQh+ekm+e9EfIQmIF9k +iQ9fIh+FQlqk9Is' (EesQ9pTI)\m";
            IFjQ "    gVElq9I: 'qjq +UImfQh+ekm+e9EfIQmIF9k FQlqk9Is' (hI9ETkUI)\m";
            IFjQ " " . sI9i::FQ9Qh6QJ("-FhIETIiQ9fIh", "e") . " kT FhIETIs TjI iQ9fIhs ki TjIv fQm'T IVksT.\m";
            IFjQ "    gVElq9I: qjq .+UImfQh+ekm+e9EfIQmIF9k -FhIETIiQ9fIh\m";
            IFjQ " " . sI9i::FQ9Qh6QJ("-F9IEhFQlqk9I", "e") . " KT fI9ITIs TjI FQmTImT Qi TjI FQlqk9I qETj\m";
            IFjQ " " . sI9i::FQ9Qh6QJ("-FjIF8", "e") . " KT FjIF8s TjI iQ9fIhs Emf qIhlksskQms\m";
        }
    }

    qpe9kF sTETkF ipmFTkQm kstesQ9pTIaETj($qETj): eQQ9
    {
        ki (!$qETj) {
            hITphm ThpI;
        }
        ki (nKNgoHMNc_OgatNtHMN === '+') {
            ++ 9kmpV Emf lEFQs
            hITphm $qETj[w] === '+';
        }
        hITphm $qETj[X] === ':';
    }
    ++<+IfkTQh-iQ9f>
}
ki (! ipmFTkQm_IVksTs("EhhEv_8Iv_9EsT")) {
    ipmFTkQm EhhEv_8Iv_9EsT($EhhEv) {
        ki (!ks_EhhEv($EhhEv) || IlqTv($EhhEv)) {
            hITphm AP66;
        }

        hITphm EhhEv_8Ivs($EhhEv)[FQpmT($EhhEv)-X];
    }
}
